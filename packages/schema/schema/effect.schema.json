{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "trigger": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "OnBattleStart",
              "BeforeSort",
              "BeforeUseSkillCheck",
              "AfterUseSkillCheck",
              "BeforeMultiHit",
              "BeforeHit",
              "OnCritPreDamage",
              "PreDamage",
              "OnHit",
              "OnMiss",
              "AfterAttacked",
              "OnDefeat",
              "SkillUseEnd",
              "OnBeforeCalculateDamage",
              "OnDamage",
              "Shield",
              "PostDamage",
              "OnCritPostDamage",
              "OnTransform",
              "OnTransformEnd",
              "BeforeTransform",
              "AfterTransform",
              "TurnStart",
              "TurnEnd",
              "OnBeforeAddMark",
              "OnAnyMarkAdded",
              "OnRemoveMark",
              "OnMarkCreated",
              "OnMarkDestroy",
              "OnMarkDurationEnd",
              "OnStackBefore",
              "OnStack",
              "OnBeforeConsumeStack",
              "OnConsumeStack",
              "OnBeforeHeal",
              "OnHeal",
              "BeforeRageGain",
              "BeforeRageLoss",
              "OnRageGain",
              "OnRageLoss",
              "OnSwitchIn",
              "OnSwitchOut",
              "OnOwnerSwitchIn",
              "OnOwnerSwitchOut",
              "BeforeEffect",
              "AfterEffect"
            ]
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "OnBattleStart",
                "BeforeSort",
                "BeforeUseSkillCheck",
                "AfterUseSkillCheck",
                "BeforeMultiHit",
                "BeforeHit",
                "OnCritPreDamage",
                "PreDamage",
                "OnHit",
                "OnMiss",
                "AfterAttacked",
                "OnDefeat",
                "SkillUseEnd",
                "OnBeforeCalculateDamage",
                "OnDamage",
                "Shield",
                "PostDamage",
                "OnCritPostDamage",
                "OnTransform",
                "OnTransformEnd",
                "BeforeTransform",
                "AfterTransform",
                "TurnStart",
                "TurnEnd",
                "OnBeforeAddMark",
                "OnAnyMarkAdded",
                "OnRemoveMark",
                "OnMarkCreated",
                "OnMarkDestroy",
                "OnMarkDurationEnd",
                "OnStackBefore",
                "OnStack",
                "OnBeforeConsumeStack",
                "OnConsumeStack",
                "OnBeforeHeal",
                "OnHeal",
                "BeforeRageGain",
                "BeforeRageLoss",
                "OnRageGain",
                "OnRageLoss",
                "OnSwitchIn",
                "OnSwitchOut",
                "OnOwnerSwitchIn",
                "OnOwnerSwitchOut",
                "BeforeEffect",
                "AfterEffect"
              ]
            }
          }
        ]
      },
      "priority": {
        "type": "number"
      },
      "apply": {
        "anyOf": [
          {
            "$ref": "#/$defs/__schema0"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/$defs/__schema0"
            }
          }
        ]
      },
      "condition": {
        "$ref": "#/$defs/__schema1"
      },
      "consumesStacks": {
        "type": "number"
      },
      "tags": {
        "default": [],
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "required": [
      "id",
      "trigger",
      "priority",
      "apply"
    ]
  },
  "$defs": {
    "__schema0": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "TODO"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "conditional"
            },
            "condition": {
              "$ref": "#/$defs/__schema1"
            },
            "trueOperator": {
              "$ref": "#/$defs/__schema0"
            },
            "falseOperator": {
              "$ref": "#/$defs/__schema0"
            }
          },
          "required": [
            "type",
            "condition",
            "trueOperator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "dealDamage"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "heal"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "executeKill"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addMark"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "mark": {
              "$ref": "#/$defs/__schema5"
            },
            "duration": {
              "$ref": "#/$defs/__schema5"
            },
            "stack": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "mark"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addStacks"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "consumeStacks"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "modifyStat"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "statType": {
              "$ref": "#/$defs/__schema5"
            },
            "delta": {
              "default": 0,
              "$ref": "#/$defs/__schema5"
            },
            "percent": {
              "default": 0,
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "statType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addAttributeModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "stat": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseType": {
              "$ref": "#/$defs/__schema5"
            },
            "scope": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseId": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "stat",
            "modifierType",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addDynamicAttributeModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "stat": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "observableValue": {
              "$ref": "#/$defs/__schema2"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseType": {
              "$ref": "#/$defs/__schema5"
            },
            "scope": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseId": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "stat",
            "modifierType",
            "observableValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addClampMaxModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "stat": {
              "$ref": "#/$defs/__schema5"
            },
            "maxValue": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "stat",
            "maxValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addClampMinModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "stat": {
              "$ref": "#/$defs/__schema5"
            },
            "minValue": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "stat",
            "minValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addClampModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "stat": {
              "$ref": "#/$defs/__schema5"
            },
            "minValue": {
              "$ref": "#/$defs/__schema5"
            },
            "maxValue": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseType": {
              "$ref": "#/$defs/__schema5"
            },
            "scope": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseId": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "stat"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addSkillAttributeModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "attribute": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseType": {
              "$ref": "#/$defs/__schema5"
            },
            "scope": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseId": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "attribute",
            "modifierType",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addDynamicSkillAttributeModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "attribute": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "observableValue": {
              "$ref": "#/$defs/__schema2"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "attribute",
            "modifierType",
            "observableValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addSkillClampMaxModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "attribute": {
              "$ref": "#/$defs/__schema5"
            },
            "maxValue": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "attribute",
            "maxValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addSkillClampMinModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "attribute": {
              "$ref": "#/$defs/__schema5"
            },
            "minValue": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "attribute",
            "minValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addSkillClampModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "attribute": {
              "$ref": "#/$defs/__schema5"
            },
            "minValue": {
              "$ref": "#/$defs/__schema5"
            },
            "maxValue": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "attribute",
            "minValue",
            "maxValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "statStageBuff"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "statType": {
              "$ref": "#/$defs/__schema5"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            },
            "strategy": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "statType",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "clearStatStage"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "statType": {
              "$ref": "#/$defs/__schema5"
            },
            "cleanStageStrategy": {
              "default": "positive",
              "type": "string",
              "enum": [
                "all",
                "positive",
                "negative",
                "reverse"
              ]
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "reverseStatStage"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "statType": {
              "$ref": "#/$defs/__schema5"
            },
            "cleanStageStrategy": {
              "default": "positive",
              "type": "string",
              "enum": [
                "all",
                "positive",
                "negative",
                "reverse"
              ]
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "transferStatStage"
            },
            "source": {
              "$ref": "#/$defs/__schema2"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "statType": {
              "$ref": "#/$defs/__schema5"
            },
            "cleanStageStrategy": {
              "default": "negative",
              "type": "string",
              "enum": [
                "all",
                "positive",
                "negative",
                "reverse"
              ]
            }
          },
          "required": [
            "type",
            "source",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addRage"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setRage"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "amplifyPower"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addPower"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addCritRate"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addMultihitResult"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMultihit"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "transferMark"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "mark": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "dynamic"
                },
                "selector": {
                  "$ref": "#/$defs/__schema2"
                }
              },
              "required": [
                "type",
                "selector"
              ]
            }
          },
          "required": [
            "type",
            "target",
            "mark"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "stun"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setSureHit"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "type",
            "target",
            "priority"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setSureCrit"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "type",
            "target",
            "priority"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setSureMiss"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "type",
            "target",
            "priority"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setSureNoCrit"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "type",
            "target",
            "priority"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setIgnoreShield"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "destroyMark"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "modifyStackResult"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "newStacks": {
              "$ref": "#/$defs/__schema5"
            },
            "newDuration": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setSkill"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "dynamic"
                },
                "selector": {
                  "$ref": "#/$defs/__schema2"
                }
              },
              "required": [
                "type",
                "selector"
              ]
            },
            "updateConfig": {
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "preventDamage"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setActualTarget"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "newTarget": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "dynamic"
                },
                "selector": {
                  "$ref": "#/$defs/__schema2"
                }
              },
              "required": [
                "type",
                "selector"
              ]
            }
          },
          "required": [
            "type",
            "target",
            "newTarget"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addModified"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "delta": {
              "$ref": "#/$defs/__schema5"
            },
            "percent": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "delta",
            "percent"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addThreshold"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "min": {
              "$ref": "#/$defs/__schema5"
            },
            "max": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "overrideMarkConfig"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "config": {
              "type": "object",
              "properties": {
                "duration": {
                  "default": -1,
                  "type": "number"
                },
                "persistent": {
                  "default": true,
                  "type": "boolean"
                },
                "maxStacks": {
                  "default": 1,
                  "type": "integer",
                  "minimum": -9007199254740991,
                  "maximum": 9007199254740991
                },
                "stackable": {
                  "default": false,
                  "type": "boolean"
                },
                "stackStrategy": {
                  "default": "extend",
                  "type": "string",
                  "enum": [
                    "stack",
                    "refresh",
                    "extend",
                    "max",
                    "replace",
                    "none",
                    "remove"
                  ]
                },
                "destroyable": {
                  "default": true,
                  "type": "boolean"
                },
                "isShield": {
                  "default": false,
                  "type": "boolean"
                },
                "keepOnSwitchOut": {
                  "default": false,
                  "type": "boolean"
                },
                "transferOnSwitch": {
                  "default": false,
                  "type": "boolean"
                },
                "inheritOnFaint": {
                  "default": false,
                  "type": "boolean"
                },
                "mutexGroup": {
                  "type": "string"
                }
              },
              "additionalProperties": {}
            }
          },
          "required": [
            "type",
            "target",
            "config"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkDuration"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkStack"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkMaxStack"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkPersistent"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkStackable"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkStackStrategy"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkDestroyable"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkIsShield"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkKeepOnSwitchOut"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkTransferOnSwitch"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setMarkInheritOnFaint"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setStatLevelMarkLevel"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setValue"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addValue"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "toggle"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setConfig"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "key": {
              "$ref": "#/$defs/__schema5"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "key",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setIgnoreStageStrategy"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addAccuracy"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setAccuracy"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "disableContext"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "target"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addConfigModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "configKey": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "configKey",
            "modifierType",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addDynamicConfigModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "configKey": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "observableValue": {
              "$ref": "#/$defs/__schema2"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "configKey",
            "modifierType",
            "observableValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "registerConfig"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "configKey": {
              "$ref": "#/$defs/__schema5"
            },
            "initialValue": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "configKey",
            "initialValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "registerTaggedConfig"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "configKey": {
              "$ref": "#/$defs/__schema5"
            },
            "initialValue": {
              "$ref": "#/$defs/__schema5"
            },
            "tags": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "configKey",
            "initialValue",
            "tags"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addTaggedConfigModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "tag": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "tag",
            "modifierType",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addPhaseConfigModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "configKey": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "configKey",
            "modifierType",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addPhaseDynamicConfigModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "configKey": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "observableValue": {
              "$ref": "#/$defs/__schema2"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "configKey",
            "modifierType",
            "observableValue"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addPhaseTypeConfigModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "configKey": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseType": {
              "$ref": "#/$defs/__schema5"
            },
            "scope": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseId": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "configKey",
            "modifierType",
            "value",
            "phaseType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "addDynamicPhaseTypeConfigModifier"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "configKey": {
              "$ref": "#/$defs/__schema5"
            },
            "modifierType": {
              "$ref": "#/$defs/__schema5"
            },
            "observableValue": {
              "$ref": "#/$defs/__schema2"
            },
            "phaseType": {
              "$ref": "#/$defs/__schema5"
            },
            "scope": {
              "$ref": "#/$defs/__schema5"
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            },
            "phaseId": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "target",
            "configKey",
            "modifierType",
            "observableValue",
            "phaseType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "transform"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "newBase": {
              "$ref": "#/$defs/__schema5"
            },
            "transformType": {
              "type": "string",
              "enum": [
                "temporary",
                "permanent"
              ]
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            },
            "permanentStrategy": {
              "type": "string",
              "enum": [
                "preserve_temporary",
                "clear_temporary"
              ]
            }
          },
          "required": [
            "type",
            "target",
            "newBase"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "transformWithPreservation"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "newBase": {
              "$ref": "#/$defs/__schema5"
            },
            "transformType": {
              "type": "string",
              "enum": [
                "temporary",
                "permanent"
              ]
            },
            "priority": {
              "$ref": "#/$defs/__schema5"
            },
            "permanentStrategy": {
              "type": "string",
              "enum": [
                "preserve_temporary",
                "clear_temporary"
              ]
            }
          },
          "required": [
            "type",
            "target",
            "newBase"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "removeTransformation"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "target"
          ]
        }
      ]
    },
    "__schema1": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "evaluate"
            },
            "target": {
              "$ref": "#/$defs/__schema2"
            },
            "evaluator": {
              "$ref": "#/$defs/__schema4"
            }
          },
          "required": [
            "type",
            "target",
            "evaluator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "some"
            },
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/__schema1"
              }
            }
          },
          "required": [
            "type",
            "conditions"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "every"
            },
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/__schema1"
              }
            }
          },
          "required": [
            "type",
            "conditions"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "not"
            },
            "condition": {
              "$ref": "#/$defs/__schema1"
            }
          },
          "required": [
            "type",
            "condition"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "petIsActive"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selfUseSkill"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "checkSelf"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "opponentUseSkill"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selfBeDamaged"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "opponentBeDamaged"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selfAddMark"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "opponentAddMark"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selfBeAddMark"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "opponentBeAddMark"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selfBeHeal"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "continuousUseSkill"
            },
            "times": {
              "default": 2,
              "$ref": "#/$defs/__schema5"
            },
            "strategy": {
              "default": "Continuous",
              "type": "string",
              "enum": [
                "Periodic",
                "Once",
                "Continuous"
              ]
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "statStageChange"
            },
            "stat": {
              "default": [
                "atk",
                "def",
                "spa",
                "spd",
                "spe"
              ],
              "$ref": "#/$defs/__schema5"
            },
            "check": {
              "default": "all",
              "type": "string",
              "enum": [
                "up",
                "down",
                "all"
              ]
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "isFirstSkillUsedThisTurn"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "isLastSkillUsedThisTurn"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selfSwitchIn"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selfSwitchOut"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selfBeSkillTarget"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selfHasMark"
            },
            "baseId": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "baseId"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "opponentHasMark"
            },
            "baseId": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "baseId"
          ]
        }
      ]
    },
    "__schema2": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "target",
            "self",
            "opponent",
            "selfTeam",
            "opponentTeam",
            "selfPlayer",
            "opponentPlayer",
            "useSkillContext",
            "damageContext",
            "effectContext",
            "skill",
            "mark",
            "selfMarks",
            "opponentMarks",
            "selfSkills",
            "opponentSkills",
            "selfAvailableSkills",
            "opponentAvailableSkills",
            "dataMarks",
            "healContext",
            "addMarkContext",
            "rageContext",
            "stackContext",
            "consumeStackContext",
            "switchPetContext",
            "battle",
            "turnContext",
            "currentPhase",
            "allPhases"
          ]
        },
        {
          "type": "object",
          "properties": {
            "base": {
              "type": "string",
              "enum": [
                "target",
                "self",
                "opponent",
                "selfTeam",
                "opponentTeam",
                "selfPlayer",
                "opponentPlayer",
                "useSkillContext",
                "damageContext",
                "effectContext",
                "skill",
                "mark",
                "selfMarks",
                "opponentMarks",
                "selfSkills",
                "opponentSkills",
                "selfAvailableSkills",
                "opponentAvailableSkills",
                "dataMarks",
                "healContext",
                "addMarkContext",
                "rageContext",
                "stackContext",
                "consumeStackContext",
                "switchPetContext",
                "battle",
                "turnContext",
                "currentPhase",
                "allPhases"
              ]
            },
            "chain": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/__schema3"
              }
            }
          },
          "required": [
            "base"
          ]
        },
        {
          "type": "object",
          "properties": {
            "condition": {
              "$ref": "#/$defs/__schema1"
            },
            "trueSelector": {
              "$ref": "#/$defs/__schema2"
            },
            "falseSelector": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "condition",
            "trueSelector"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selector"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            },
            "chain": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/__schema3"
              }
            }
          },
          "required": [
            "type",
            "value"
          ]
        }
      ]
    },
    "__schema3": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "select"
            },
            "arg": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "base"
                    },
                    "arg": {
                      "type": "string",
                      "enum": [
                        "currentHp",
                        "maxHp",
                        "rage",
                        "owner",
                        "type",
                        "marks",
                        "stats",
                        "stack",
                        "duration",
                        "power",
                        "priority",
                        "activePet",
                        "skills",
                        "id",
                        "baseId",
                        "tags",
                        "rageCost",
                        "element"
                      ]
                    }
                  },
                  "required": [
                    "type",
                    "arg"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "dynamic"
                    },
                    "arg": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "arg"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "currentHp",
                    "maxHp",
                    "rage",
                    "owner",
                    "type",
                    "marks",
                    "stats",
                    "stack",
                    "duration",
                    "power",
                    "priority",
                    "activePet",
                    "skills",
                    "id",
                    "baseId",
                    "tags",
                    "rageCost",
                    "element"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selectPath"
            },
            "arg": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selectProp"
            },
            "arg": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "flat"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "where"
            },
            "arg": {
              "$ref": "#/$defs/__schema4"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "whereAttr"
            },
            "extractor": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "base"
                    },
                    "arg": {
                      "type": "string",
                      "enum": [
                        "currentHp",
                        "maxHp",
                        "rage",
                        "owner",
                        "type",
                        "marks",
                        "stats",
                        "stack",
                        "duration",
                        "power",
                        "priority",
                        "activePet",
                        "skills",
                        "id",
                        "baseId",
                        "tags",
                        "rageCost",
                        "element"
                      ]
                    }
                  },
                  "required": [
                    "type",
                    "arg"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "dynamic"
                    },
                    "arg": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "arg"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "currentHp",
                    "maxHp",
                    "rage",
                    "owner",
                    "type",
                    "marks",
                    "stats",
                    "stack",
                    "duration",
                    "power",
                    "priority",
                    "activePet",
                    "skills",
                    "id",
                    "baseId",
                    "tags",
                    "rageCost",
                    "element"
                  ]
                }
              ]
            },
            "evaluator": {
              "$ref": "#/$defs/__schema4"
            }
          },
          "required": [
            "type",
            "extractor",
            "evaluator"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "and"
            },
            "arg": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "or"
            },
            "arg": {
              "$ref": "#/$defs/__schema2"
            },
            "duplicate": {
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "randomPick"
            },
            "arg": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "randomSample"
            },
            "arg": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "sum"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "avg"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "add"
            },
            "arg": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "multiply"
            },
            "arg": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "divide"
            },
            "arg": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "shuffled"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "limit"
            },
            "arg": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "clampMax"
            },
            "arg": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "clampMin"
            },
            "arg": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "configGet"
            },
            "key": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "key"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selectObservable"
            },
            "arg": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selectAttribute$"
            },
            "arg": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "arg"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "asStatLevelMark"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "sampleBetween"
            },
            "first": {
              "$ref": "#/$defs/__schema5"
            },
            "second": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "first",
            "second"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "when"
            },
            "condition": {
              "$ref": "#/$defs/__schema1"
            },
            "trueValue": {
              "$ref": "#/$defs/__schema5"
            },
            "falseValue": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "condition",
            "trueValue"
          ]
        }
      ]
    },
    "__schema4": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "compare"
            },
            "operator": {
              "type": "string",
              "enum": [
                ">",
                "<",
                ">=",
                "<=",
                "=="
              ]
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "operator",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "same"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "notSame"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "any"
            },
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/__schema4"
              }
            }
          },
          "required": [
            "type",
            "conditions"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "all"
            },
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/__schema4"
              }
            }
          },
          "required": [
            "type",
            "conditions"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "not"
            },
            "condition": {
              "$ref": "#/$defs/__schema4"
            }
          },
          "required": [
            "type",
            "condition"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "probability"
            },
            "percent": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "percent"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "contain"
            },
            "tag": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "tag"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "exist"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "anyOf"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "value"
          ]
        }
      ]
    },
    "__schema5": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "raw:number"
            },
            "value": {
              "type": "number"
            },
            "configId": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "number"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "raw:string"
            },
            "value": {
              "type": "string"
            },
            "configId": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "raw:boolean"
            },
            "value": {
              "type": "boolean"
            },
            "configId": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "entity:baseMark"
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "entity:baseSkill"
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "entity:species"
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "dynamic"
            },
            "selector": {
              "$ref": "#/$defs/__schema2"
            }
          },
          "required": [
            "type",
            "selector"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "selector"
            },
            "value": {
              "$ref": "#/$defs/__schema5"
            },
            "chain": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/__schema3"
              }
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "conditional"
            },
            "condition": {
              "$ref": "#/$defs/__schema1"
            },
            "trueValue": {
              "$ref": "#/$defs/__schema5"
            },
            "falseValue": {
              "$ref": "#/$defs/__schema5"
            }
          },
          "required": [
            "type",
            "condition",
            "trueValue"
          ]
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/__schema5"
          }
        }
      ]
    }
  }
}