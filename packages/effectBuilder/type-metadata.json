{
  "Modifier": [
    {
      "n": "value",
      "t": "BehaviorSubject<T>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sourceSubscription",
      "t": "undefined | { unsubscribe(): void }",
      "iu": true,
      "u": [
        "undefined",
        "{ unsubscribe(): void }"
      ],
      "a": false
    },
    {
      "n": "durationType",
      "t": "DurationType.instant | DurationType.binding | DurationType.phaseType",
      "iu": true,
      "u": [
        "DurationType.instant",
        "DurationType.binding",
        "DurationType.phaseType"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"percent\" | \"delta\" | \"override\" | \"clampMax\" | \"clampMin\" | \"clamp\"",
      "iu": true,
      "u": [
        "\"percent\"",
        "\"delta\"",
        "\"override\"",
        "\"clampMax\"",
        "\"clampMin\"",
        "\"clamp\""
      ],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "source",
      "t": "undefined | MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "undefined",
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "minValue",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "maxValue",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "phaseTypeSpec",
      "t": "undefined | PhaseTypeSpec",
      "iu": true,
      "u": [
        "undefined",
        "PhaseTypeSpec"
      ],
      "a": false
    }
  ],
  "AttributeSystem": [
    {
      "n": "logger",
      "t": "BattleLogger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseAttributes",
      "t": "Map<keyof T, BehaviorSubject<string | number | boolean>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "modifiers",
      "t": "Map<keyof T, BehaviorSubject<Modifier<any>[]>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "subscriptions",
      "t": "Map<keyof T, Observable<string | number | boolean>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "modifiersBySource",
      "t": "Map<string, Map<keyof T, Modifier<any>[]>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "phaseTypeModifiers",
      "t": "Map<string, Modifier<any>[]>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "configSystemGetter",
      "t": "null | () => any",
      "iu": true,
      "u": [
        "null",
        "() => any"
      ],
      "a": false
    },
    {
      "n": "phaseChangeSubject",
      "t": "Subject<void>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "calculationStack",
      "t": "Set<keyof T>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "dependencyGraph",
      "t": "Map<keyof T, Set<keyof T>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "fallbackValues",
      "t": "Map<keyof T, string | number | boolean>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxCalculationDepth",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "calculationDepthCounter",
      "t": "Map<keyof T, number>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "globalCalculationStack",
      "t": "Map<string, Set<string>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "globalDependencyGraph",
      "t": "Map<string, Set<string>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "objectId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isDestroyed",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "subscriptionCleanups",
      "t": "Map<keyof T, () => void>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "instanceRegistry",
      "t": "Set<AttributeSystem<any>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battleRegistry",
      "t": "Map<string, Set<AttributeSystem<any>>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battleId",
      "t": "undefined | string",
      "iu": true,
      "u": [
        "undefined",
        "string"
      ],
      "a": false
    }
  ],
  "ComposableAttributeSystem": [
    {
      "n": "accessors",
      "t": "BaseMarkAccessors & LevelAccessors & SkillAccessors & RageAccessors",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PetAttributeSystem": [],
  "MarkAttributeSystem": [
    {
      "n": "markAccessors",
      "t": "BaseMarkAccessors",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SkillAttributeSystem": [
    {
      "n": "skillAccessors",
      "t": "SkillAccessors",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PlayerAttributeSystem": [],
  "AttributeKey": [],
  "MarkAttributeSet": [
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "StatLevelMarkAttributeSet": [],
  "SkillAttributeSet": [
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "appeared",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "RageAttributeSet": [
    {
      "n": "currentRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "AttributeData": [],
  "PetAttributeSet": [
    {
      "n": "currentHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PlayerAttributeSet": [
    {
      "n": "currentRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BaseMarkAttributes": [
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "LevelAttributes": [
    {
      "n": "level",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SkillAttributes": [
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "appeared",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "RageAttributes": [
    {
      "n": "currentRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BaseMarkAttributeSet": [],
  "BaseMarkAccessors": [
    {
      "n": "getDuration",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setDuration",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getStack",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setStack",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getIsActive",
      "t": "() => boolean",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setIsActive",
      "t": "(value: boolean) => void",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "LevelAccessors": [
    {
      "n": "getLevel",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setLevel",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SkillAccessors": [
    {
      "n": "getPower",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setPower",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getAccuracy",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setAccuracy",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getRage",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setRage",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getPriority",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setPriority",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getAppeared",
      "t": "() => boolean",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setAppeared",
      "t": "(value: boolean) => void",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "RageAccessors": [
    {
      "n": "getCurrentRage",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setCurrentRage",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getMaxRage",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setMaxRage",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "Battle": [
    {
      "n": "lastStateMessage",
      "t": "BattleState",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "logger",
      "t": "BattleLogger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "allowFaintSwitch",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "showHidden",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "null",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "configSystem",
      "t": "ConfigSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "phaseManager",
      "t": "PhaseManager",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timerManager",
      "t": "TimerManager",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "transformationSystem",
      "t": "TransformationSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "emitter",
      "t": "Emitter<Events>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rng",
      "t": "default",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "status",
      "t": "BattleStatus.Unstarted | BattleStatus.OnBattle | BattleStatus.Ended",
      "iu": true,
      "u": [
        "BattleStatus.Unstarted",
        "BattleStatus.OnBattle",
        "BattleStatus.Ended"
      ],
      "a": false
    },
    {
      "n": "currentPhase",
      "t": "BattlePhase.StartPhase | BattlePhase.SwitchPhase | BattlePhase.SelectionPhase | BattlePhase.ExecutionPhase | BattlePhase.Ended",
      "iu": true,
      "u": [
        "BattlePhase.StartPhase",
        "BattlePhase.SwitchPhase",
        "BattlePhase.SelectionPhase",
        "BattlePhase.ExecutionPhase",
        "BattlePhase.Ended"
      ],
      "a": false
    },
    {
      "n": "currentTurn",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "_isStarting",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "messageCallbacks",
      "t": "{ original: (message: BattleMessage) => void; wrapped: (message: BattleMessage) => void; options?: { viewerId?: playerId | undefined; showHidden?: boolean | undefined; showAll?: boolean | undefined; } | undefined; lastState?: BattleState | undefined; }",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "{ original: (message: BattleMessage) => void; wrapped: (message: BattleMessage) => void; options?: { viewerId?: playerId | undefined; showHidden?: boolean | undefined; showAll?: boolean | undefined; } | undefined; lastState?: BattleState | undefined; }"
    },
    {
      "n": "lastKiller",
      "t": "undefined | Player",
      "iu": true,
      "u": [
        "undefined",
        "Player"
      ],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkInstance"
    },
    {
      "n": "victor",
      "t": "undefined | Player",
      "iu": true,
      "u": [
        "undefined",
        "Player"
      ],
      "a": false
    },
    {
      "n": "pendingForcedSwitches",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Player"
    },
    {
      "n": "pendingFaintSwitch",
      "t": "undefined | Player",
      "iu": true,
      "u": [
        "undefined",
        "Player"
      ],
      "a": false
    },
    {
      "n": "isInitialSwitchPhase",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "petMap",
      "t": "Map<string, Pet>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "skillMap",
      "t": "Map<string, SkillInstance>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentSelectionController",
      "t": "undefined | AbortController",
      "iu": true,
      "u": [
        "undefined",
        "AbortController"
      ],
      "a": false
    },
    {
      "n": "playerSelectionResolvers",
      "t": "Map<string, () => void>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "playerA",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "playerB",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "ConfigModifier": [
    {
      "n": "value",
      "t": "BehaviorSubject<ConfigValue>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sourceSubscription",
      "t": "undefined | { unsubscribe(): void }",
      "iu": true,
      "u": [
        "undefined",
        "{ unsubscribe(): void }"
      ],
      "a": false
    },
    {
      "n": "durationType",
      "t": "ConfigDurationType.instant | ConfigDurationType.binding | ConfigDurationType.phase | ConfigDurationType.phaseType",
      "iu": true,
      "u": [
        "ConfigDurationType.instant",
        "ConfigDurationType.binding",
        "ConfigDurationType.phase",
        "ConfigDurationType.phaseType"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "ConfigModifierType.override | ConfigModifierType.delta | ConfigModifierType.append | ConfigModifierType.prepend",
      "iu": true,
      "u": [
        "ConfigModifierType.override",
        "ConfigModifierType.delta",
        "ConfigModifierType.append",
        "ConfigModifierType.prepend"
      ],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "source",
      "t": "undefined | MarkInstance | SkillInstance | BattlePhaseBase<Context>",
      "iu": true,
      "u": [
        "undefined",
        "MarkInstance",
        "SkillInstance",
        "BattlePhaseBase<Context>"
      ],
      "a": false
    },
    {
      "n": "phaseTypeSpec",
      "t": "undefined | PhaseTypeSpec",
      "iu": true,
      "u": [
        "undefined",
        "PhaseTypeSpec"
      ],
      "a": false
    }
  ],
  "ConfigSystem": [
    {
      "n": "instance",
      "t": "null | ConfigSystem",
      "iu": true,
      "u": [
        "null",
        "ConfigSystem"
      ],
      "a": false
    },
    {
      "n": "battleRegistry",
      "t": "Map<string, Set<ConfigSystem>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "logger",
      "t": "BattleLogger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseConfigs",
      "t": "Map<string, BehaviorSubject<ConfigValue>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "modifiers",
      "t": "Map<string, BehaviorSubject<ConfigModifier[]>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "subscriptions",
      "t": "Map<string, Observable<ConfigValue>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "modifiersBySource",
      "t": "Map<string, Map<string, ConfigModifier[]>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "scopedBaseConfigs",
      "t": "WeakMap<ScopeObject, Map<string, BehaviorSubject<ConfigValue>>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "scopedModifiers",
      "t": "WeakMap<ScopeObject, Map<string, ConfigModifier[]>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "phaseStack",
      "t": "BattlePhaseBase<Context>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "BattlePhaseBase<Context>"
    },
    {
      "n": "phaseTypeModifiers",
      "t": "Map<string, ConfigModifier[]>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "phaseTypeInstances",
      "t": "Map<PhaseType, BattlePhaseBase<Context>[]>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "tagToConfigKeys",
      "t": "Map<string, Set<string>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "configKeyToTags",
      "t": "Map<string, Set<string>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isDestroyed",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "undefined | string",
      "iu": true,
      "u": [
        "undefined",
        "string"
      ],
      "a": false
    },
    {
      "n": "allSubscriptions",
      "t": "{ unsubscribe(): void; }",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "{ unsubscribe(): void; }"
    }
  ],
  "ScopeObject": [
    {
      "n": "type",
      "t": "MarkInstance | SkillInstance | Battle | Player | Pet | BattlePhaseBase<Context>",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance",
        "Battle",
        "Player",
        "Pet",
        "BattlePhaseBase<Context>"
      ],
      "a": false
    }
  ],
  "ConfigValue": [
    {
      "n": "type",
      "t": "null | string | number | false | true | playerId | markId | skillId | petId | baseMarkId | baseSkillId | speciesId",
      "iu": true,
      "u": [
        "null",
        "string",
        "number",
        "false",
        "true",
        "playerId",
        "markId",
        "skillId",
        "petId",
        "baseMarkId",
        "baseSkillId",
        "speciesId"
      ],
      "a": false
    }
  ],
  "PhaseTypeSpec": [
    {
      "n": "phaseType",
      "t": "PhaseType.Turn | PhaseType.Skill | PhaseType.Damage | PhaseType.Heal | PhaseType.Effect | PhaseType.Switch | PhaseType.Mark | PhaseType.Rage | PhaseType.Battle",
      "iu": true,
      "u": [
        "PhaseType.Turn",
        "PhaseType.Skill",
        "PhaseType.Damage",
        "PhaseType.Heal",
        "PhaseType.Effect",
        "PhaseType.Switch",
        "PhaseType.Mark",
        "PhaseType.Rage",
        "PhaseType.Battle"
      ],
      "a": false
    },
    {
      "n": "phaseId",
      "t": "undefined | string",
      "iu": true,
      "u": [
        "undefined",
        "string"
      ],
      "a": false
    },
    {
      "n": "scope",
      "t": "PhaseScope.Current | PhaseScope.Any | PhaseScope.Next",
      "iu": true,
      "u": [
        "PhaseScope.Current",
        "PhaseScope.Any",
        "PhaseScope.Next"
      ],
      "a": false
    }
  ],
  "Context": [
    {
      "n": "type",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "undefined | Battle",
      "iu": true,
      "u": [
        "undefined",
        "Battle"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "null | Battle | TurnContext | UseSkillContext | DamageContext | HealContext | AddMarkContext | RemoveMarkContext | SwitchPetContext | RageContext | StackContext | TransformContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "null",
        "Battle",
        "TurnContext",
        "UseSkillContext",
        "DamageContext",
        "HealContext",
        "AddMarkContext",
        "RemoveMarkContext",
        "SwitchPetContext",
        "RageContext",
        "StackContext",
        "TransformContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "TurnContext": [
    {
      "n": "type",
      "t": "\"turn\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "contexts",
      "t": "Context",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Context"
    },
    {
      "n": "contextQueue",
      "t": "Context",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Context"
    },
    {
      "n": "appledContexts",
      "t": "Context",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Context"
    },
    {
      "n": "petTurnDataMap",
      "t": "WeakMap<Pet, PetTurnData>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parent",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "UseSkillContext": [
    {
      "n": "type",
      "t": "\"use-skill\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "logger",
      "t": "BattleLogger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "category",
      "t": "Category.Physical | Category.Special | Category.Status | Category.Climax",
      "iu": true,
      "u": [
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax"
      ],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "petAccuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "evasion",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "critRate",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "ignoreStageStrategy",
      "t": "IgnoreStageStrategy.none | IgnoreStageStrategy.all | IgnoreStageStrategy.positive | IgnoreStageStrategy.negative",
      "iu": true,
      "u": [
        "IgnoreStageStrategy.none",
        "IgnoreStageStrategy.all",
        "IgnoreStageStrategy.positive",
        "IgnoreStageStrategy.negative"
      ],
      "a": false
    },
    {
      "n": "hitOverrides",
      "t": "{ willHit: boolean; priority: number; }",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "{ willHit: boolean; priority: number; }"
    },
    {
      "n": "critOverrides",
      "t": "{ willCrit: boolean; priority: number; }",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "{ willCrit: boolean; priority: number; }"
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "actualTarget",
      "t": "undefined | Pet",
      "iu": true,
      "u": [
        "undefined",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "hitResult",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "crit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "multihitResult",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "damageType",
      "t": "DamageType.Physical | DamageType.Special | DamageType.Effect",
      "iu": true,
      "u": [
        "DamageType.Physical",
        "DamageType.Special",
        "DamageType.Effect"
      ],
      "a": false
    },
    {
      "n": "typeMultiplier",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stabMultiplier",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "critMultiplier",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseDamage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "randomFactor",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "defeated",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "origin",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "pet",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "selectTarget",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "skill",
      "t": "SkillInstance",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SwitchPetContext": [
    {
      "n": "type",
      "t": "\"switch-pet\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "switchOutPet",
      "t": "null | Pet",
      "iu": true,
      "u": [
        "null",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "Battle | TurnContext",
      "iu": true,
      "u": [
        "Battle",
        "TurnContext"
      ],
      "a": false
    },
    {
      "n": "origin",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "switchInPet",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "RageContext": [
    {
      "n": "type",
      "t": "\"rage-cost\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "rageChangeResult",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "addModified",
      "t": "(percent: number, delta: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parent",
      "t": "TurnContext | UseSkillContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "TurnContext",
        "UseSkillContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reason",
      "t": "\"turn\" | \"damage\" | \"skill\" | \"skillHit\" | \"switch\" | \"effect\"",
      "iu": true,
      "u": [
        "\"turn\"",
        "\"damage\"",
        "\"skill\"",
        "\"skillHit\"",
        "\"switch\"",
        "\"effect\""
      ],
      "a": false
    },
    {
      "n": "modifiedType",
      "t": "\"setting\" | \"add\" | \"reduce\"",
      "iu": true,
      "u": [
        "\"setting\"",
        "\"add\"",
        "\"reduce\""
      ],
      "a": false
    },
    {
      "n": "value",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ignoreRageObtainEfficiency",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "modified",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "DamageContext": [
    {
      "n": "type",
      "t": "\"damage\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "damageResult",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "addModified",
      "t": "(percent: number, delta: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parent",
      "t": "UseSkillContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "UseSkillContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "source",
      "t": "MarkInstance | SkillInstance | Pet",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseDamage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "damageType",
      "t": "DamageType.Physical | DamageType.Special | DamageType.Effect",
      "iu": true,
      "u": [
        "DamageType.Physical",
        "DamageType.Special",
        "DamageType.Effect"
      ],
      "a": false
    },
    {
      "n": "crit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "effectiveness",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "randomFactor",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "modified",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "minThreshold",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxThreshold",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "undefined | Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "undefined",
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    }
  ],
  "HealContext": [
    {
      "n": "type",
      "t": "\"heal\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "healResult",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "addModified",
      "t": "(percent: number, delta: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parent",
      "t": "EffectContext<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "source",
      "t": "MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseHeal",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ingoreEffect",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "modified",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "value",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "AddMarkContext": [
    {
      "n": "type",
      "t": "\"add-mark\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parent",
      "t": "EffectContext<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "MarkOwner",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseMark",
      "t": "BaseMark",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "config",
      "t": "undefined | Partial<MarkConfig>",
      "iu": true,
      "u": [
        "undefined",
        "Partial<MarkConfig>"
      ],
      "a": false
    }
  ],
  "RemoveMarkContext": [
    {
      "n": "type",
      "t": "\"remove-mark\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "TurnContext | DamageContext | AddMarkContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "TurnContext",
        "DamageContext",
        "AddMarkContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "mark",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StackContext": [
    {
      "n": "type",
      "t": "\"stack\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "AddMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "existingMark",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "incomingMark",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stacksBefore",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "durationBefore",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stacksAfter",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "durationAfter",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stackStrategy",
      "t": "StackStrategy.stack | StackStrategy.refresh | StackStrategy.extend | StackStrategy.max | StackStrategy.replace | StackStrategy.none | StackStrategy.remove",
      "iu": true,
      "u": [
        "StackStrategy.stack",
        "StackStrategy.refresh",
        "StackStrategy.extend",
        "StackStrategy.max",
        "StackStrategy.replace",
        "StackStrategy.none",
        "StackStrategy.remove"
      ],
      "a": false
    },
    {
      "n": "stackChange",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "durationChange",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "EffectContext": [
    {
      "n": "type",
      "t": "\"effect\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "success",
      "t": "undefined | false | true",
      "iu": true,
      "u": [
        "undefined",
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "TriggerContextMap[T]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "trigger",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "source",
      "t": "MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "effect",
      "t": "undefined | Effect<EffectTrigger>",
      "iu": true,
      "u": [
        "undefined",
        "Effect<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "TransformContext": [
    {
      "n": "type",
      "t": "\"transform\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "available",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "parent",
      "t": "Battle | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "Battle",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "MarkInstance | SkillInstance | Pet",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "targetType",
      "t": "\"skill\" | \"pet\" | \"mark\"",
      "iu": true,
      "u": [
        "\"skill\"",
        "\"pet\"",
        "\"mark\""
      ],
      "a": false
    },
    {
      "n": "fromBase",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toBase",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "transformType",
      "t": "\"temporary\" | \"permanent\"",
      "iu": true,
      "u": [
        "\"temporary\"",
        "\"permanent\""
      ],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "causedBy",
      "t": "undefined | MarkInstance | SkillInstance | Effect<EffectTrigger>",
      "iu": true,
      "u": [
        "undefined",
        "MarkInstance",
        "SkillInstance",
        "Effect<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "AllContext": [
    {
      "n": "type",
      "t": "Battle | TurnContext | UseSkillContext | DamageContext | HealContext | AddMarkContext | RemoveMarkContext | SwitchPetContext | RageContext | StackContext | TransformContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "Battle",
        "TurnContext",
        "UseSkillContext",
        "DamageContext",
        "HealContext",
        "AddMarkContext",
        "RemoveMarkContext",
        "SwitchPetContext",
        "RageContext",
        "StackContext",
        "TransformContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "PetTurnData": [],
  "TriggerContextMap": [
    {
      "n": "OnBattleStart",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "BeforeSort",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "BeforeUseSkillCheck",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "AfterUseSkillCheck",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "PreDamage",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnCritPreDamage",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "BeforeMultiHit",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "BeforeHit",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnHit",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnMiss",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "AfterAttacked",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnDefeat",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "SkillUseEnd",
      "t": "UseSkillContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnBeforeCalculateDamage",
      "t": "DamageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnDamage",
      "t": "DamageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "Shield",
      "t": "DamageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "PostDamage",
      "t": "DamageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnCritPostDamage",
      "t": "DamageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "TurnStart",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "TurnEnd",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnBeforeAddMark",
      "t": "AddMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnAnyMarkAdded",
      "t": "AddMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnRemoveMark",
      "t": "RemoveMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnMarkCreated",
      "t": "AddMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnMarkDestroy",
      "t": "RemoveMarkContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnMarkDurationEnd",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnStackBefore",
      "t": "StackContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnStack",
      "t": "StackContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnBeforeHeal",
      "t": "HealContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnHeal",
      "t": "HealContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnRageGain",
      "t": "RageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnRageLoss",
      "t": "RageContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnSwitchIn",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnSwitchOut",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnOwnerSwitchIn",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnOwnerSwitchOut",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "BeforeTransform",
      "t": "TransformContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnTransform",
      "t": "TransformContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "AfterTransform",
      "t": "TransformContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "OnTransformEnd",
      "t": "TransformContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "BeforeEffect",
      "t": "Battle | TurnContext | UseSkillContext | DamageContext | HealContext | AddMarkContext | RemoveMarkContext | SwitchPetContext | RageContext | StackContext | TransformContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "Battle",
        "TurnContext",
        "UseSkillContext",
        "DamageContext",
        "HealContext",
        "AddMarkContext",
        "RemoveMarkContext",
        "SwitchPetContext",
        "RageContext",
        "StackContext",
        "TransformContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "AfterEffect",
      "t": "Battle | TurnContext | UseSkillContext | DamageContext | HealContext | AddMarkContext | RemoveMarkContext | SwitchPetContext | RageContext | StackContext | TransformContext | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "Battle",
        "TurnContext",
        "UseSkillContext",
        "DamageContext",
        "HealContext",
        "AddMarkContext",
        "RemoveMarkContext",
        "SwitchPetContext",
        "RageContext",
        "StackContext",
        "TransformContext",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "Effect": [
    {
      "n": "id",
      "t": "effectId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "triggers",
      "t": "T",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "T"
    },
    {
      "n": "apply",
      "t": "(context: EffectContext<T>) => void | ((context: EffectContext<T>) => void)",
      "iu": true,
      "u": [
        "(context: EffectContext<T>) => void",
        "((context: EffectContext<T>) => void)"
      ],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "condition",
      "t": "undefined | (context: EffectContext<T>) => boolean",
      "iu": true,
      "u": [
        "undefined",
        "(context: EffectContext<T>) => boolean"
      ],
      "a": false
    },
    {
      "n": "consumesStacks",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "trigger",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "EffectContainer": [
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    }
  ],
  "CanOwnedEntity": [
    {
      "n": "type",
      "t": "null | MarkInstance | SkillInstance | Battle | Player | Pet",
      "iu": true,
      "u": [
        "null",
        "MarkInstance",
        "SkillInstance",
        "Battle",
        "Player",
        "Pet"
      ],
      "a": false
    }
  ],
  "Prototype": [
    {
      "n": "id",
      "t": "baseMarkId | baseSkillId | speciesId | effectId",
      "iu": true,
      "u": [
        "baseMarkId",
        "baseSkillId",
        "speciesId",
        "effectId"
      ],
      "a": false
    }
  ],
  "Instance": [
    {
      "n": "id",
      "t": "markId | skillId | petId",
      "iu": true,
      "u": [
        "markId",
        "skillId",
        "petId"
      ],
      "a": false
    },
    {
      "n": "base",
      "t": "Prototype",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "OwnedEntity": [
    {
      "n": "owner",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkOwner": [
    {
      "n": "marks",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkInstance"
    }
  ],
  "CompatibleLogger": [],
  "BattleLogger": [],
  "BaseMark": [
    {
      "n": "id",
      "t": "baseMarkId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "config",
      "t": "MarkConfig",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    }
  ],
  "MarkInstanceImpl": [
    {
      "n": "owner",
      "t": "null | Battle | Pet",
      "iu": true,
      "u": [
        "null",
        "Battle",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "markId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "config",
      "t": "MarkConfig",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "emitter",
      "t": "undefined | Emitter<Events>",
      "iu": true,
      "u": [
        "undefined",
        "Emitter<Events>"
      ],
      "a": false
    },
    {
      "n": "attributeSystem",
      "t": "MarkAttributeSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "attributeModifierCleanups",
      "t": "(() => void)",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(() => void)"
    },
    {
      "n": "base",
      "t": "BaseMark",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "_stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseMarkId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isStackable",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "BaseStatLevelMark": [
    {
      "n": "statType",
      "t": "StatTypeWithoutHp.atk | StatTypeWithoutHp.def | StatTypeWithoutHp.spa | StatTypeWithoutHp.spd | StatTypeWithoutHp.spe",
      "iu": true,
      "u": [
        "StatTypeWithoutHp.atk",
        "StatTypeWithoutHp.def",
        "StatTypeWithoutHp.spa",
        "StatTypeWithoutHp.spd",
        "StatTypeWithoutHp.spe"
      ],
      "a": false
    },
    {
      "n": "initialLevel",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StatLevelMarkInstanceImpl": [
    {
      "n": "owner",
      "t": "null | Pet",
      "iu": true,
      "u": [
        "null",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "modifierCleanupFn",
      "t": "undefined | () => void",
      "iu": true,
      "u": [
        "undefined",
        "() => void"
      ],
      "a": false
    },
    {
      "n": "statLevelAttributeSystem",
      "t": "ComposableAttributeSystem<StatLevelMarkAttributeSet> & { getAccessors(): BaseMarkAccessors & LevelAccessors; }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "levelAccessors",
      "t": "BaseMarkAccessors & LevelAccessors",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stageMultiplier$",
      "t": "Observable<number>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "base",
      "t": "BaseStatLevelMark",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "level",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "statType",
      "t": "StatTypeWithoutHp.atk | StatTypeWithoutHp.def | StatTypeWithoutHp.spa | StatTypeWithoutHp.spd | StatTypeWithoutHp.spe",
      "iu": true,
      "u": [
        "StatTypeWithoutHp.atk",
        "StatTypeWithoutHp.def",
        "StatTypeWithoutHp.spa",
        "StatTypeWithoutHp.spd",
        "StatTypeWithoutHp.spe"
      ],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "IBaseMark": [],
  "MarkInstance": [
    {
      "n": "owner",
      "t": "null | Battle | Pet",
      "iu": true,
      "u": [
        "null",
        "Battle",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "markId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "config",
      "t": "MarkConfig",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "base",
      "t": "BaseMark",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "attributeSystem",
      "t": "MarkAttributeSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "_stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseMarkId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isStackable",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "Pet": [
    {
      "n": "emitter",
      "t": "undefined | Emitter<Events>",
      "iu": true,
      "u": [
        "undefined",
        "Emitter<Events>"
      ],
      "a": false
    },
    {
      "n": "gender",
      "t": "Gender.NoGender | Gender.Male | Gender.Female",
      "iu": true,
      "u": [
        "Gender.NoGender",
        "Gender.Male",
        "Gender.Female"
      ],
      "a": false
    },
    {
      "n": "baseCritRate",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseAccuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseRageObtainEfficiency",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "isAlive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "owner",
      "t": "null | Player",
      "iu": true,
      "u": [
        "null",
        "Player"
      ],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkInstance"
    },
    {
      "n": "skills",
      "t": "SkillInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "SkillInstance"
    },
    {
      "n": "_base",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "appeared",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "lastSkill",
      "t": "undefined | SkillInstance",
      "iu": true,
      "u": [
        "undefined",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "lastSkillUsedTimes",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "attributeSystem",
      "t": "PetAttributeSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "petId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "originalSpecies",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "level",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "evs",
      "t": "StatOutBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ivs",
      "t": "StatOutBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "nature",
      "t": "Nature.Hardy | Nature.Lonely | Nature.Brave | Nature.Adamant | Nature.Naughty | Nature.Bold | Nature.Docile | Nature.Relaxed | Nature.Impish | Nature.Lax | Nature.Timid | Nature.Hasty | Nature.Serious | Nature.Jolly | Nature.Naive | Nature.Modest | Nature.Mild | Nature.Quiet | Nature.Bashful | Nature.Rash | Nature.Calm | Nature.Gentle | Nature.Sassy | Nature.Careful | Nature.Quirky",
      "iu": true,
      "u": [
        "Nature.Hardy",
        "Nature.Lonely",
        "Nature.Brave",
        "Nature.Adamant",
        "Nature.Naughty",
        "Nature.Bold",
        "Nature.Docile",
        "Nature.Relaxed",
        "Nature.Impish",
        "Nature.Lax",
        "Nature.Timid",
        "Nature.Hasty",
        "Nature.Serious",
        "Nature.Jolly",
        "Nature.Naive",
        "Nature.Modest",
        "Nature.Mild",
        "Nature.Quiet",
        "Nature.Bashful",
        "Nature.Rash",
        "Nature.Calm",
        "Nature.Gentle",
        "Nature.Sassy",
        "Nature.Careful",
        "Nature.Quirky"
      ],
      "a": false
    },
    {
      "n": "baseSkills",
      "t": "BaseSkill",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "BaseSkill"
    },
    {
      "n": "ability",
      "t": "undefined | BaseMark",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark"
      ],
      "a": false
    },
    {
      "n": "emblem",
      "t": "undefined | BaseMark",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark"
      ],
      "a": false
    },
    {
      "n": "weight",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "height",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "overrideMaxHp",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "base",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "species",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stat",
      "t": "StatOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "actualStat",
      "t": "StatOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "status",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "Species": [
    {
      "n": "id",
      "t": "speciesId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "num",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "baseStats",
      "t": "StatOutBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "genderRatio",
      "t": "null | [number, number]",
      "iu": true,
      "u": [
        "null",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "heightRange",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "weightRange",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ability",
      "t": "undefined | BaseMark",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark"
      ],
      "a": false
    },
    {
      "n": "emblem",
      "t": "undefined | BaseMark",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark"
      ],
      "a": false
    }
  ],
  "Player": [
    {
      "n": "emitter",
      "t": "undefined | Emitter<Events>",
      "iu": true,
      "u": [
        "undefined",
        "Emitter<Events>"
      ],
      "a": false
    },
    {
      "n": "lastStateMessage",
      "t": "BattleState",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "undefined | Battle",
      "iu": true,
      "u": [
        "undefined",
        "Battle"
      ],
      "a": false
    },
    {
      "n": "owner",
      "t": "undefined | Battle",
      "iu": true,
      "u": [
        "undefined",
        "Battle"
      ],
      "a": false
    },
    {
      "n": "selection",
      "t": "null | UseSkillSelection | SwitchPetSelection | DoNothingSelection | SurrenderSelection",
      "iu": true,
      "u": [
        "null",
        "UseSkillSelection",
        "SwitchPetSelection",
        "DoNothingSelection",
        "SurrenderSelection"
      ],
      "a": false
    },
    {
      "n": "activePet",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "messageCallbacks",
      "t": "((message: BattleMessage) => void)",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "((message: BattleMessage) => void)"
    },
    {
      "n": "attributeSystem",
      "t": "PlayerAttributeSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "team",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Pet"
    },
    {
      "n": "currentRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "AIPlayer": [
    {
      "n": "decisionPending",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "phaseChangeRegistered",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "BaseSkill": [
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "Builder",
      "t": "typeof (Anonymous class)",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "baseSkillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "category",
      "t": "Category.Physical | Category.Special | Category.Status | Category.Climax",
      "iu": true,
      "u": [
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax"
      ],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "sureHit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "sureCrit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "ignoreOpponentStageStrategy",
      "t": "IgnoreStageStrategy.none | IgnoreStageStrategy.all | IgnoreStageStrategy.positive | IgnoreStageStrategy.negative",
      "iu": true,
      "u": [
        "IgnoreStageStrategy.none",
        "IgnoreStageStrategy.all",
        "IgnoreStageStrategy.positive",
        "IgnoreStageStrategy.negative"
      ],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    }
  ],
  "SkillInstance": [
    {
      "n": "owner",
      "t": "null | Pet",
      "iu": true,
      "u": [
        "null",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "skillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "category",
      "t": "Category.Physical | Category.Special | Category.Status | Category.Climax",
      "iu": true,
      "u": [
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax"
      ],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "sureHit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "sureCrit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "attributeSystem",
      "t": "SkillAttributeSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "base",
      "t": "BaseSkill",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "appeared",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseSkillId",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TransformationStrategyRegistry": [
    {
      "n": "strategies",
      "t": "Map<EntityType, AnyTransformationStrategy>",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TransformationSystem": [
    {
      "n": "transformations",
      "t": "Map<string, TransformationRecord<TransformableEntity, TransformablePrototype>[]>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "temporaryTransformStack",
      "t": "Map<string, TransformationRecord<TransformableEntity, TransformablePrototype>[]>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "permanentTransforms",
      "t": "Map<string, TransformationRecord<TransformableEntity, TransformablePrototype>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "strategyRegistry",
      "t": "TransformationStrategyRegistry",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PetEntity": [
    {
      "n": "emitter",
      "t": "undefined | Emitter<Events> | undefined",
      "iu": true,
      "u": [
        "undefined",
        "Emitter<Events>",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "gender",
      "t": "Gender.NoGender | Gender.Male | Gender.Female",
      "iu": true,
      "u": [
        "Gender.NoGender",
        "Gender.Male",
        "Gender.Female"
      ],
      "a": false
    },
    {
      "n": "baseCritRate",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseAccuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseRageObtainEfficiency",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "isAlive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "owner",
      "t": "null | Player",
      "iu": true,
      "u": [
        "null",
        "Player"
      ],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkInstance"
    },
    {
      "n": "skills",
      "t": "SkillInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "SkillInstance"
    },
    {
      "n": "_base",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "appeared",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "lastSkill",
      "t": "undefined | SkillInstance | undefined",
      "iu": true,
      "u": [
        "undefined",
        "SkillInstance",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "lastSkillUsedTimes",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "attributeSystem",
      "t": "PetAttributeSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "petId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "originalSpecies",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "level",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "evs",
      "t": "StatOutBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ivs",
      "t": "StatOutBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "nature",
      "t": "Nature.Hardy | Nature.Lonely | Nature.Brave | Nature.Adamant | Nature.Naughty | Nature.Bold | Nature.Docile | Nature.Relaxed | Nature.Impish | Nature.Lax | Nature.Timid | Nature.Hasty | Nature.Serious | Nature.Jolly | Nature.Naive | Nature.Modest | Nature.Mild | Nature.Quiet | Nature.Bashful | Nature.Rash | Nature.Calm | Nature.Gentle | Nature.Sassy | Nature.Careful | Nature.Quirky",
      "iu": true,
      "u": [
        "Nature.Hardy",
        "Nature.Lonely",
        "Nature.Brave",
        "Nature.Adamant",
        "Nature.Naughty",
        "Nature.Bold",
        "Nature.Docile",
        "Nature.Relaxed",
        "Nature.Impish",
        "Nature.Lax",
        "Nature.Timid",
        "Nature.Hasty",
        "Nature.Serious",
        "Nature.Jolly",
        "Nature.Naive",
        "Nature.Modest",
        "Nature.Mild",
        "Nature.Quiet",
        "Nature.Bashful",
        "Nature.Rash",
        "Nature.Calm",
        "Nature.Gentle",
        "Nature.Sassy",
        "Nature.Careful",
        "Nature.Quirky"
      ],
      "a": false
    },
    {
      "n": "baseSkills",
      "t": "BaseSkill",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "BaseSkill"
    },
    {
      "n": "ability",
      "t": "undefined | BaseMark | undefined",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "emblem",
      "t": "undefined | BaseMark | undefined",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "weight",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "height",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "overrideMaxHp",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "base",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "species",
      "t": "Species",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stat",
      "t": "StatOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isActive",
      "t": "() => boolean",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "settingRage",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "addRage",
      "t": "(context: RageContext) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "damage",
      "t": "(context: DamageContext) => boolean",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "heal",
      "t": "(context: HealContext) => boolean",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "addMark",
      "t": "(context: AddMarkContext) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "removeMark",
      "t": "(context: RemoveMarkContext) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getShieldMark",
      "t": "() => MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "() => MarkInstance"
    },
    {
      "n": "calculateStat",
      "t": "(type: StatTypeOnBattle) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "calculateStatWithoutHp",
      "t": "(type: StatTypeWithoutHp) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "calculateStatOnlyBattle",
      "t": "(type: StatTypeOnBattle) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "calculateMaxHp",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setOwner",
      "t": "(player: Player, emitter: Emitter<Events>) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "calculateStats",
      "t": "() => { maxHp: number; atk: number; def: number; spa: number; spd: number; spe: number; accuracy: number; critRate: number; evasion: number; ragePerTurn: number; weight: number; height: number; }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "actualStat",
      "t": "StatOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "recalculate",
      "t": "() => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getEffectiveStat",
      "t": "(ignoreMark?: boolean, ignoreStageStrategy?: IgnoreStageStrategy) => StatOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "applyIgnoreStageStrategy",
      "t": "(effectiveStats: StatOnBattle, ignoreStageStrategy: IgnoreStageStrategy) => StatOnBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "addStatStage",
      "t": "(context: EffectContext<EffectTrigger>, statType: StatTypeWithoutHp, value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "clearStatStage",
      "t": "(context: EffectContext<EffectTrigger>, cleanStageStrategy?: CleanStageStrategy, ...statTypes: StatTypeWithoutHp[]) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reverseStatStage",
      "t": "(context: EffectContext<EffectTrigger>, cleanStageStrategy?: CleanStageStrategy, ...statTypes: StatTypeWithoutHp[]) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "transferMarks",
      "t": "(context: SwitchPetContext, ...marks: MarkInstance[]) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getSkillOriginalCategory",
      "t": "(skill: SkillInstance) => Category",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sortSkillsByOriginalCategory",
      "t": "(skills: SkillInstance[]) => SkillInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(skills: SkillInstance[]) => SkillInstance"
    },
    {
      "n": "toMessage",
      "t": "(viewerId?: string | undefined, showHidden?: boolean) => PetMessage",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "status",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SkillEntity": [
    {
      "n": "owner",
      "t": "null | Pet",
      "iu": true,
      "u": [
        "null",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "skillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "category",
      "t": "Category.Physical | Category.Special | Category.Status | Category.Climax",
      "iu": true,
      "u": [
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax"
      ],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "sureHit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "sureCrit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "attributeSystem",
      "t": "SkillAttributeSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "base",
      "t": "BaseSkill",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "appeared",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseSkillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setOwner",
      "t": "(owner: Pet) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "getEffects",
      "t": "(trigger: EffectTrigger) => Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(trigger: EffectTrigger) => Effect<EffectTrigger>"
    },
    {
      "n": "toMessage",
      "t": "(viewerId?: string | undefined, showHidden?: boolean) => SkillMessage",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkEntity": [
    {
      "n": "owner",
      "t": "null | Battle | Pet",
      "iu": true,
      "u": [
        "null",
        "Battle",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "markId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "config",
      "t": "Partial<MarkConfig>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "base",
      "t": "BaseMark",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "attributeSystem",
      "t": "MarkAttributeSystem",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "_stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseMarkId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "setOwner",
      "t": "(owner: MarkOwner, emitter: Emitter<Events>) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "attachTo",
      "t": "(target: MarkOwner) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "detach",
      "t": "() => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "addStack",
      "t": "(value: number) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "consumeStack",
      "t": "(context: DamageContext | EffectContext<EffectTrigger>, amount: number) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isStackable",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "cleanupAttributeModifiers",
      "t": "() => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "transfer",
      "t": "(context: SwitchPetContext | EffectContext<EffectTrigger>, target: Battle | Pet) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toMessage",
      "t": "() => MarkMessage",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PetPrototype": [
    {
      "n": "id",
      "t": "speciesId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "num",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "baseStats",
      "t": "StatOutBattle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "genderRatio",
      "t": "null | [number, number]",
      "iu": true,
      "u": [
        "null",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "heightRange",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "weightRange",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ability",
      "t": "undefined | BaseMark | undefined",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "emblem",
      "t": "undefined | BaseMark | undefined",
      "iu": true,
      "u": [
        "undefined",
        "BaseMark",
        "undefined"
      ],
      "a": false
    }
  ],
  "SkillPrototype": [
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "id",
      "t": "baseSkillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "category",
      "t": "Category.Physical | Category.Special | Category.Status | Category.Climax",
      "iu": true,
      "u": [
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax"
      ],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "sureHit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "sureCrit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "ignoreOpponentStageStrategy",
      "t": "IgnoreStageStrategy.none | IgnoreStageStrategy.all | IgnoreStageStrategy.positive | IgnoreStageStrategy.negative",
      "iu": true,
      "u": [
        "IgnoreStageStrategy.none",
        "IgnoreStageStrategy.all",
        "IgnoreStageStrategy.positive",
        "IgnoreStageStrategy.negative"
      ],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    }
  ],
  "MarkPrototype": [
    {
      "n": "id",
      "t": "baseMarkId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "effects",
      "t": "Effect<EffectTrigger>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "Effect<EffectTrigger>"
    },
    {
      "n": "config",
      "t": "Readonly<MarkConfig>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "tags",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "createInstance",
      "t": "(overrides?: { duration?: number | undefined; stack?: number | undefined; config?: Partial<Readonly<MarkConfig>> | undefined; name?: string | undefined; tags?: string[] | undefined; effects?: Effect<EffectTrigger>[] | undefined; } | undefined) => MarkInstanceImpl",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TransformableEntity": [
    {
      "n": "type",
      "t": "MarkInstance | SkillInstance | Pet",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance",
        "Pet"
      ],
      "a": false
    }
  ],
  "TransformablePrototype": [
    {
      "n": "type",
      "t": "BaseMark | Species | BaseSkill",
      "iu": true,
      "u": [
        "BaseMark",
        "Species",
        "BaseSkill"
      ],
      "a": false
    }
  ],
  "AnyTransformationStrategy": [
    {
      "n": "type",
      "t": "TransformationStrategy<Pet, Species, EntityType.Pet> | TransformationStrategy<SkillInstance, BaseSkill, EntityType.Skill> | TransformationStrategy<MarkInstance, BaseMark, EntityType.Mark>",
      "iu": true,
      "u": [
        "TransformationStrategy<Pet, Species, EntityType.Pet>",
        "TransformationStrategy<SkillInstance, BaseSkill, EntityType.Skill>",
        "TransformationStrategy<MarkInstance, BaseMark, EntityType.Mark>"
      ],
      "a": false
    }
  ],
  "TransformationStrategy": [],
  "TransformationState": [
    {
      "n": "entityId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "entityType",
      "t": "EntityType.Pet | EntityType.Skill | EntityType.Mark",
      "iu": true,
      "u": [
        "EntityType.Pet",
        "EntityType.Skill",
        "EntityType.Mark"
      ],
      "a": false
    },
    {
      "n": "timestamp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentHpRatio",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    }
  ],
  "Transformable": [
    {
      "n": "base",
      "t": "Prototype",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "EntityTypeMap": [
    {
      "n": "[EntityType.Pet]",
      "t": "{ entity: Pet, prototype: Species, strategy: TransformationStrategy<Pet }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[EntityType.Skill]",
      "t": "{ entity: SkillInstance, prototype: BaseSkill, strategy: TransformationStrategy<SkillInstance }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[EntityType.Mark]",
      "t": "{ entity: MarkInstance, prototype: BaseMark, strategy: TransformationStrategy<MarkInstance }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TransformationRecord": [
    {
      "n": "id",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "TEntity",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "targetType",
      "t": "EntityType.Pet | EntityType.Skill | EntityType.Mark",
      "iu": true,
      "u": [
        "EntityType.Pet",
        "EntityType.Skill",
        "EntityType.Mark"
      ],
      "a": false
    },
    {
      "n": "originalBase",
      "t": "TPrototype",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentBase",
      "t": "TPrototype",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "transformType",
      "t": "\"temporary\" | \"permanent\"",
      "iu": true,
      "u": [
        "\"temporary\"",
        "\"permanent\""
      ],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "causedBy",
      "t": "undefined | MarkInstance | SkillInstance | Effect<EffectTrigger>",
      "iu": true,
      "u": [
        "undefined",
        "MarkInstance",
        "SkillInstance",
        "Effect<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "createdAt",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentHpRatio",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "permanentStrategy",
      "t": "undefined | \"preserve_temporary\" | \"clear_temporary\"",
      "iu": true,
      "u": [
        "undefined",
        "\"preserve_temporary\"",
        "\"clear_temporary\""
      ],
      "a": false
    },
    {
      "n": "effectHandlingStrategy",
      "t": "EffectHandlingStrategy.Override | EffectHandlingStrategy.Preserve",
      "iu": true,
      "u": [
        "EffectHandlingStrategy.Override",
        "EffectHandlingStrategy.Preserve"
      ],
      "a": false
    }
  ],
  "PetTransformationStrategy": [],
  "SkillTransformationStrategy": [],
  "MarkTransformationStrategy": [],
  "DefaultTransformationStrategies": [],
  "Brand": [],
  "entityId": [],
  "speciesId": [],
  "petId": [],
  "baseSkillId": [],
  "skillId": [],
  "playerId": [],
  "baseMarkId": [],
  "markId": [],
  "effectId": [],
  "effectStateId": [],
  "Id": [
    {
      "n": "type",
      "t": "markId | skillId | petId | baseMarkId | baseSkillId | speciesId | effectId",
      "iu": true,
      "u": [
        "markId",
        "skillId",
        "petId",
        "baseMarkId",
        "baseSkillId",
        "speciesId",
        "effectId"
      ],
      "a": false
    }
  ],
  "PrototypeId": [
    {
      "n": "type",
      "t": "baseMarkId | baseSkillId | speciesId | effectId",
      "iu": true,
      "u": [
        "baseMarkId",
        "baseSkillId",
        "speciesId",
        "effectId"
      ],
      "a": false
    }
  ],
  "InstanceId": [
    {
      "n": "type",
      "t": "markId | skillId | petId",
      "iu": true,
      "u": [
        "markId",
        "skillId",
        "petId"
      ],
      "a": false
    }
  ],
  "StatOutBattle": [
    {
      "n": "atk",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "def",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spa",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spd",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spe",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "hp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StatTypeOnBattle": [
    {
      "n": "type",
      "t": "StatTypeWithoutHp.atk | StatTypeWithoutHp.def | StatTypeWithoutHp.spa | StatTypeWithoutHp.spd | StatTypeWithoutHp.spe | StatTypeOnlyBattle.maxHp | StatTypeOnlyBattle.accuracy | StatTypeOnlyBattle.evasion | StatTypeOnlyBattle.critRate | StatTypeOnlyBattle.ragePerTurn | StatTypeOnlyBattle.weight | StatTypeOnlyBattle.height",
      "iu": true,
      "u": [
        "StatTypeWithoutHp.atk",
        "StatTypeWithoutHp.def",
        "StatTypeWithoutHp.spa",
        "StatTypeWithoutHp.spd",
        "StatTypeWithoutHp.spe",
        "StatTypeOnlyBattle.maxHp",
        "StatTypeOnlyBattle.accuracy",
        "StatTypeOnlyBattle.evasion",
        "StatTypeOnlyBattle.critRate",
        "StatTypeOnlyBattle.ragePerTurn",
        "StatTypeOnlyBattle.weight",
        "StatTypeOnlyBattle.height"
      ],
      "a": false
    }
  ],
  "StatStage": [
    {
      "n": "atk",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "def",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spa",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spd",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spe",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StatOnBattle": [
    {
      "n": "atk",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "def",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spa",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spd",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spe",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "evasion",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "critRate",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ragePerTurn",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "weight",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "height",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "StatBuffOnBattle": [
    {
      "n": "atk",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "def",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spa",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spd",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "spe",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxHp",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "evasion",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "critRate",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ragePerTurn",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "weight",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "height",
      "t": "BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BuffNumber": [
    {
      "n": "0",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "1",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "length",
      "t": "2",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toString",
      "t": "() => string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toLocaleString",
      "t": "{ (): string, (locales: string | string[], options?: (Intl.NumberFormatOptions & Intl.DateTimeFormatOptions) | undefined) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "pop",
      "t": "() => number | undefined",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "push",
      "t": "(...items: number[]) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "concat",
      "t": "{ (...items: ConcatArray<number>[]), (...items: (number | ConcatArray<number>)[]) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "join",
      "t": "(separator?: string | undefined) => string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reverse",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "() => number"
    },
    {
      "n": "shift",
      "t": "() => number | undefined",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "slice",
      "t": "(start?: number | undefined, end?: number | undefined) => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(start?: number | undefined, end?: number | undefined) => number"
    },
    {
      "n": "sort",
      "t": "(compareFn?: ((a: number, b: number) => number) | undefined) => BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "splice",
      "t": "{ (start: number, deleteCount?: number | undefined), (start: number, deleteCount: number, ...items: number[]) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "unshift",
      "t": "(...items: number[]) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "indexOf",
      "t": "(searchElement: number, fromIndex?: number | undefined) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "lastIndexOf",
      "t": "(searchElement: number, fromIndex?: number | undefined) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "every",
      "t": "{ <S>(predicate: (value, index: number, array: number[]) => value is S, thisArg?: any), (predicate: (value, index: number, array: number[]) => unknown, thisArg?: any) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "some",
      "t": "(predicate: (value: number, index: number, array: number[]) => unknown, thisArg?: any) => boolean",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "forEach",
      "t": "(callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "map",
      "t": "<U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "<U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U"
    },
    {
      "n": "filter",
      "t": "{ <S>(predicate: (value, index: number, array: number[]) => value is S, thisArg?: any), (predicate: (value, index: number, array: number[]) => unknown, thisArg?: any) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reduce",
      "t": "{ (callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => number), (callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number), <U>(callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => U, initialValue: U) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reduceRight",
      "t": "{ (callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => number), (callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number), <U>(callbackfn: (previousValue, currentValue: number, currentIndex: number, array: number[]) => U, initialValue: U) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "find",
      "t": "{ <S>(predicate: (value, index: number, obj: number[]) => value is S, thisArg?: any), (predicate: (value, index: number, obj: number[]) => unknown, thisArg?: any) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "findIndex",
      "t": "(predicate: (value: number, index: number, obj: number[]) => unknown, thisArg?: any) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "fill",
      "t": "(value: number, start?: number | undefined, end?: number | undefined) => BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "copyWithin",
      "t": "(target: number, start: number, end?: number | undefined) => BuffNumber",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "entries",
      "t": "() => ArrayIterator<[number, number]>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "keys",
      "t": "() => ArrayIterator<number>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "values",
      "t": "() => ArrayIterator<number>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "includes",
      "t": "(searchElement: number, fromIndex?: number | undefined) => boolean",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "flatMap",
      "t": "<U, This>(callback: (this: This, value: number, index: number, array: number[]) => U | readonly U[], thisArg?: This | undefined) => U",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "<U, This>(callback: (this: This, value: number, index: number, array: number[]) => U | readonly U[], thisArg?: This | undefined) => U"
    },
    {
      "n": "flat",
      "t": "<A, D>(this: A, depth?: D | undefined) => FlatArray<A, D>",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "<A, D>(this: A, depth?: D | undefined) => FlatArray<A, D>"
    },
    {
      "n": "at",
      "t": "(index: number) => number | undefined",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "findLast",
      "t": "{ <S>(predicate: (value, index: number, array: number[]) => value is S, thisArg?: any), (predicate: (value, index: number, array: number[]) => unknown, thisArg?: any) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "findLastIndex",
      "t": "(predicate: (value: number, index: number, array: number[]) => unknown, thisArg?: any) => number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toReversed",
      "t": "() => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "() => number"
    },
    {
      "n": "toSorted",
      "t": "(compareFn?: ((a: number, b: number) => number) | undefined) => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(compareFn?: ((a: number, b: number) => number) | undefined) => number"
    },
    {
      "n": "toSpliced",
      "t": "{ (start: number, deleteCount: number, ...items: number[]), (start: number, deleteCount?: number | undefined) }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "with",
      "t": "(index: number, value: number) => number",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(index: number, value: number) => number"
    },
    {
      "n": "__@iterator@358",
      "t": "() => ArrayIterator<number>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "__@unscopables@1300",
      "t": "Record<x: number, boolean | undefined, length?: boolean | undefined, toString?: boolean | undefined, toLocaleString?: boolean | undefined, pop?: boolean | undefined, push?: boolean | undefined, concat?: boolean | undefined, join?: boolean | undefined, reverse?: boolean | undefined, shift?: boolean | undefined, slice?: boolean | undefined, sort?: boolean | undefined, splice?: boolean | undefined, unshift?: boolean | undefined, indexOf?: boolean | undefined, lastIndexOf?: boolean | undefined, every?: boolean | undefined, some?: boolean | undefined, forEach?: boolean | undefined, map?: boolean | undefined, filter?: boolean | undefined, reduce?: boolean | undefined, reduceRight?: boolean | undefined, find?: boolean | undefined, findIndex?: boolean | undefined, fill?: boolean | undefined, copyWithin?: boolean | undefined, entries?: boolean | undefined, keys?: boolean | undefined, values?: boolean | undefined, includes?: boolean | undefined, flatMap?: boolean | undefined, flat?: boolean | undefined, at?: boolean | undefined, findLast?: boolean | undefined, findLastIndex?: boolean | undefined, toReversed?: boolean | undefined, toSorted?: boolean | undefined, toSpliced?: boolean | undefined, with?: boolean | undefined, [Symbol.iterator]?: boolean | undefined, readonly [Symbol.unscopables]?: boolean | undefined,>",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "Events": [
    {
      "n": "timerStart",
      "t": "{ player: playerId[], turnTimeLimit: number | null, remainingTotalTime: [key }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timerUpdate",
      "t": "{ player: playerId, remainingTurnTime: number, remainingTotalTime: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timerPause",
      "t": "{ player: playerId[], reason: \"animation\" | \"system\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timerResume",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timerTimeout",
      "t": "{ player: playerId, type: \"turn\" | \"total\", autoAction?: string | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timerSnapshot",
      "t": "snapshots",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timerStateChange",
      "t": "{ playerId: playerId, oldState: string, newState: string, timestamp: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "animationStart",
      "t": "{ animationId: string, duration: number, source: skillId | petId }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "animationEnd",
      "t": "{ animationId: string, actualDuration: number }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkConfig": [
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "persistent",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "maxStacks",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stackable",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "stackStrategy",
      "t": "StackStrategy.stack | StackStrategy.refresh | StackStrategy.extend | StackStrategy.max | StackStrategy.replace | StackStrategy.none | StackStrategy.remove",
      "iu": true,
      "u": [
        "StackStrategy.stack",
        "StackStrategy.refresh",
        "StackStrategy.extend",
        "StackStrategy.max",
        "StackStrategy.replace",
        "StackStrategy.none",
        "StackStrategy.remove"
      ],
      "a": false
    },
    {
      "n": "destroyable",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "isShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "keepOnSwitchOut",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "transferOnSwitch",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "inheritOnFaint",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "mutexGroup",
      "t": "undefined | string | undefined",
      "iu": true,
      "u": [
        "undefined",
        "string",
        "undefined"
      ],
      "a": false
    }
  ],
  "BattleMessage": [
    {
      "n": "type",
      "t": "BattleStartMessage | TurnStartMessage | TurnEndMessage | BattleEndMessage | PetSwitchMessage | PetDefeatedMessage | PetReviveMessage | StatChangeMessage | RageChangeMessage | HpChangeMessage | SkillUseMessage | SkillUseFailMessage | SkillMissMessage | SkillUseEndMessage | DamageMessage | DamageFailMessage | HealMessage | HealFailMessage | MarkApplyMessage | MarkExpireMessage | MarkUpdateMessage | MarkDestroyMessage | EffectApplyMessage | TurnActionMessage | ForcedSwitchMessage | FaintSwitchMessage | InvalidActionMessage | InfoMessage | ErrorMessage | TransformMessage | TransformEndMessage",
      "iu": true,
      "u": [
        "BattleStartMessage",
        "TurnStartMessage",
        "TurnEndMessage",
        "BattleEndMessage",
        "PetSwitchMessage",
        "PetDefeatedMessage",
        "PetReviveMessage",
        "StatChangeMessage",
        "RageChangeMessage",
        "HpChangeMessage",
        "SkillUseMessage",
        "SkillUseFailMessage",
        "SkillMissMessage",
        "SkillUseEndMessage",
        "DamageMessage",
        "DamageFailMessage",
        "HealMessage",
        "HealFailMessage",
        "MarkApplyMessage",
        "MarkExpireMessage",
        "MarkUpdateMessage",
        "MarkDestroyMessage",
        "EffectApplyMessage",
        "TurnActionMessage",
        "ForcedSwitchMessage",
        "FaintSwitchMessage",
        "InvalidActionMessage",
        "InfoMessage",
        "ErrorMessage",
        "TransformMessage",
        "TransformEndMessage"
      ],
      "a": false
    }
  ],
  "BattleStartMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.BattleStart",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{  }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "TurnStartMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.TurnStart",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "turn",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "TurnEndMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.TurnEnd",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "turn",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "BattleEndMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.BattleEnd",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ winner: playerId | null, reason: \"all_pet_fainted\" | \"surrender\" | \"total_time_timeout\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "PetSwitchMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.PetSwitch",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ player: playerId, fromPet: petId, toPet: petId, currentHp: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "PetDefeatedMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.PetDefeated",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ pet: petId, killer?: petId | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "PetReviveMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.PetRevive",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ pet: petId, revivedBy: petId }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "StatChangeMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.StatChange",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ pet: petId, stat: StatTypeOnBattle, stage: number, reason: string }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "RageChangeMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.RageChange",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ player: playerId, pet: petId, before: number, after: number, reason: \"turn\" | \"damage\" | \"skill\" | \"skillHit\" | \"switch\" | \"effect\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "HpChangeMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.HpChange",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ pet: petId, before: number, after: number, maxHp: number, reason: \"damage\" | \"heal\" | \"drain\" | \"revive\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "SkillUseMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.SkillUse",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ user: petId, target: AttackTargetOpinion, skill: skillId, baseSkill: baseSkillId, rage: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "SkillUseFailMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.SkillUseFail",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ user: petId, skill: skillId, reason: \"no_rage\" | \"invalid_target\" | \"faint\" | \"disabled\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "SkillMissMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.SkillMiss",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ user: petId, target: petId, skill: skillId, reason: \"accuracy\" | \"dodge\" | \"immune\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "SkillUseEndMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.SkillUseEnd",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "user",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "DamageMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Damage",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ maxHp: number, currentHp: number, source: markId | skillId | petId, target: petId, damage: number, isCrit: boolean, effectiveness: number, damageType: DamageType }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "DamageFailMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.DamageFail",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ source: markId | skillId | petId, target: petId, reason: \"disabled\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "HealMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Heal",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ target: petId, amount: number, source: \"effect\" | \"item\", healer?: string | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "HealFailMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.HealFail",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ target: petId, reason: \"disabled\" | \"disactivated\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "MarkApplyMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.MarkApply",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ baseMarkId: baseMarkId, target: petId | \"battle\", mark: MarkMessage }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "MarkDestroyMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.MarkDestroy",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ mark: markId, target: petId | \"battle\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "MarkExpireMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.MarkExpire",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ mark: markId, target: petId | \"battle\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "MarkUpdateMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.MarkUpdate",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ mark: MarkMessage, target: petId | \"battle\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "EffectApplyMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.EffectApply",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ source: markId | skillId, effect: effectId }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "TurnActionMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.TurnAction",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "ForcedSwitchMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.ForcedSwitch",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "FaintSwitchMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.FaintSwitch",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "InvalidActionMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.InvalidAction",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ player: playerId, action: string, reason: \"no_rage\" | \"invalid_target\" | \"dead_pet\" | \"invalid_action\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "InfoMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Info",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "message",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "ErrorMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Error",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "message",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "TransformMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.Transform",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ target: markId | skillId | petId, targetType: \"skill\" | \"pet\" | \"mark\", fromBase: baseMarkId | baseSkillId | speciesId, toBase: baseMarkId | baseSkillId | speciesId, transformType: \"temporary\" | \"permanent\", priority: number, causedBy?: markId | skillId | effectId | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "TransformEndMessage": [
    {
      "n": "type",
      "t": "BattleMessageType.TransformEnd",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number | undefined",
      "iu": true,
      "u": [
        "undefined",
        "number",
        "undefined"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "{ target: markId | skillId | petId, targetType: \"skill\" | \"pet\" | \"mark\", fromBase: baseMarkId | baseSkillId | speciesId, toBase: baseMarkId | baseSkillId | speciesId, reason: \"mark_destroyed\" | \"manual\" | \"replaced\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "SkillMessage": [
    {
      "n": "isUnknown",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "id",
      "t": "skillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseSkillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "category",
      "t": "Category.Physical | Category.Special | Category.Status | Category.Climax",
      "iu": true,
      "u": [
        "Category.Physical",
        "Category.Special",
        "Category.Status",
        "Category.Climax"
      ],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "power",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "accuracy",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "multihit",
      "t": "number | [number, number]",
      "iu": true,
      "u": [
        "number",
        "[number, number]"
      ],
      "a": false
    },
    {
      "n": "sureHit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "tag",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "modifierState",
      "t": "undefined | EntityModifierState",
      "iu": true,
      "u": [
        "undefined",
        "EntityModifierState"
      ],
      "a": false
    }
  ],
  "PetMessage": [
    {
      "n": "isUnknown",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "petId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "speciesID",
      "t": "speciesId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    },
    {
      "n": "level",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "currentHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxHp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "skills",
      "t": "undefined | SkillMessage",
      "iu": true,
      "u": [
        "undefined",
        "SkillMessage"
      ],
      "a": false
    },
    {
      "n": "stats",
      "t": "undefined | StatOnBattle",
      "iu": true,
      "u": [
        "undefined",
        "StatOnBattle"
      ],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkMessage",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkMessage"
    },
    {
      "n": "modifierState",
      "t": "undefined | EntityModifierState",
      "iu": true,
      "u": [
        "undefined",
        "EntityModifierState"
      ],
      "a": false
    }
  ],
  "MarkMessage": [
    {
      "n": "id",
      "t": "markId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseId",
      "t": "baseMarkId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stack",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "duration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "config",
      "t": "MarkConfig",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PlayerMessage": [
    {
      "n": "name",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "rage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxRage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "activePet",
      "t": "petId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "team",
      "t": "undefined | PetMessage",
      "iu": true,
      "u": [
        "undefined",
        "PetMessage"
      ],
      "a": false
    },
    {
      "n": "teamAlives",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "modifierState",
      "t": "undefined | EntityModifierState",
      "iu": true,
      "u": [
        "undefined",
        "EntityModifierState"
      ],
      "a": false
    }
  ],
  "ModifierInfo": [
    {
      "n": "id",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"percent\" | \"delta\" | \"override\" | \"clampMax\" | \"clampMin\" | \"clamp\"",
      "iu": true,
      "u": [
        "\"percent\"",
        "\"delta\"",
        "\"override\"",
        "\"clampMax\"",
        "\"clampMin\"",
        "\"clamp\""
      ],
      "a": false
    },
    {
      "n": "value",
      "t": "string | number | false | true",
      "iu": true,
      "u": [
        "string",
        "number",
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sourceType",
      "t": "\"skill\" | \"mark\" | \"other\"",
      "iu": true,
      "u": [
        "\"skill\"",
        "\"mark\"",
        "\"other\""
      ],
      "a": false
    },
    {
      "n": "sourceId",
      "t": "undefined | string",
      "iu": true,
      "u": [
        "undefined",
        "string"
      ],
      "a": false
    },
    {
      "n": "sourceName",
      "t": "undefined | string",
      "iu": true,
      "u": [
        "undefined",
        "string"
      ],
      "a": false
    }
  ],
  "AttributeModifierInfo": [
    {
      "n": "attributeName",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseValue",
      "t": "string | number | false | true",
      "iu": true,
      "u": [
        "string",
        "number",
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "currentValue",
      "t": "string | number | false | true",
      "iu": true,
      "u": [
        "string",
        "number",
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "modifiers",
      "t": "ModifierInfo",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "ModifierInfo"
    },
    {
      "n": "isModified",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "EntityModifierState": [
    {
      "n": "attributes",
      "t": "AttributeModifierInfo",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "AttributeModifierInfo"
    },
    {
      "n": "hasModifiers",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "BattleState": [
    {
      "n": "status",
      "t": "BattleStatus.Unstarted | BattleStatus.OnBattle | BattleStatus.Ended",
      "iu": true,
      "u": [
        "BattleStatus.Unstarted",
        "BattleStatus.OnBattle",
        "BattleStatus.Ended"
      ],
      "a": false
    },
    {
      "n": "currentPhase",
      "t": "BattlePhase.StartPhase | BattlePhase.SwitchPhase | BattlePhase.SelectionPhase | BattlePhase.ExecutionPhase | BattlePhase.Ended",
      "iu": true,
      "u": [
        "BattlePhase.StartPhase",
        "BattlePhase.SwitchPhase",
        "BattlePhase.SelectionPhase",
        "BattlePhase.ExecutionPhase",
        "BattlePhase.Ended"
      ],
      "a": false
    },
    {
      "n": "currentTurn",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkMessage",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkMessage"
    },
    {
      "n": "sequenceId",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "players",
      "t": "PlayerMessage",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "PlayerMessage"
    }
  ],
  "BaseBattleMessage": [
    {
      "n": "type",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "sequenceId",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "battleId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "data",
      "t": "BattleMessageData[T]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stateDelta",
      "t": "undefined | AddedDelta | ModifiedDelta | DeletedDelta | ObjectDelta | ArrayDelta | MovedDelta | TextDiffDelta",
      "iu": true,
      "u": [
        "undefined",
        "AddedDelta",
        "ModifiedDelta",
        "DeletedDelta",
        "ObjectDelta",
        "ArrayDelta",
        "MovedDelta",
        "TextDiffDelta"
      ],
      "a": false
    }
  ],
  "BattleMessageData": [
    {
      "n": "[BattleMessageType.BattleStart]",
      "t": "{  }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.TurnStart]",
      "t": "turn",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.TurnEnd]",
      "t": "turn",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.BattleEnd]",
      "t": "{ winner: playerId | null, reason: \"all_pet_fainted\" | \"surrender\" | \"total_time_timeout\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.PetSwitch]",
      "t": "{ player: playerId, fromPet: petId, toPet: petId, currentHp: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.PetDefeated]",
      "t": "{ pet: petId, killer?: petId | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.PetRevive]",
      "t": "{ pet: petId, revivedBy: petId }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.StatChange]",
      "t": "{ pet: petId, stat: StatTypeOnBattle, stage: number, reason: string }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.RageChange]",
      "t": "{ player: playerId, pet: petId, before: number, after: number, reason: \"turn\" | \"damage\" | \"skill\" | \"skillHit\" | \"switch\" | \"effect\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.HpChange]",
      "t": "{ pet: petId, before: number, after: number, maxHp: number, reason: \"damage\" | \"heal\" | \"drain\" | \"revive\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.SkillUse]",
      "t": "{ user: petId, target: AttackTargetOpinion, skill: skillId, baseSkill: baseSkillId, rage: number }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.SkillUseFail]",
      "t": "{ user: petId, skill: skillId, reason: \"no_rage\" | \"invalid_target\" | \"faint\" | \"disabled\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.SkillMiss]",
      "t": "{ user: petId, target: petId, skill: skillId, reason: \"accuracy\" | \"dodge\" | \"immune\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.SkillUseEnd]",
      "t": "user",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Damage]",
      "t": "{ maxHp: number, currentHp: number, source: markId | skillId | petId, target: petId, damage: number, isCrit: boolean, effectiveness: number, damageType: DamageType }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.DamageFail]",
      "t": "{ source: markId | skillId | petId, target: petId, reason: \"disabled\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Heal]",
      "t": "{ target: petId, amount: number, source: \"effect\" | \"item\", healer?: string | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.HealFail]",
      "t": "{ target: petId, reason: \"disabled\" | \"disactivated\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.MarkApply]",
      "t": "{ baseMarkId: baseMarkId, target: petId | \"battle\", mark: MarkMessage }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.MarkDestroy]",
      "t": "{ mark: markId, target: petId | \"battle\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.MarkExpire]",
      "t": "{ mark: markId, target: petId | \"battle\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.MarkUpdate]",
      "t": "{ mark: MarkMessage, target: petId | \"battle\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.EffectApply]",
      "t": "{ source: markId | skillId, effect: effectId }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.EffectApplyFail]",
      "t": "{ source: markId | skillId, effect: effectId, reason: \"disabled\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.TurnAction]",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.ForcedSwitch]",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.FaintSwitch]",
      "t": "player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.InvalidAction]",
      "t": "{ player: playerId, action: string, reason: \"no_rage\" | \"invalid_target\" | \"dead_pet\" | \"invalid_action\" }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Info]",
      "t": "message",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Error]",
      "t": "message",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.Transform]",
      "t": "{ target: markId | skillId | petId, targetType: \"skill\" | \"pet\" | \"mark\", fromBase: baseMarkId | baseSkillId | speciesId, toBase: baseMarkId | baseSkillId | speciesId, transformType: \"temporary\" | \"permanent\", priority: number, causedBy?: markId | skillId | effectId | undefined }",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "[BattleMessageType.TransformEnd]",
      "t": "{ target: markId | skillId | petId, targetType: \"skill\" | \"pet\" | \"mark\", fromBase: baseMarkId | baseSkillId | speciesId, toBase: baseMarkId | baseSkillId | speciesId, reason: \"mark_destroyed\" | \"manual\" | \"replaced\" }",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PlayerSelection": [
    {
      "n": "type",
      "t": "UseSkillSelection | SwitchPetSelection | DoNothingSelection | SurrenderSelection",
      "iu": true,
      "u": [
        "UseSkillSelection",
        "SwitchPetSelection",
        "DoNothingSelection",
        "SurrenderSelection"
      ],
      "a": false
    }
  ],
  "PlayerSelections": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "selections",
      "t": "PlayerSelection",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "PlayerSelection"
    }
  ],
  "UseSkillSelection": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"use-skill\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "skill",
      "t": "skillId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    }
  ],
  "SwitchPetSelection": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"switch-pet\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "pet",
      "t": "petId",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "DoNothingSelection": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"do-nothing\"",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SurrenderSelection": [
    {
      "n": "player",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "type",
      "t": "\"surrender\"",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TimerConfig": [
    {
      "n": "enabled",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "turnTimeLimit",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "totalTimeLimit",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "animationPauseEnabled",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "maxAnimationDuration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PlayerTimerState": [
    {
      "n": "playerId",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "state",
      "t": "TimerState.Stopped | TimerState.Running | TimerState.Paused | TimerState.Timeout",
      "iu": true,
      "u": [
        "TimerState.Stopped",
        "TimerState.Running",
        "TimerState.Paused",
        "TimerState.Timeout"
      ],
      "a": false
    },
    {
      "n": "remainingTurnTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "remainingTotalTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "lastUpdateTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "AnimationInfo": [
    {
      "n": "id",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "startTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "expectedDuration",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "actualDuration",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "source",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TimerEvent": [
    {
      "n": "type",
      "t": "TimerEventType.Start | TimerEventType.Update | TimerEventType.Pause | TimerEventType.Resume | TimerEventType.Timeout | TimerEventType.Stop | TimerEventType.Snapshot | TimerEventType.StateChange",
      "iu": true,
      "u": [
        "TimerEventType.Start",
        "TimerEventType.Update",
        "TimerEventType.Pause",
        "TimerEventType.Resume",
        "TimerEventType.Timeout",
        "TimerEventType.Stop",
        "TimerEventType.Snapshot",
        "TimerEventType.StateChange"
      ],
      "a": false
    },
    {
      "n": "playerId",
      "t": "undefined | playerId",
      "iu": true,
      "u": [
        "undefined",
        "playerId"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timestamp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TimerSnapshot": [
    {
      "n": "timestamp",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "playerId",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "state",
      "t": "TimerState.Stopped | TimerState.Running | TimerState.Paused | TimerState.Timeout",
      "iu": true,
      "u": [
        "TimerState.Stopped",
        "TimerState.Running",
        "TimerState.Paused",
        "TimerState.Timeout"
      ],
      "a": false
    },
    {
      "n": "remainingTurnTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "remainingTotalTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "config",
      "t": "TimerConfig",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "hasActiveAnimations",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "pauseReason",
      "t": "undefined | \"animation\" | \"system\"",
      "iu": true,
      "u": [
        "undefined",
        "\"animation\"",
        "\"system\""
      ],
      "a": false
    }
  ],
  "TimerCacheItem": [
    {
      "n": "snapshot",
      "t": "TimerSnapshot",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "cachedAt",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ttl",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TimerEventBatch": [
    {
      "n": "events",
      "t": "TimerEvent",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "TimerEvent"
    },
    {
      "n": "createdAt",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timer",
      "t": "undefined | NodeJS.Timeout",
      "iu": true,
      "u": [
        "undefined",
        "NodeJS.Timeout"
      ],
      "a": false
    }
  ],
  "AddMarkPhase": [
    {
      "n": "parentContext",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "MarkOwner",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseMark",
      "t": "BaseMark",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "stack",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "duration",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "config",
      "t": "undefined | Partial<MarkConfig>",
      "iu": true,
      "u": [
        "undefined",
        "Partial<MarkConfig>"
      ],
      "a": false
    }
  ],
  "BattlePhaseBase": [
    {
      "n": "state",
      "t": "PhaseState.Pending | PhaseState.Initializing | PhaseState.Executing | PhaseState.Completed | PhaseState.Failed | PhaseState.Cancelled",
      "iu": true,
      "u": [
        "PhaseState.Pending",
        "PhaseState.Initializing",
        "PhaseState.Executing",
        "PhaseState.Completed",
        "PhaseState.Failed",
        "PhaseState.Cancelled"
      ],
      "a": false
    },
    {
      "n": "result",
      "t": "undefined | PhaseResult",
      "iu": true,
      "u": [
        "undefined",
        "PhaseResult"
      ],
      "a": false
    },
    {
      "n": "_context",
      "t": "undefined | TContext",
      "iu": true,
      "u": [
        "undefined",
        "TContext"
      ],
      "a": false
    },
    {
      "n": "configModifierCleanups",
      "t": "(() => void)",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "(() => void)"
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "id",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "context",
      "t": "undefined | TContext",
      "iu": true,
      "u": [
        "undefined",
        "TContext"
      ],
      "a": false
    }
  ],
  "SynchronousPhase": [],
  "InteractivePhase": [
    {
      "n": "waitingForInput",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "inputResolver",
      "t": "undefined | (value: any) => void",
      "iu": true,
      "u": [
        "undefined",
        "(value: any) => void"
      ],
      "a": false
    },
    {
      "n": "inputRejecter",
      "t": "undefined | (reason: any) => void",
      "iu": true,
      "u": [
        "undefined",
        "(reason: any) => void"
      ],
      "a": false
    }
  ],
  "PhaseResult": [
    {
      "n": "success",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "state",
      "t": "PhaseState.Pending | PhaseState.Initializing | PhaseState.Executing | PhaseState.Completed | PhaseState.Failed | PhaseState.Cancelled",
      "iu": true,
      "u": [
        "PhaseState.Pending",
        "PhaseState.Initializing",
        "PhaseState.Executing",
        "PhaseState.Completed",
        "PhaseState.Failed",
        "PhaseState.Cancelled"
      ],
      "a": false
    },
    {
      "n": "error",
      "t": "undefined | Error",
      "iu": true,
      "u": [
        "undefined",
        "Error"
      ],
      "a": false
    },
    {
      "n": "data",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PhaseContext": [
    {
      "n": "context",
      "t": "TContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "phase",
      "t": "BattlePhaseBase<TContext>",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BattleLoopPhase": [],
  "BattleStartPhase": [],
  "BattleSwitchContext": [
    {
      "n": "type",
      "t": "\"battle-switch\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BattleSwitchPhase": [],
  "DamagePhase": [
    {
      "n": "parentContext",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "source",
      "t": "MarkInstance | SkillInstance | Pet",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "baseDamage",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "damageType",
      "t": "DamageType.Physical | DamageType.Special | DamageType.Effect",
      "iu": true,
      "u": [
        "DamageType.Physical",
        "DamageType.Special",
        "DamageType.Effect"
      ],
      "a": false
    },
    {
      "n": "crit",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "effectiveness",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ignoreShield",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "randomFactor",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "modified",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "minThreshold",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "maxThreshold",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "element",
      "t": "undefined | Element.Normal | Element.Grass | Element.Water | Element.Fire | Element.Wind | Element.Bug | Element.Flying | Element.Electric | Element.Ground | Element.Ice | Element.Psychic | Element.Fighting | Element.Trait | Element.Light | Element.Mystery | Element.Shadow | Element.Dragon | Element.Desert | Element.Ancient | Element.Divine | Element.Miracle | Element.Holy | Element.ElfKing",
      "iu": true,
      "u": [
        "undefined",
        "Element.Normal",
        "Element.Grass",
        "Element.Water",
        "Element.Fire",
        "Element.Wind",
        "Element.Bug",
        "Element.Flying",
        "Element.Electric",
        "Element.Ground",
        "Element.Ice",
        "Element.Psychic",
        "Element.Fighting",
        "Element.Trait",
        "Element.Light",
        "Element.Mystery",
        "Element.Shadow",
        "Element.Dragon",
        "Element.Desert",
        "Element.Ancient",
        "Element.Divine",
        "Element.Miracle",
        "Element.Holy",
        "Element.ElfKing"
      ],
      "a": false
    }
  ],
  "EffectPhase": [
    {
      "n": "parentContext",
      "t": "TriggerContextMap[T]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "trigger",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "source",
      "t": "MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "effect",
      "t": "undefined | Effect<EffectTrigger>",
      "iu": true,
      "u": [
        "undefined",
        "Effect<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "BatchEffectPhase": [
    {
      "n": "effects",
      "t": "{ parentContext: TriggerContextMap[T]; trigger: T; source: MarkInstance | SkillInstance; effect?: Effect<EffectTrigger> | undefined; }",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "{ parentContext: TriggerContextMap[T]; trigger: T; source: MarkInstance | SkillInstance; effect?: Effect<EffectTrigger> | undefined; }"
    }
  ],
  "EffectExecutionPhase": [
    {
      "n": "logger",
      "t": "BattleLogger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parentContext",
      "t": "TriggerContextMap[T]",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "trigger",
      "t": "T",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "effectContainers",
      "t": "EffectContainer",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "EffectContainer"
    }
  ],
  "HealPhase": [
    {
      "n": "parentContext",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "source",
      "t": "MarkInstance | SkillInstance",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "value",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ignoreEffect",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "modified",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PhaseManager": [
    {
      "n": "logger",
      "t": "BattleLogger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "phases",
      "t": "Map<string, BattlePhaseBase<Context>>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "executionQueue",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "dependencies",
      "t": "Map<string, PhaseDependency[]>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "executionHistory",
      "t": "string",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "string"
    },
    {
      "n": "currentPhase",
      "t": "undefined | BattlePhaseBase<Context>",
      "iu": true,
      "u": [
        "undefined",
        "BattlePhaseBase<Context>"
      ],
      "a": false
    },
    {
      "n": "isExecuting",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "PhaseExecutionOptions": [
    {
      "n": "timeout",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "retryCount",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "skipOnError",
      "t": "undefined | false | true",
      "iu": true,
      "u": [
        "undefined",
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "PhaseDependency": [
    {
      "n": "phaseId",
      "t": "string",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "required",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    }
  ],
  "MarkCleanupPhase": [
    {
      "n": "turnContext",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkStackPhase": [
    {
      "n": "stackContext",
      "t": "StackContext",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkSwitchOutPhase": [
    {
      "n": "switchContext",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "pet",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "MarkTransferPhase": [
    {
      "n": "transferContext",
      "t": "SwitchPetContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "Battle | Pet",
      "iu": true,
      "u": [
        "Battle",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "marks",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": true,
      "nt": "MarkInstance"
    }
  ],
  "MarkUpdatePhase": [
    {
      "n": "turnContext",
      "t": "TurnContext",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "mark",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "RagePhase": [
    {
      "n": "parentContext",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "reason",
      "t": "\"turn\" | \"damage\" | \"skill\" | \"skillHit\" | \"switch\" | \"effect\"",
      "iu": true,
      "u": [
        "\"turn\"",
        "\"damage\"",
        "\"skill\"",
        "\"skillHit\"",
        "\"switch\"",
        "\"effect\""
      ],
      "a": false
    },
    {
      "n": "modifiedType",
      "t": "\"setting\" | \"add\" | \"reduce\"",
      "iu": true,
      "u": [
        "\"setting\"",
        "\"add\"",
        "\"reduce\""
      ],
      "a": false
    },
    {
      "n": "value",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "ignoreRageObtainEfficiency",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "modified",
      "t": "[number, number]",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "RemoveMarkPhase": [
    {
      "n": "parentContext",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "mark",
      "t": "MarkInstance",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SelectionContext": [
    {
      "n": "type",
      "t": "\"selection\"",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SelectionPhase": [],
  "SkillPhase": [
    {
      "n": "origin",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "pet",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "selectTarget",
      "t": "AttackTargetOpinion.self | AttackTargetOpinion.opponent",
      "iu": true,
      "u": [
        "AttackTargetOpinion.self",
        "AttackTargetOpinion.opponent"
      ],
      "a": false
    },
    {
      "n": "skill",
      "t": "SkillInstance",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parentContext",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "existingContext",
      "t": "undefined | UseSkillContext",
      "iu": true,
      "u": [
        "undefined",
        "UseSkillContext"
      ],
      "a": false
    },
    {
      "n": "skillInstance",
      "t": "SkillInstance",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "petInstance",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "SwitchPetPhase": [
    {
      "n": "origin",
      "t": "Player",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "target",
      "t": "Pet",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "parentContext",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "existingContext",
      "t": "undefined | SwitchPetContext",
      "iu": true,
      "u": [
        "undefined",
        "SwitchPetContext"
      ],
      "a": false
    }
  ],
  "TransformPhase": [
    {
      "n": "parentContext",
      "t": "Battle | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "Battle",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "MarkInstance | SkillInstance | Pet",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "targetType",
      "t": "\"skill\" | \"pet\" | \"mark\"",
      "iu": true,
      "u": [
        "\"skill\"",
        "\"pet\"",
        "\"mark\""
      ],
      "a": false
    },
    {
      "n": "fromBase",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toBase",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "transformType",
      "t": "\"temporary\" | \"permanent\"",
      "iu": true,
      "u": [
        "\"temporary\"",
        "\"permanent\""
      ],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "causedBy",
      "t": "undefined | MarkInstance | SkillInstance | Effect<EffectTrigger>",
      "iu": true,
      "u": [
        "undefined",
        "MarkInstance",
        "SkillInstance",
        "Effect<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "TransformEndPhase": [
    {
      "n": "parentContext",
      "t": "Battle | EffectContext<EffectTrigger>",
      "iu": true,
      "u": [
        "Battle",
        "EffectContext<EffectTrigger>"
      ],
      "a": false
    },
    {
      "n": "target",
      "t": "MarkInstance | SkillInstance | Pet",
      "iu": true,
      "u": [
        "MarkInstance",
        "SkillInstance",
        "Pet"
      ],
      "a": false
    },
    {
      "n": "targetType",
      "t": "\"skill\" | \"pet\" | \"mark\"",
      "iu": true,
      "u": [
        "\"skill\"",
        "\"pet\"",
        "\"mark\""
      ],
      "a": false
    },
    {
      "n": "fromBase",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "toBase",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "transformType",
      "t": "\"temporary\" | \"permanent\"",
      "iu": true,
      "u": [
        "\"temporary\"",
        "\"permanent\""
      ],
      "a": false
    },
    {
      "n": "priority",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "causedBy",
      "t": "undefined | MarkInstance | SkillInstance | Effect<EffectTrigger>",
      "iu": true,
      "u": [
        "undefined",
        "MarkInstance",
        "SkillInstance",
        "Effect<EffectTrigger>"
      ],
      "a": false
    }
  ],
  "TurnPhase": [],
  "AnimationTracker": [
    {
      "n": "logger",
      "t": "BattleLogger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "activeAnimations",
      "t": "Map<string, AnimationInfo>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "animationTimeouts",
      "t": "Map<string, NodeJS.Timeout>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "animationOwners",
      "t": "Map<string, playerId>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "normallyEndedAnimations",
      "t": "Set<string>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "emitter",
      "t": "Emitter<AnimationTrackerEvents>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timeoutCallback",
      "t": "undefined | (animationId: string, ownerId: playerId) => void",
      "iu": true,
      "u": [
        "undefined",
        "(animationId: string, ownerId: playerId) => void"
      ],
      "a": false
    },
    {
      "n": "config",
      "t": "TimerConfig",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "AnimationTrackerEvents": [
    {
      "n": "animationStart",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "animationEnd",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "animationForceEnd",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BattleTimer": [
    {
      "n": "logger",
      "t": "BattleLogger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "state",
      "t": "TimerState.Stopped | TimerState.Running | TimerState.Paused | TimerState.Timeout",
      "iu": true,
      "u": [
        "TimerState.Stopped",
        "TimerState.Running",
        "TimerState.Paused",
        "TimerState.Timeout"
      ],
      "a": false
    },
    {
      "n": "remainingTurnTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "remainingTotalTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "lastUpdateTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "updateTimer",
      "t": "undefined | NodeJS.Timeout",
      "iu": true,
      "u": [
        "undefined",
        "NodeJS.Timeout"
      ],
      "a": false
    },
    {
      "n": "pauseStartTime",
      "t": "undefined | number",
      "iu": true,
      "u": [
        "undefined",
        "number"
      ],
      "a": false
    },
    {
      "n": "totalPausedTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "emitter",
      "t": "Emitter<BattleTimerEvents>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "hasActiveAnimationsCallback",
      "t": "undefined | () => boolean",
      "iu": true,
      "u": [
        "undefined",
        "() => boolean"
      ],
      "a": false
    },
    {
      "n": "lastEmittedState",
      "t": "TimerState.Stopped | TimerState.Running | TimerState.Paused | TimerState.Timeout",
      "iu": true,
      "u": [
        "TimerState.Stopped",
        "TimerState.Running",
        "TimerState.Paused",
        "TimerState.Timeout"
      ],
      "a": false
    },
    {
      "n": "lastSnapshotTime",
      "t": "number",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "pauseReason",
      "t": "undefined | \"animation\" | \"system\"",
      "iu": true,
      "u": [
        "undefined",
        "\"animation\"",
        "\"system\""
      ],
      "a": false
    },
    {
      "n": "playerId",
      "t": "playerId",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "config",
      "t": "TimerConfig",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "BattleTimerEvents": [
    {
      "n": "timerEvent",
      "t": "TimerEvent",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TimerManager": [
    {
      "n": "logger",
      "t": "BattleLogger",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "playerTimers",
      "t": "Map<playerId, BattleTimer>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "animationTracker",
      "t": "AnimationTracker",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "config",
      "t": "TimerConfig",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "isActive",
      "t": "false | true",
      "iu": true,
      "u": [
        "false",
        "true"
      ],
      "a": false
    },
    {
      "n": "currentPhase",
      "t": "null | \"switch\" | \"selection\" | \"execution\"",
      "iu": true,
      "u": [
        "null",
        "\"switch\"",
        "\"selection\"",
        "\"execution\""
      ],
      "a": false
    },
    {
      "n": "pendingTurnReset",
      "t": "null | playerIds",
      "iu": true,
      "u": [
        "null",
        "playerIds"
      ],
      "a": false
    },
    {
      "n": "emitter",
      "t": "Emitter<TimerManagerEvents>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "playerSelectionStatus",
      "t": "Map<playerId, boolean>",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "battle",
      "t": "Battle",
      "iu": false,
      "u": [],
      "a": false
    }
  ],
  "TimerManagerEvents": [
    {
      "n": "animationStart",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "animationEnd",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "animationForceEnd",
      "t": "any",
      "iu": false,
      "u": [],
      "a": false
    },
    {
      "n": "timerEvent",
      "t": "TimerEvent",
      "iu": false,
      "u": [],
      "a": false
    }
  ]
}