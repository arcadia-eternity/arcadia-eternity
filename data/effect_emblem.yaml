# data/effect_emblem.yaml
# yaml-language-server: $schema=../packages/schema/schema/effect.schema.json
# @metaType effect
# @version 1.0.0
- id: effect_emblem_set_ruodianbiaoji_keeponswitchout
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_ruodianjihao
  apply:
    type: setMarkTransferOnSwitch
    target: addMarkContext
    value: true
- id: effect_emblem_increase_rage_on_damage
  trigger: OnRageGain
  priority: 0
  condition:
    type: selfBeDamaged
  apply:
    type: addModified
    target: rageContext
    percent: 20
    delta: 0
- id: effect_emblem_20percent_double_heal
  trigger: OnHeal
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeHeal
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 20
  apply:
    type: addModified
    target: healContext
    percent: 100
    delta: 0
- id: effect_emblem_destroy_meihuo_onturnend
  trigger: TurnEnd
  priority: 0
  condition:
    type: every
    conditions:
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: selectPath
              arg: baseId
            - type: where
              arg:
                type: same
                value: mark_meihuo
        evaluator:
          type: exist
  apply:
    type: destroyMark
    target:
      base: selfMarks
      chain:
        - type: selectPath
          arg: baseId
        - type: where
          arg:
            type: same
            value: mark_meihuo
- id: effect_emblem_set_zhongdu_duration_2
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_zhongdu
  apply:
    type: setMarkDuration
    target: addMarkContext
    value: 2
- id: effect_emblem_increase_weight_10kg
  trigger: OnBattleStart
  priority: 1
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: weight
    modifierType: delta
    value: 10
- id: effect_emblem_decrease_liuxue_duration_1
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_liuxue
  apply: #TODO:增量而不是设置
    type: setMarkDuration
    target: addMarkContext
    value: 2
- id: effect_emblem_decrease_shiming_duration_1
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_shiming
  apply: #TODO:增量而不是设置
    type: setMarkDuration
    target: addMarkContext
    value: 2
- id: effect_emblem_add_manxingduyao_maxstack_4
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_manxingduyao
  apply:
    type: setMarkMaxStack
    target: addMarkContext
    value: 14
- id: effect_emblem_immune_mark_zhixi
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_zhixi
  apply:
    type: disableContext
    target: addMarkContext
- id: effect_emblem_add_xingzhili_duration
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_xingzhili
  apply:
    type: setMarkDuration
    target: addMarkContext
    value: 10
- id: effect_emblem_add_crit_rate_5_percent_if_has_shuiwenzhenji
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    - type: addCritRate
      target: usingSkillContext
      value: 5
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        evaluator:
          type: exist
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_shuiwenzhenji
- id: effect_emblem_add_shaoshang_duration
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_shaoshang
  apply:
    type: setMarkDuration
    target: addMarkContext
    value: 4
- id: effect_emblem_add_xuanyun_duration
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_xuanyun
  apply:
    type: setMarkDuration
    target: addMarkContext
    value: 6
- id: effect_emblem_immune_mark_haipa
  trigger: OnBeforeAddMark
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_haipa
  apply:
    type: disableContext
    target: addMarkContext
- id: effect_emblem_add_mark_yanhuo_duration_1
  trigger: OnBeforeAddMark
  priority: 1
  apply:
    type: setMarkDuration
    target: addMarkContext
    value:
      type: dynamic
      selector:
        base: addMarkContext
        chain:
          - type: select
            arg:
              type: dynamic
              arg: duration
          - type: add
            arg: 1
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_yanhuo
