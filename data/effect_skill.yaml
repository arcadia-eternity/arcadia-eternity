# data/effect_skill.yaml
# yaml-language-server: $schema=../packages/schema/schema/effect.schema.json
# @metaType effect
# @version 1.0.0
- id: effect_skill_reduce_stat_5_percent
  trigger: OnDamage
  priority: 0
  apply: &apply_opponent_statstage_-1_template
    type: statStageBuff
    target:
      base: opponent
    statType: def
    value: -1
  condition: &condition_probability_5_percent_template
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 5
            tags: ['skill_effect_probability']
- id: effect_skill_reduce_opponent_def_1_stage_5_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: def
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_opponent_spe_1_stage_5_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spe
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_opponent_spd_1_stage_5_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spd
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_opponent_atk_1_stage_5_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: atk
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_opponent_spa_1_stage_5_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spa
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_opponent_spd_1_stage_10_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spd
  condition: &condition_probability_10_percent_template
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 10
            tags: ['skill_effect_probability']
- id: effect_skill_reduce_opponent_def_1_stage_10_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: def
  condition: *condition_probability_10_percent_template
- id: effect_skill_reduce_opponent_def_1_stage_15_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: def
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_15_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 15
            tags: ['skill_effect_probability']
- id: effect_skill_reduce_opponent_spa_1_stage_10_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spa
  condition: *condition_probability_10_percent_template
- id: effect_skill_reduce_opponent_spa_1_stage_15_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_15_percent_template
- id: effect_skill_raise_atk_1_stage
  trigger: BeforeHit
  priority: 0
  apply: &apply_self_statstage_+1_template
    type: statStageBuff
    target: self
    statType: atk
    value: 1
  condition: &condition_self_use_skill_template
    type: selfUseSkill
- id: effect_skill_raise_atk_1_stage_5_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: atk
  condition: *condition_probability_5_percent_template
- id: effect_skill_raise_atk_1_stage_10_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: atk
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_10_percent_template
- id: effect_skill_raise_atk_1_stage_15_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: atk
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_15_percent_template
- id: effect_skill_raise_def_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: def
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spa_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spa
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spa_1_stage_10_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_10_percent_template
- id: effect_skill_raise_spa_1_stage_15_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_15_percent_template
- id: effect_skill_raise_spd_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spd
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spd_1_stage_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spd
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_20_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 20
            tags: ['skill_effect_probability']
- id: effect_skill_raise_spe_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spe_1_stage_5_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_5_percent_template
- id: effect_skill_raise_spe_1_stage_10_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_10_percent_template
- id: effect_skill_raise_spe_1_stage_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
- id: effect_skill_raise_atk_2_stages
  trigger: BeforeHit
  priority: 0
  apply: &apply_self_statstage_+2_template
    type: statStageBuff
    target: self
    statType: atk
    value: 2
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_def_2_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+2_template
    statType: def
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spa_2_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+2_template
    statType: spa
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spd_2_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+2_template
    statType: spd
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spe_2_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+2_template
    statType: spe
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_opponent_stat_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: def
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_opponent_atk_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: atk
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_opponent_atk_1_stage_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: atk
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
- id: effect_skill_reduce_opponent_def_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: def
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_opponent_spa_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spa
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_opponent_spd_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spd
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_opponent_spe_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spe
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_opponent_ruodian
  trigger: OnHit
  priority: 0
  apply: &apply_opponent_add_mark_ruodian_template
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_ruodianjihao
    stack: 1
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_opponent_ruodian_2
  trigger: OnHit
  priority: 0
  apply:
    <<: *apply_opponent_add_mark_ruodian_template
    stack: 2
  condition: *condition_self_use_skill_template
- id: effect_skill_consume_ruodian
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: opponentMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_ruodianjihao
    value: 2
  condition: *condition_self_use_skill_template
- id: effect_skill_add_crit_rate_ruodian
  trigger: AfterUseSkillCheck
  priority: 1
  apply:
    type: addCritRate
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_ruodianjihao
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 45
  condition: *condition_self_use_skill_template
- id: effect_skill_add_hit_result_ruodian
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addMultihitResult
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_ruodianjihao
          - type: select
            arg:
              type: base
              arg: stack
  condition: *condition_self_use_skill_template
- id: effect_skill_add_power_50_ruodian
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_ruodianjihao
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 50
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_opponent_yishang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_yishang
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_opponent_shaoshang
  trigger: OnHit
  priority: 0
  apply: &apply_opponent_add_mark_shaoshang_template
    type: conditional
    condition: &condition_opponent_not_fire_element
      type: evaluate
      target:
        base: opponent
        chain:
          - type: select
            arg:
              type: base
              arg: element
      evaluator:
        type: notSame
        value: Fire
    trueOperator:
      type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_shaoshang
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_opponent_not_fire_element
- id: effect_skill_add_mark_opponent_shaoshang_5_percent
  trigger: OnHit
  priority: 0
  apply: *apply_opponent_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_5_percent_template
      - *condition_opponent_not_fire_element
- id: effect_skill_add_mark_opponent_shaoshang_10_percent
  trigger: OnHit
  priority: 0
  apply: *apply_opponent_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_10_percent_template
      - *condition_opponent_not_fire_element
- id: effect_skill_add_mark_opponent_shaoshang_15_percent
  trigger: OnHit
  priority: 0
  apply: *apply_opponent_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_15_percent_template
      - *condition_opponent_not_fire_element
- id: effect_skill_add_mark_opponent_shaoshang_20_percent
  trigger: OnHit
  priority: 0
  apply: *apply_opponent_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
      - *condition_opponent_not_fire_element
- id: effect_skill_add_mark_opponent_shaoshang_30_percent
  trigger: OnHit
  priority: 0
  apply: *apply_opponent_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_30_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 30
            tags: ['skill_effect_probability']
      - *condition_opponent_not_fire_element
- id: effect_skill_add_mark_opponent_shaoshang_50_percent
  trigger: OnHit
  priority: 0
  apply: *apply_opponent_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_opponent_not_fire_element
      - &condition_probability_50_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 50
            tags: ['skill_effect_probability']
- id: effect_skill_add_mark_opponent_shaoshang_60_percent
  trigger: OnHit
  priority: 0
  apply: *apply_opponent_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_opponent_not_fire_element
      - &condition_probability_60_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 60
            tags: ['skill_effect_probability']
- id: effect_skill_min_damage_95
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addThreshold
    target: damageContext
    min: 95
  condition: *condition_self_use_skill_template
- id: effect_skill_min_damage_100
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addThreshold
    target: damageContext
    min: 100
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_yanggong
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yanggong
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_jizhong
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_bizhong
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_busi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_busi
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_weilifanbei
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_weilifanbei
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_self_hp_1_6
  trigger: BeforeHit
  priority: 0
  apply:
    type: dealDamage
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 6
  condition: *condition_self_use_skill_template
- id: effect_skill_add_rage_35
  trigger: OnHit
  priority: 0
  apply:
    type: addRage
    target: self
    value: 35
  condition: *condition_self_use_skill_template
- id: effect_skill_power_4x_below_1_6_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 4
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 6
- id: effect_heal_self_half
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 2
  condition: *condition_self_use_skill_template
- id: effect_heal_self_onethird
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 3
  condition: *condition_self_use_skill_template
- id: effect_skill_heal_self_quarter
  trigger: OnHit
  priority: 0
  condition:
    type: selfUseSkill
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 4
- id: effect_skill_add_mark_zhongzinengliang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zhongzinengliang
    stack: 4
  condition: *condition_self_use_skill_template
- id: effect_skill_consume_all_zhongzinengliang
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_zhongzinengliang
    value: 4
  condition: *condition_self_use_skill_template
- id: effect_skill_add_power_25_zhongzinengliang
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_zhongzinengliang
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 25
  condition: *condition_self_use_skill_template
- id: effect_skill_heal_by_damage_25_zhongzinengliang
  trigger: PostDamage
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: divide
            arg: 4
          - type: multiply
            arg:
              type: dynamic
              selector:
                base: selfMarks
                chain:
                  - type: whereAttr
                    extractor:
                      type: base
                      arg: baseId
                    evaluator:
                      type: same
                      value: mark_zhongzinengliang
                  - type: select
                    arg:
                      type: base
                      arg: stack
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_opponent_mingzhongxiajiang_15
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_mingzhongxiajiang
    stack:
      type: raw:number
      value: 15
      tags: ['skill_effect_stack', 'skill_effect_mingzhongxiajiang_stack']
  condition: *condition_self_use_skill_template
- id: effect_skill_opponent_clear_stage
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: opponent
    cleanStageStrategy: positive
  condition: *condition_self_use_skill_template
- id: effect_skill_clear_stage
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: self
    cleanStageStrategy: negative
  condition: *condition_self_use_skill_template
- id: effect_skill_power_2x_below_quarter_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_self_hp_below_quarter
        type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 4
- id: effect_skill_power_2x_opponent_below_quarter_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_opponent_below_quarter_hp
        type: evaluate
        target:
          base: opponent
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: opponent
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 4
- id: effect_skill_add_mark_opponent_jishengzhadan
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_jishengzhadan
  condition: *condition_self_use_skill_template
- id: effect_skill_ignite_opponent_mark_jishengzhadan
  trigger: OnHit
  priority: 0
  apply:
    - type: destroyMark
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor: baseId
            evaluator:
              type: same
              value: mark_jishengzhadan
    - type: dealDamage
      target: opponent
      value: 300
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_jishengzhadan
        evaluator:
          type: exist
- id: effect_skill_add_mark_opponent_jisheng
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_jisheng
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_opponent_liuxie_with_zhongzinengliang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_liuxie
    duration:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_zhongzinengliang
          - type: select
            arg:
              type: base
              arg: stack
          - type: add
            arg: 3
    stack: 50
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_opponent_nishui
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_nishui
  condition:
    type: every
    conditions:
      - *condition_self_use_skill_template
      - &condition_opponent_not_water_element
        type: evaluate
        target:
          base: opponent
          chain:
            - type: select
              arg:
                type: base
                arg: element
        evaluator:
          type: notSame
          value: Water
- id: effect_skill_add_mark_opponent_nishui_10_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_nishui
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_10_percent_template
      - *condition_opponent_not_water_element
- id: effect_skill_add_mark_huifu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_huifu
  condition: *condition_self_use_skill_template
- id: effect_skill_save_hp_to_1
  trigger: OnDamage
  priority: 0
  apply:
    type: addThreshold
    target: damageContext
    max:
      type: dynamic
      selector:
        base: opponent
        chain:
          - type: select
            arg:
              type: base
              arg: currentHp
          - type: add
            arg: -1
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_mingzhongtisheng_10
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mingzhongtisheng
    stack: 10
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_mingzhongtisheng_15
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mingzhongtisheng
    stack: 15
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_weilibianhua_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_weilibianhua
    stack: 50
  condition: *condition_self_use_skill_template
- id: effect_skill_power_2x_opponent_maxhp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponent
          chain:
            - type: select
              arg:
                type: base
                arg: maxHp
        evaluator:
          type: compare
          operator: ==
          value:
            type: dynamic
            selector:
              base: opponent
              chain:
                - type: select
                  arg:
                    type: base
                    arg: currentHp
- id: effect_skill_power_4x_opponent_below_quarter_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 4
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_opponent_below_quarter_hp
- id: effect_skill_add_mark_opponent_meihuo
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_meihuo
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_sure_crit_below_1_4
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 4
- id: effect_skill_add_mark_shanbi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanbi
    stack: 1
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_shanbi_2
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanbi
    stack: 2
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_bizhong
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_bizhong
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_opponent_mihuo
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_mihuo
  condition: *condition_self_use_skill_template
- id: effect_skill_add_damage_maxhp_1_4_maxhp_max_180
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    delta:
      type: dynamic
      selector:
        base: opponent
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 4
          - type: clampMax
            arg: 180
    percent: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponent
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: ==
          value:
            type: dynamic
            selector:
              base: opponent
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
- id: effect_skill_add_multihit_opponent_has_mark_kuihuazhongzi
  trigger: BeforeMultiHit
  priority: 0
  apply:
    type: addMultihitResult
    target:
      base: usingSkillContext
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_kuihuazhongzi
- id: effect_skill_ignore_stat_opponent_has_mark_kuihuazhongzi
  trigger: BeforeHit
  priority: 0
  apply:
    type: setIgnoreStageStrategy
    target: usingSkillContext
    value: positive
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_kuihuazhongzi
- id: effect_skill_add_mark_opponent_kuihuazhongzi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_kuihuazhongzi
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_opponent_wulicao
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_wulicao
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_xishoucao
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xishoucao
  condition:
    type: selfUseSkill
- id: effect_skill_clear_status
  trigger: OnHit
  priority: 0
  apply:
    type: destroyMark
    target:
      base: self
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: tags
          evaluator:
            type: contain
            tag: status
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_opponent_zhongdu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_zhongdu
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_opponent_zhongdu_5_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_zhongdu
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_5_percent_template
- id: effect_skill_add_mark_opponent_zhongdu_10_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_zhongdu
  condition: *condition_probability_10_percent_template
- id: effect_skill_set_field_qingtian
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: battle
    mark:
      type: entity:baseMark
      value: mark_global_qingtian
  condition:
    type: selfUseSkill
- id: effect_skill_setsurehit_opponent_has_mark_kuihuazhongzi
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_kuihuazhongzi
- id: effect_skill_add_mark_opponent_zhongdu_duration_2
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_zhongdu
    duration:
      type: dynamic
      selector:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_zhongdu
          - type: select
            arg:
              type: base
              arg: stack
          - type: add
            arg: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_zhongdu
- id: effect_skill_add_mark_rouhua_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_rouhua
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_accuracy_when_reused
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addAccuracy
    target:
      base: usingSkillContext
    value: 25
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: continuousUseSkill
- id: effect_skill_add_mark_zengzhong_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zengzhong
    stack: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_power2x_if_heavier
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_heavier_template
        type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: stat.weight
        evaluator:
          type: compare
          operator: '>'
          value:
            type: dynamic
            selector:
              base: opponent
              chain:
                - type: select
                  arg:
                    type: dynamic
                    arg: stat.weight
- id: effect_skill_add_mark_zhifanghudun_stack_with_weight
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zhifanghudun
    stack:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.weight
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_power2x_if_higher_level
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_level_higher_template
        type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: level
        evaluator:
          type: compare
          operator: '>'
          value:
            type: dynamic
            selector:
              base: opponent
              chain:
                - type: select
                  arg:
                    type: dynamic
                    arg: level
- id: effect_skill_increase_accuracy_50_if_higher_level
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addAccuracy
    target:
      base: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_level_higher_template
- id: effect_skill_add_mark_opponent_haipa
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_haipa
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_opponent_haipa_10_if_heavier_40
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_haipa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: conditional
            trueValue: 40
            falseValue: 10
            condition: *condition_heavier_template
- id: effect_skill_fixed_damage_by_weight
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.weight
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_zengzhong_2
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zengzhong
    stack: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_tanhuan_10
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_tanhuan
  condition: *condition_probability_10_percent_template
- id: effect_skill_power2x_if_weight_above_99
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: stat.weight
        evaluator:
          type: compare
          operator: '>'
          value: 99
- id: effect_skill_add_mark_shanghaizengjia_stack_with_zengzhong_stack_x75
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanghaizengjia
    stack:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_zengzhong
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 75
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_all_zengzhong
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_zengzhong
    value: 2
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_exin_opponent_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_exin
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_50_percent_template
- id: effect_skill_add_mark_tanxingzhifang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_tanxingzhifang
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_yinghua_25
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yinghua
    stack: 25
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_power_30_has_mark_yinghua
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value: 30
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_yinghua
- id: effect_skill_heal_self_90_hp
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value: 90
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_fanshe
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_fanshe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_clear_opponent_def_stage_if_has_mark_yinghua
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: opponent
    statType: def
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_yinghua
- id: effect_skill_clear_opponent_spd_stage_if_has_mark_yinghua
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: opponent
    statType: spd
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_yinghua
- id: effect_skill_add_mark_opponent_liuxie
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack: 30
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_double_mark_liuxie_stack
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack:
      type: dynamic
      selector:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_liuxie
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_liuxie
- id: effect_skill_sure_hit_if_has_mark_yinghua
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_yinghua
- id: effect_skill_add_power_30_per_usetime
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value: &value_skill_add_30_per_usetime
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 3
          - type: multiply
            arg: 30
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_crit_rate_30_per_usetime
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target:
      base: usingSkillContext
    value: *value_skill_add_30_per_usetime
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_multihit_per_usetime
  trigger: BeforeMultiHit
  priority: 0
  apply:
    type: addMultihitResult
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 3
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_mianyiruohua
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mianyiruohua
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_self_damage_25_percent
  trigger: PostDamage
  priority: 0
  apply:
    type: dealDamage
    target: self
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: multiply
            arg: 0.25
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_shiming_10_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shiming
  condition: *condition_probability_10_percent_template
- id: effect_skill_add_damage_50_per_usetime
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 3
          - type: multiply
            arg: 50
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_sure_hit_below_1_4_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 4
- id: effect_skill_add_mark_hunzhuoshuiyu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_hunzhuoshuiyu
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_opponent_manxingduyao_1_stack
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_manxingduyao
    stack: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_opponent_manxingduyao_70_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_manxingduyao
    stack: 1
  condition: &condition_probability_70_percent_template
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 70
            tags: ['skill_effect_probability']
- id: effect_skill_heal_self_120_hp
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value: 120
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_reduce_opponent_def_1_stage_50_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: def
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_50_percent_template
- id: effect_skill_reduce_opponent_spd_1_stage_50_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spd
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_50_percent_template
- id: effect_skill_add_mark_opponent_manxingduyao_5_stack
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_manxingduyao
    stack: 5
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_destroy_mark_zhongdu
  trigger: OnHit
  priority: 0
  apply:
    type: destroyMark
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_zhongdu
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_power_10_per_opponent_manxingduyao
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_manxingduyao
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 10
- id: effect_skill_consume_all_opponent_manxingduyao
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: opponentMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_manxingduyao
    value: 10
- id: effect_skill_add_mark_judushenti
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_judushenti
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_reduce_opponent_def_1_stage_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: def
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
- id: effect_skill_reduce_opponent_spa_1_stage_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
- id: effect_skill_reduce_opponent_spd_1_stage_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spd
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
- id: effect_skill_reduce_opponent_spe_1_stage_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
- id: effect_skill_raise_spe_70_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition: *condition_probability_70_percent_template
- id: effect_skill_add_mark_kongqichuliang_100
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_kongqichuliang
    stack: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_mark_kongqichuliang_10_if_fail_reduce_damage_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target: &mark_kongqichuliang_stack_template
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_kongqichuliang
          - type: select
            arg:
              type: base
              arg: stack
      evaluator:
        type: compare
        operator: '>='
        value: 10
    trueOperator:
      type: consumeStacks
      target: &mark_kongqichuliang_template
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_kongqichuliang
      value: 10
    falseOperator: &reduce_damage_25_percent_operator
      type: addModified
      target: damageContext
      percent: -25
      delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_mark_kongqichuliang_15_if_fail_effect_skill_reduce_damage_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      evaluator:
        type: compare
        operator: '>='
        value: 15
      target: *mark_kongqichuliang_stack_template
    trueOperator:
      type: consumeStacks
      target: *mark_kongqichuliang_template
      value: 15
    falseOperator: *reduce_damage_25_percent_operator
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_mark_kongqichuliang_20_if_fail_effect_skill_reduce_damage_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      evaluator:
        type: compare
        operator: '>='
        value: 20
      target: *mark_kongqichuliang_stack_template
    trueOperator:
      type: consumeStacks
      target: *mark_kongqichuliang_template
      value: 20
    falseOperator: *reduce_damage_25_percent_operator
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_mark_kongqichuliang_25_if_fail_effect_skill_reduce_damage_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target: *mark_kongqichuliang_stack_template
      evaluator:
        type: compare
        operator: '>='
        value: 25
    trueOperator:
      type: consumeStacks
      target: *mark_kongqichuliang_template
      value: 25
    falseOperator: *reduce_damage_25_percent_operator
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_kongqihudun_stack_with_kongqichuliang_stack
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_kongqihudun
    stack:
      type: dynamic
      selector: *mark_kongqichuliang_stack_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_kongqichuliang
        evaluator:
          type: exist
- id: effect_skill_consume_all_kongqichuliang
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_kongqichuliang
    value: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_kongqichuliang
        evaluator:
          type: exist
- id: effect_skill_add_damage_by_kongqichuliang
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector: *mark_kongqichuliang_stack_template
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_opponent_zhixi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_zhixi
  condition:
    type: selfUseSkill
- id: effect_skill_heal_self_eighth
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 8
  condition:
    type: selfUseSkill
- id: effect_skill_heal_self_by_kongqi
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector: *mark_kongqichuliang_stack_template
  condition:
    type: selfUseSkill
- id: effect_skill_reduce_power_on_consecutive_hits_10_max_20
  tags: ['xingzhili']
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 2
          - type: multiply
            arg: -10
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_self_yuansuzhufu_increase_on_consecutive_hits_10_max_20
  tags: ['xingzhili']
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yuansuzhufu
    stack:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 2
          - type: multiply
            arg: 10
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: lastSkillUsedTimes
        evaluator:
          type: compare
          operator: '>'
          value: 1
- id: effect_skill_reduce_multihit_on_consecutive_hits_1_max_2
  tags: ['xingzhili']
  trigger: BeforeMultiHit
  priority: 0
  apply:
    type: addMultihitResult
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 2
          - type: multiply
            arg: -1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: lastSkillUsedTimes
        evaluator:
          type: compare
          operator: '>'
          value: 1
- id: effect_skill_reduce_damage_on_consecutive_hits_10_percent_max_2
  tags: ['xingzhili']
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 2
          - type: multiply
            arg: -10
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: lastSkillUsedTimes
        evaluator:
          type: compare
          operator: '>'
          value: 1
- id: effect_skill_add_mark_xingzhili
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xingzhili
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_shuiwenzhenji
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shuiwenzhenji
  condition:
    type: selfUseSkill
- id: effect_skill_consume_shuiwenzhenji
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_shuiwenzhenji
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shuiwenzhenji
- id: effect_skill_add_crit_rate_50_shuiwenzhenji
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target:
      base: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shuiwenzhenji
- id: effect_skill_add_crit_rate_70_shuiwenzhenji
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target:
      base: usingSkillContext
    value: 70
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shuiwenzhenji
- id: effect_skill_sure_crit_shuiwenzhenji
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shuiwenzhenji
- id: effect_skill_reduce_opponent_atk_1_stage_30_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: atk
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_30_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 30
            tags: ['skill_effect_probability']
- id: effect_skill_add_mark_shuiwenpingzhang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shuiwenpingzhang
    stack:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 4
          - type: multiply
            arg:
              type: raw:number
              value: 1
              configId: multiply_value
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_opponent_nishui_30_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_nishui
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_30_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 30
            tags: ['skill_effect_probability']
      - *condition_opponent_not_water_element
- id: effect_skill_set_field_yutian
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: battle
    mark:
      type: entity:baseMark
      value: mark_global_yutian
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_fantan
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_fantan
  condition:
    type: selfUseSkill
- id: effect_skill_power_2x_opponent_shaoshang
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_opponent_shaoshang_exist
        type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_shaoshang
        evaluator:
          type: exist
- id: effect_skill_add_mark_mianyibuliang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mianyibuliang
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_sure_hit_opponent_shaoshang
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_opponent_shaoshang_exist
- id: effect_skill_sure_hit_opponent_below_quarter_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_opponent_below_quarter_hp
- id: effect_skill_add_mark_opponent_xuanyun
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_xuanyun
  condition:
    type: selfUseSkill
- id: effect_skill_sure_hit_opponent_xuanyun
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_xuanyun
        evaluator:
          type: exist
- id: effect_skill_add_mark_shoudaoshanghaijianshao_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shoudaoshanghaijianshao
    stack: 50
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_shanghaizengjia_75
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanghaizengjia
    stack: 75
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_teshushanghaizengjia_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_teshushanghaizengjia
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_wulishanghaizengjia_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_wulishanghaizengjia
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_teshushanghaizengjia_35
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_teshushanghaizengjia
    stack: 35
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_wulishanghaizengjia_35
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_wulishanghaizengjia
    stack: 35
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_teshushanghaizengjia_100
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_teshushanghaizengjia
    stack: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_wulishanghaizengjia_100
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_wulishanghaizengjia
    stack: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_raise_spa_1_stage_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
# 将当前的天气设为“炎热”
- id: effect_skill_set_field_yanre
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: battle
    mark:
      type: entity:baseMark
      value: mark_global_yanre
  condition:
    type: selfUseSkill
# 技能命中时，给自己添加一个名为“焰火”的标记。
- id: effect_skill_add_mark_yanhuo
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yanhuo
  condition:
    type: selfUseSkill
# 如果该效果的技能是本回合使用的第一个技能，则威力变为2倍。
- id: effect_skill_power_2x_if_first
  trigger: AfterUseSkillCheck
  priority: 1
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
  # 如果该效果的技能是第一回合使用的技能，则威力变为2倍。
- id: effect_skill_power_2x_if_first_round
  trigger: AfterUseSkillCheck
  priority: 1
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        evaluator:
          type: compare
          operator: '=='
          value: 1
        target:
          base: battle
          chain:
            - type: select
              arg:
                type: dynamic
                arg: currentTurn
# 技能命中时，给自己添加一个名为“火星”的标记。
- id: effect_skill_add_mark_huoxing
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_huoxing
  condition:
    type: selfUseSkill
# 清除对手攻击和特攻的正面能力等级变化
- id: effect_skill_clear_opponent_atk_spa_stage
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: opponent
    statType:
      - atk
      - spa
    cleanStageStrategy: positive
  condition:
    type: selfUseSkill
# 清除对手速度的正面能力等级变化
- id: effect_skill_clear_opponent_spe_stage
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: opponent
    statType:
      - spe
    cleanStageStrategy: positive
  condition:
    type: selfUseSkill
# 清除对手防御和特防的正面能力等级变化
- id: effect_skill_clear_opponent_def_spd_stage
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: opponent
    statType:
      - def
      - spd
    cleanStageStrategy: positive
  condition:
    type: selfUseSkill
# 给自己添加爱的名义标记
- id: effect_skill_add_mark_aideminyi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_aideminyi
  condition:
    type: selfUseSkill
# 如果有爱的名义标记，防御提升1级
- id: effect_skill_raise_def_1_stage_if_aideminyi
  trigger: BeforeHit
  priority: 0
  apply:
    type: statStageBuff
    target: self
    statType: def
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_aideminyi
# 如果有爱的名义标记，技能威力增加50
- id: effect_skill_add_power_50_if_aideminyi
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_aideminyi
# 给自己添加誓言之约标记
- id: effect_skill_add_mark_shiyanzhiyue
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shiyanzhiyue
  condition:
    type: selfUseSkill
# 如果有爱的名义标记，恢复125点体力
- id: effect_skill_heal_125_if_aideminyi
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value: 125
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_aideminyi
# 如果有爱的名义标记，最小伤害100
- id: effect_skill_minimum_damage_100_if_aideminyi
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addThreshold
    target: damageContext
    min: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_aideminyi
# 如果有爱的名义标记，先制+1
- id: effect_skill_priority_plus_1_if_aideminyi
  trigger: BeforeSort
  priority: 0
  apply:
    type: addValue
    target:
      base: usingSkillContext
      chain:
        - type: selectProp
          arg: priority
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_aideminyi
# 如果有爱的名义标记，恢复自身最大体力的1/16
- id: effect_skill_heal_self_1_16_if_aideminyi
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 16
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_aideminyi
# 如果是本回合第一个技能，给自己添加闪避标记
- id: effect_skill_add_mark_shanbi_if_first
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanbi
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
# 给对手添加心灵制约标记
- id: effect_skill_add_mark_opponent_xinlingzhiyue
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_xinlingzhiyue
  condition:
    type: selfUseSkill
# 转移自身负面能力等级变化给对手
- id: effect_skill_transfer_debuff_stage_to_opponent
  trigger: OnHit
  priority: 0
  apply:
    type: transferStatStage
    source: self
    target: opponent
    cleanStageStrategy: negative
  condition:
    type: selfUseSkill
# 给自己添加静养生息标记
- id: effect_skill_add_mark_jingyangshengxi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_jingyangshengxi
  condition:
    type: selfUseSkill
# 给自己添加1/16恢复标记
- id: effect_skill_add_mark_huifu_1_16
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_huifu_1_16
  condition:
    type: selfUseSkill
# 如果有爱的名义标记，给自己添加1/16恢复标记
- id: effect_skill_add_mark_huifu_1_16_if_aideminyi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_huifu_1_16
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_aideminyi
# 如果目标身上有“烧伤”标记，则移除该标记，并对目标造成150点伤害。
- id: effect_skill_ignite_opponent_mark_shaoshang
  trigger: OnHit
  priority: 0
  apply:
    - type: destroyMark
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor: baseId
            evaluator:
              type: same
              value: mark_shaoshang
    - type: dealDamage
      target: opponent
      value: 150
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_shaoshang
        evaluator:
          type: exist
# 给目标添加一层“削弱水泡”
- id: effect_skill_add_mark_opponent_xueruoshuipao
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_xueruoshuipao
    stack: 1
  condition:
    type: selfUseSkill
# 给目标添加一层“虚弱水泡”
- id: effect_skill_add_mark_opponent_xuruoshuipao
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_xuruoshuipao
    stack: 1
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_guanghua
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_guanghua
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_suijixianzhi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_suijixianzhi
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_opponent_xinzhiyinji
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_xinzhiyinji
  condition:
    type: selfUseSkill
- id: effect_skill_consume_xinzhiyinji_sure_hit
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: tags
              evaluator:
                type: contain
                tag: xinzhiyinji_tag
        evaluator:
          type: exist
- id: effect_skill_consume_xinzhiyinji_multihit
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: tags
            evaluator:
              type: contain
              tag: xinzhiyinji_tag
      evaluator:
        type: exist
    trueOperator:
      type: setMultihit
      target:
        base: usingSkillContext
      value: [5, 8]
    falseOperator:
      type: setMultihit
      target:
        base: usingSkillContext
      value: 1
  condition:
    type: selfUseSkill
- id: effect_skill_consume_xinzhiyinji_multihit_consume
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: opponentMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_xinzhiyinji
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_xinzhiyinji
- id: effect_skill_consume_xinzhiyinji_power_2x
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: usingSkillContext
        chain:
          - type: selectPath
            arg: power
          - type: multiply
            arg: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: tags
              evaluator:
                type: contain
                tag: xinzhiyinji_tag
        evaluator:
          type: exist
- id: effect_skill_add_mark_opponent_mingzhongxiajiang_5
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_mingzhongxiajiang
    stack:
      type: raw:number
      value: 5
      tags: ['skill_effect_stack', 'skill_effect_mingzhongxiajiang_stack']
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_opponent_xuehongyinji
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_xuehongyinji
  condition:
    type: selfUseSkill
- id: effect_skill_heal_self_quarter_diminishing
  trigger: OnHit
  priority: 0
  apply:
    - type: heal
      target:
        base: self
      value:
        type: dynamic
        selector:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: maxHp
            - type: divide
              arg:
                type: conditional
                trueValue: 8
                falseValue: 4
                condition:
                  type: evaluate
                  target:
                    base: selfMarks
                    chain:
                      - type: whereAttr
                        extractor: baseId
                        evaluator:
                          type: same
                          value: mark_xinyuan_used
                  evaluator:
                    type: exist
    - type: addMark
      target: self
      mark:
        type: entity:baseMark
        value: mark_xinyuan_used
  condition:
    type: selfUseSkill
# 添加准备动作状态
- id: effect_skill_add_mark_zhunbeidongzuo
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zhunbeidongzuo
  condition:
    type: selfUseSkill
# 自身身高＞对手时威力2倍
- id: effect_skill_power_2x_if_height_greater_than_opponent
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: stat
            - type: select
              arg:
                type: dynamic
                arg: height
        evaluator:
          type: compare
          operator: '>'
          value:
            type: dynamic
            selector:
              base: opponent
              chain:
                - type: select
                  arg:
                    type: dynamic
                    arg: stat
                - type: select
                  arg:
                    type: dynamic
                    arg: height
# 自身身高＞100时威力2倍
- id: effect_skill_power_2x_if_height_above_100
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: stat
            - type: select
              arg:
                type: dynamic
                arg: height
        evaluator:
          type: compare
          operator: '>'
          value: 100
# 添加灵巧状态
- id: effect_skill_add_mark_lingqiao
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_lingqiao
  condition:
    type: selfUseSkill
# 自身身高＜对手时威力2倍
- id: effect_skill_power_2x_if_height_less_than_opponent
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: stat
            - type: select
              arg:
                type: dynamic
                arg: height
        evaluator:
          type: compare
          operator: '<'
          value:
            type: dynamic
            selector:
              base: opponent
              chain:
                - type: select
                  arg:
                    type: dynamic
                    arg: stat
                - type: select
                  arg:
                    type: dynamic
                    arg: height
# 自身身高＞100时必中
- id: effect_skill_sure_hit_if_height_above_100
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: stat
            - type: select
              arg:
                type: dynamic
                arg: height
        evaluator:
          type: compare
          operator: '>'
          value: 100
# 自身身高＞对手时连击3次
- id: effect_skill_multihit_if_height_greater_than_opponent
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat
          - type: select
            arg:
              type: dynamic
              arg: height
      evaluator:
        type: compare
        operator: '>'
        value:
          type: dynamic
          selector:
            base: opponent
            chain:
              - type: select
                arg:
                  type: dynamic
                  arg: stat
              - type: select
                arg:
                  type: dynamic
                  arg: height
    trueOperator:
      type: setMultihit
      target:
        base: usingSkillContext
      value: 3
    falseOperator:
      type: setMultihit
      target:
        base: usingSkillContext
      value: 1
  condition:
    type: selfUseSkill
# 自身身高＞100时连击3次
- id: effect_skill_multihit_if_height_above_100
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat
          - type: select
            arg:
              type: dynamic
              arg: height
      evaluator:
        type: compare
        operator: '>'
        value: 100
    trueOperator:
      type: setMultihit
      target:
        base: usingSkillContext
      value: 3
    falseOperator:
      type: setMultihit
      target:
        base: usingSkillContext
      value: 1
  condition:
    type: selfUseSkill
# 自身身高＜对手时连击3次
- id: effect_skill_multihit_if_height_less_than_opponent
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat
          - type: select
            arg:
              type: dynamic
              arg: height
      evaluator:
        type: compare
        operator: '<'
        value:
          type: dynamic
          selector:
            base: opponent
            chain:
              - type: select
                arg:
                  type: dynamic
                  arg: stat
              - type: select
                arg:
                  type: dynamic
                  arg: height
    trueOperator:
      type: setMultihit
      target:
        base: usingSkillContext
      value: 3
    falseOperator:
      type: setMultihit
      target:
        base: usingSkillContext
      value: 1
  condition:
    type: selfUseSkill

# 添加麦麦金针状态
- id: effect_skill_add_mark_opponent_maimaijinzhen
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_maimaijinzhen
  condition:
    type: selfUseSkill
# 消耗麦麦金针并添加50点流血
- id: effect_skill_consume_maimaijinzhen_add_liuxie_50
  trigger: OnHit
  priority: 0
  apply:
    - type: consumeStacks
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_maimaijinzhen
      value: 1
    - type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_liuxie
      stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_maimaijinzhen
# 对手有麦麦金针时必中
- id: effect_skill_sure_hit_if_opponent_has_maimaijinzhen
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_maimaijinzhen
# 添加金针外衣状态
- id: effect_skill_add_mark_jinzhenwayi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_jinzhenwayi
  condition:
    type: selfUseSkill
# 添加冲撞刺针状态
- id: effect_skill_add_mark_opponent_chongzhuangzhenci
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_chongzhuangzhenci
  condition:
    type: selfUseSkill
# 添加50点流血给对手
- id: effect_skill_add_liuxie_50_opponent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack: 50
  condition:
    type: selfUseSkill

# 消耗麦麦金针并在5回合内每回合恢复50点体力
- id: effect_skill_consume_maimaijinzhen_heal_self_50
  trigger: OnHit
  priority: 0
  apply:
    - type: consumeStacks
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_maimaijinzhen
      value: 1
    - type: addMark
      target: self
      mark:
        type: entity:baseMark
        value: mark_huifu_50_per_turn
      duration: 5
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_maimaijinzhen
# 消耗麦麦金针并添加麦迪金针
- id: effect_skill_consume_maimaijinzhen_add_maidijinzhen
  trigger: OnHit
  priority: 0
  apply:
    - type: consumeStacks
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_maimaijinzhen
      value: 1
    - type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_maidijinzhen
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_maimaijinzhen
# 消耗麦迪金针并添加金针粉末
- id: effect_skill_consume_maidijinzhen_add_jinzhenfenmo
  trigger: OnHit
  priority: 0
  apply:
    - type: consumeStacks
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_maidijinzhen
      value: 1
    - type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_jinzhenfenmo
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_maidijinzhen
# 最佳助攻被动效果：替换上场时添加临时标记
- id: effect_skill_add_first_turn_mark_on_switch_in
  trigger: OnSwitchIn
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_first_turn_after_switch
  condition:
    type: selfSwitchIn
# 最佳助攻主动效果：有临时标记时威力2倍
- id: effect_skill_power_2x_if_first_switch_in_zuijiazhuogong
  trigger: AfterUseSkillCheck
  priority: 1
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_first_turn_after_switch
# 具有虚空感应时威力2倍
- id: effect_skill_power_2x_if_has_xukongganying
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_xukongganying
# 解除自身弱化
- id: effect_skill_clear_self_negative_stage
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: self
    cleanStageStrategy: negative
  condition:
    type: selfUseSkill
# 10%使对手窒息，具有虚空感应时40%使对手窒息
- id: effect_skill_add_mark_opponent_zhixi_10_or_40_percent_if_has_xukongganying
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_zhixi
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: some
        conditions:
          - type: every
            conditions:
              - type: not
                condition:
                  type: evaluate
                  target:
                    base: selfMarks
                    chain:
                      - type: whereAttr
                        extractor:
                          type: base
                          arg: baseId
                        evaluator:
                          type: same
                          value: mark_xukongganying
                  evaluator:
                    type: exist
              - type: evaluate
                target: self
                evaluator:
                  type: probability
                  percent:
                    type: 'raw:number'
                    value: 10
                    tags: ['skill_effect_probability']
          - type: every
            conditions:
              - type: selfHasMark
                baseId: mark_xukongganying
              - type: evaluate
                target: self
                evaluator:
                  type: probability
                  percent:
                    type: 'raw:number'
                    value: 40
                    tags: ['skill_effect_probability']
# 附加40点固伤，具有虚空感应时附加80点固伤
- id: effect_skill_add_damage_40_or_80_if_has_xukongganying
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: conditional
      trueValue: 80
      falseValue: 40
      condition:
        type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_xukongganying
        evaluator:
          type: exist
  condition:
    type: selfUseSkill
# 具有虚空感应时必中
- id: effect_skill_sure_hit_if_has_xukongganying
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_xukongganying
# 15%弱化对手特防1级
- id: effect_skill_reduce_opponent_spd_1_stage_15_percent
  trigger: BeforeHit
  priority: 0
  apply:
    type: statStageBuff
    target: opponent
    statType: spd
    value: -1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 15
            tags: ['skill_effect_probability']
# 具有虚空感应时增加50点威力
- id: effect_skill_add_power_50_if_has_xukongganying
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_xukongganying
# 附加50点固伤，具有虚空感应时附加100点固伤
- id: effect_skill_add_damage_50_or_100_if_has_xukongganying
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: conditional
      trueValue: 100
      falseValue: 50
      condition:
        type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_xukongganying
        evaluator:
          type: exist
  condition:
    type: selfUseSkill
# 使自身获得75点受伤减少
- id: effect_skill_add_mark_shoudaoshanghaijianshao_75
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shoudaoshanghaijianshao
    stack: 75
  condition:
    type: selfUseSkill

# 添加伊特领域标记
- id: effect_skill_add_mark_yitelingyu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yitelingyu
  condition:
    type: selfUseSkill

# 有伊特领域时必定暴击
- id: effect_skill_sure_crit_if_has_yitelingyu
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target: usingSkillContext
    priority: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_yitelingyu

# 添加气流涌动标记 (2层)
- id: effect_skill_add_mark_qiliuyongdong
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_qiliuyongdong
    stack: 2
  condition:
    type: selfUseSkill

# 恢复怒气15点
- id: effect_skill_add_rage_15
  trigger: OnHit
  priority: 0
  apply:
    type: addRage
    target: self
    value: 15
  condition:
    type: selfUseSkill

# 暴击时强化自身物攻1级
- id: effect_skill_raise_atk_1_stage_on_crit
  trigger: OnCritPreDamage
  priority: 0
  apply:
    type: statStageBuff
    target: self
    statType: atk
    value: 1
  condition:
    type: selfUseSkill

# 添加闪电外衣标记
- id: effect_skill_add_mark_shandianwaiyi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shandianwaiyi
  condition:
    type: selfUseSkill
# 20%强化自身物攻1级
- id: effect_skill_raise_atk_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    type: statStageBuff
    target: self
    statType: atk
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 20
            tags: ['skill_effect_probability']

# 添加电之领域或电磁领域
- id: effect_skill_add_mark_dianzhilingyu_or_diancilingyu
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: self
      mark:
        type: conditional
        trueValue:
          type: entity:baseMark
          value: mark_diancilingyu
        falseValue:
          type: entity:baseMark
          value: mark_dianzhilingyu
        condition:
          type: selfHasMark
          baseId: mark_yitelingyu
  condition:
    type: selfUseSkill

# 根据电之领域威力变化
- id: effect_skill_power_100_if_dianzhilingyu_200_if_diancilingyu
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value:
      type: conditional
      trueValue: 150
      falseValue:
        type: conditional
        trueValue: 50
        falseValue: 0
        condition:
          type: evaluate
          target:
            base: selfMarks
            chain:
              - type: whereAttr
                extractor:
                  type: base
                  arg: baseId
                evaluator:
                  type: same
                  value: mark_dianzhilingyu
          evaluator:
            type: exist
      condition:
        type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_diancilingyu
        evaluator:
          type: exist
  condition:
    type: selfUseSkill

# 40%使对手冰冻
- id: effect_skill_add_mark_opponent_bingdong_40_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_bingdong
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            configId: bingdong_probability
            value: 40
            tags: ['skill_effect_probability']

# 对手冰冻时必定暴击
- id: effect_skill_sure_crit_if_opponent_bingdong
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target: usingSkillContext
    priority: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_bingdong

# 对手冰冻时额外弱化特攻1级
- id: effect_skill_reduce_opponent_spa_1_stage_if_bingdong
  trigger: OnHit
  priority: 0
  apply:
    type: statStageBuff
    target: opponent
    statType: spa
    value: -1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_bingdong

# 使对手获得冰凝之气
- id: effect_skill_add_mark_opponent_bingningzhiqi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_bingningzhiqi
    stack: 1
  condition:
    type: selfUseSkill

# 使对手获得冰霜之星
- id: effect_skill_add_mark_opponent_bingshuangzhixing
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_bingshuangzhixing
    stack: 60
  condition:
    type: selfUseSkill

# 使自身获得免疫异常
- id: effect_skill_add_mark_mianyiyichang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mianyiyichang
  condition:
    type: selfUseSkill

# 添加冰之领域或冰霜领域
- id: effect_skill_add_mark_bingzhilingyu_or_bingshuanglingyu
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: self
      mark:
        type: conditional
        trueValue:
          type: entity:baseMark
          value: mark_bingshuanglingyu
        falseValue:
          type: entity:baseMark
          value: mark_bingzhilingyu
        condition:
          type: selfHasMark
          baseId: mark_yitelingyu
  condition:
    type: selfUseSkill

# 根据冰之领域威力变化
- id: effect_skill_power_100_if_bingzhilingyu_200_if_bingshuanglingyu
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value:
      type: conditional
      trueValue: 150
      falseValue:
        type: conditional
        trueValue: 50
        falseValue: 0
        condition:
          type: evaluate
          target:
            base: selfMarks
            chain:
              - type: whereAttr
                extractor:
                  type: base
                  arg: baseId
                evaluator:
                  type: same
                  value: mark_bingzhilingyu
          evaluator:
            type: exist
      condition:
        type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_bingshuanglingyu
        evaluator:
          type: exist
  condition:
    type: selfUseSkill

# 添加寒冰甲标记
- id: effect_skill_add_mark_hanbingjia
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_hanbingjia
  condition:
    type: selfUseSkill

# 当怒气低于40时，立即获得20点怒气
- id: effect_skill_add_rage_20_if_rage_below_40
  trigger: OnHit
  priority: 0
  apply:
    type: addRage
    target: self
    value:
      type: 'raw:number'
      value: 20
      configId: add_rage_value
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: rage
        evaluator:
          type: compare
          operator: '<'
          value: 40

# 添加风之领域或风暴领域
- id: effect_skill_add_mark_fengzhilingyu_or_fengbaolingyu
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: self
      mark:
        type: conditional
        trueValue:
          type: entity:baseMark
          value: mark_fengbaolingyu
        falseValue:
          type: entity:baseMark
          value: mark_fengzhilingyu
        condition:
          type: selfHasMark
          baseId: mark_yitelingyu
  condition:
    type: selfUseSkill

- id: effect_skill_power_100_if_fengzhilingyu_200_if_fengbaolingyu
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value:
      type: conditional
      trueValue: 150
      falseValue:
        type: conditional
        trueValue: 50
        falseValue: 0
        condition:
          type: evaluate
          target:
            base: selfMarks
            chain:
              - type: whereAttr
                extractor:
                  type: base
                  arg: baseId
                evaluator:
                  type: same
                  value: mark_fengzhilingyu
          evaluator:
            type: exist
      condition:
        type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_fengbaolingyu
        evaluator:
          type: exist
  condition:
    type: selfUseSkill

# 添加25点怒气
- id: effect_skill_add_rage_25
  trigger: OnHit
  priority: 0
  apply:
    type: addRage
    target: self
    value: 25
  condition:
    type: selfUseSkill

# 70%麻痹对手
- id: effect_skill_add_mark_opponent_mabi_70_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_mabi
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 70
            tags: ['skill_effect_probability', 'mark_mabi_chance']

# 如果对方麻痹，威力翻倍
- id: effect_skill_power_2x_if_opponent_mabi
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_mabi

# 增加一层电荷
- id: effect_skill_add_mark_dianhe_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_dianhe
    stack: 1
  condition:
    type: selfUseSkill

# 如果后手，威力翻倍
- id: effect_skill_power_2x_if_last
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isLastSkillUsedThisTurn

# 技能本身获得15%的额外暴击率
- id: effect_skill_add_crit_rate_15_percent
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target: usingSkillContext
    value: 15
  condition:
    type: selfUseSkill

# 给对手添加恐惧之念
- id: effect_skill_add_mark_opponent_kongjuzhinian
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_kongjuzhinian
    stack: 1
  condition:
    type: selfUseSkill

# 如果对手有恐惧之念，威力增加50点
- id: effect_skill_power_plus_50_if_opponent_has_kongjuzhinian
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_kongjuzhinian

# 使自己获得暗影之光
- id: effect_skill_add_mark_anyingzhiguang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_anyingzhiguang
  condition:
    type: selfUseSkill

# 对手具有2层恐惧之念时必定暴击
- id: effect_skill_sure_crit_if_opponent_has_2_kongjuzhinian
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target: usingSkillContext
    priority: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_ruodianjihao
            - type: select
              arg:
                type: base
                arg: stack
        evaluator:
          type: compare
          operator: '>='
          value: 2

# 附加对手最大体力6%的固伤
- id: effect_skill_add_fixed_damage_6_percent_max_hp
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector:
        base: opponent
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: multiply
            arg:
              type: raw:number
              value: 0.06
              configId: fixed_damage_percent
  condition:
    type: selfUseSkill

# 具有暗之领域或暗影领域时威力2倍
- id: effect_skill_power_2x_if_anzhilingyu_or_anyinglingyu
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: some
        conditions:
          - type: selfHasMark
            baseId: mark_anzhilingyu
          - type: selfHasMark
            baseId: mark_anyinglingyu

# 具有暗影领域时，该技能命中后获得一级攻击强化
- id: effect_skill_raise_atk_1_stage_if_anyinglingyu
  trigger: BeforeHit
  priority: 0
  apply:
    type: statStageBuff
    target: self
    statType: atk
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_anyinglingyu

# 为自己添加暗之领域或暗影领域
- id: effect_skill_add_mark_anzhilingyu_or_anyinglingyu
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: self
      mark:
        type: conditional
        trueValue:
          type: entity:baseMark
          value: mark_anyinglingyu
        falseValue:
          type: entity:baseMark
          value: mark_anzhilingyu
        condition:
          type: selfHasMark
          baseId: mark_yitelingyu
  condition:
    type: selfUseSkill

# 如果先手，使对方获得失明
- id: effect_skill_add_mark_opponent_shiming_if_first
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_shiming
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn

# 使对手获得光辉之影
- id: effect_skill_add_mark_opponent_guanghuizhiying
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_guanghuizhiying
  condition:
    type: selfUseSkill

# 恢复自身最大体力的1/6
- id: effect_skill_heal_self_1_6_max_hp
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg:
              type: raw:number
              value: 6
  condition:
    type: selfUseSkill

# 为自己添加光之领域或光辉领域
- id: effect_skill_add_mark_guangzhilingyu_or_guanghuilingyu
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: self
      mark:
        type: conditional
        trueValue:
          type: entity:baseMark
          value: mark_guanghuilingyu
        falseValue:
          type: entity:baseMark
          value: mark_guangzhilingyu
        condition:
          type: selfHasMark
          baseId: mark_yitelingyu
  condition:
    type: selfUseSkill

# 当有光之领域或光辉领域时，威力翻倍
- id: effect_skill_power_2x_if_guangzhilingyu_or_guanghuilingyu
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: some
        conditions:
          - type: selfHasMark
            baseId: mark_guangzhilingyu
          - type: selfHasMark
            baseId: mark_guanghuilingyu

# 当有光辉领域时，恢复自身最大体力的1/4
- id: effect_skill_heal_quarter_if_guanghuilingyu
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg:
              type: raw:number
              value: 4
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_guanghuilingyu

# 先出手时必定暴击
- id: effect_skill_crit_if_first
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target: usingSkillContext
    priority: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn

# 使环境随机变为晴天或夜幕
- id: effect_skill_set_field_qingtian_or_yemu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: battle
    mark:
      type: selector
      value:
        - type: entity:baseMark
          value: mark_global_qingtian
        - type: entity:baseMark
          value: mark_global_yemu
      chain:
        - type: randomPick
          arg: 1
  condition:
    type: selfUseSkill
- id: effect_skill_multihit_50_percent_2_times
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setMultihit
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 50
            tags: ['skill_effect_probability']
- id: effect_skill_damage_by_opponent_weight
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector:
        base: opponent
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.weight
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_houkongfan
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_houkongfan
  condition:
    type: selfUseSkill
- id: effect_skill_multihit_40_percent_3_times
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setMultihit
    target: usingSkillContext
    value: 3
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 40
            tags: ['skill_effect_probability']
- id: effect_skill_add_mark_opponent_haipa_5_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_haipa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 5
            tags: ['skill_effect_probability']
- id: effect_skill_add_mark_opponent_haipa_10_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_haipa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 10
            tags: ['skill_effect_probability']
- id: effect_skill_multihit_35_percent_4_times
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setMultihit
    target: usingSkillContext
    value: 4
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 35
            tags: ['skill_effect_probability']
- id: effect_skill_add_mark_xingzhihui_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xingzhihui
    stack: 50
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_opponent_haipa_15_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_haipa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 15
            tags: ['skill_effect_probability']
- id: effect_skill_multihit_30_percent_4_times
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setMultihit
    target: usingSkillContext
    value: 4
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 30
            tags: ['skill_effect_probability']
- id: effect_skill_add_mark_xingzhihui_20
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xingzhihui
    stack: 20
  condition:
    type: selfUseSkill
# 对方添加45层音波标记
- id: effect_skill_add_mark_opponent_yinbo_45
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_yinbo
    stack:
      type: 'raw:number'
      value: 45
      tags: ['skill_effect_stack', 'skill_effect_yinbo_stack']
  condition:
    type: selfUseSkill
# 对方添加40层音波标记
- id: effect_skill_add_mark_opponent_yinbo_40
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_yinbo
    stack:
      type: 'raw:number'
      value: 40
      tags: ['skill_effect_stack', 'skill_effect_yinbo_stack']
  condition:
    type: selfUseSkill
# 对方添加35层音波标记
- id: effect_skill_add_mark_opponent_yinbo_35
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_yinbo
    stack:
      type: 'raw:number'
      value: 35
      tags: ['skill_effect_stack', 'skill_effect_yinbo_stack']
  condition:
    type: selfUseSkill
# 对方添加30层音波标记
- id: effect_skill_add_mark_opponent_yinbo_30
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_yinbo
    stack:
      type: 'raw:number'
      value: 30
      tags: ['skill_effect_stack', 'skill_effect_yinbo_stack']
  condition:
    type: selfUseSkill
# 对方添加10层音波标记
- id: effect_skill_add_mark_opponent_yinbo_10
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_yinbo
    stack:
      type: 'raw:number'
      value: 10
      tags: ['skill_effect_stack', 'skill_effect_yinbo_stack']
  condition:
    type: selfUseSkill
# 30%给对方添加30层流血
- id: effect_skill_add_mark_opponent_liuxie_30_30_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack: 30
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 30
            tags: ['skill_effect_probability']
# 消耗对方的音波标记，恢复自身音波印记x2的HP
- id: effect_skill_consume_opponent_yinbo_heal_self_2x
  trigger: OnHit
  priority: 0
  apply:
    - type: heal
      target: self
      value:
        type: dynamic
        selector:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_yinbo
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg:
                type: raw:number
                value: 2
    - type: destroyMark
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_yinbo
  condition:
    type: selfUseSkill
# 消耗对方的音波标记，为对方添加等同于音波标记层数的噪音
- id: effect_skill_consume_opponent_yinbo_add_zaoyin
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_zaoyin
      stack:
        type: dynamic
        selector:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_yinbo
            - type: select
              arg:
                type: base
                arg: stack
    - type: destroyMark
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_yinbo
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_yinbo
# 消耗对方的音波标记，为己方添加等同于音波标记层数的音波屏障
- id: effect_skill_consume_opponent_yinbo_add_yinbopingzhang
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: self
      mark:
        type: entity:baseMark
        value: mark_yinbopingzhang
      stack:
        type: dynamic
        selector:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_yinbo
            - type: select
              arg:
                type: base
                arg: stack
    - type: destroyMark
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_yinbo
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_yinbo
# 消耗对方的音波标记，给对方造成音波标记层数*2的伤害
- id: effect_skill_consume_opponent_yinbo_damage_2x
  trigger: OnHit
  priority: 0
  apply:
    - type: dealDamage
      target: opponent
      value:
        type: dynamic
        selector:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_yinbo
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg:
                type: raw:number
                value: 2
    - type: destroyMark
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_yinbo
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_yinbo
# 给对方添加音之网
- id: effect_skill_add_mark_opponent_yinzhiwang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_yinzhiwang
  condition:
    type: selfUseSkill
# 使对方获得50点破防
- id: effect_skill_add_mark_opponent_pofang_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_pofang
    stack: 50
  condition:
    type: selfUseSkill
# 附加对手破防剩余回合数20倍的威力
- id: effect_skill_add_power_20_per_pofang_turn
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_pofang
          - type: select
            arg:
              type: dynamic
              arg: duration
          - type: multiply
            arg:
              type: raw:number
              value: 20
  condition:
    type: selfUseSkill
# 如果对手有破防标记，附加40点流血
- id: effect_skill_add_mark_opponent_liuxie_40_if_pofang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack: 40
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_pofang
# 使对手获得蓝宝石
- id: effect_skill_add_mark_opponent_lanbaoshi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_lanbaoshi
  condition:
    type: selfUseSkill
# 使对手获得红宝石
- id: effect_skill_add_mark_opponent_hongbaoshi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_hongbaoshi
  condition:
    type: selfUseSkill
# 使自身获得流星盾
- id: effect_skill_add_mark_liuxingdun
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_liuxingdun
  condition:
    type: selfUseSkill
# 使自身获得沙鹤之力
- id: effect_skill_add_mark_shahezhili
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shahezhili
  condition:
    type: selfUseSkill
# 设置连击数为沙鹤之力的剩余回合数
- id: effect_skill_multihit_by_shahezhili_turns
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setMultihit
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_shahezhili
          - type: select
            arg:
              type: dynamic
              arg: duration
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shahezhili
# 20%强化自身速度1级
- id: effect_skill_raise_spe_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
# 使自身获得50点硬化
- id: effect_skill_add_mark_yinghua_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yinghua
    stack: 50
  condition:
    type: selfUseSkill
# 沙鹤之力每剩余1回合增加25%暴击率
- id: effect_skill_add_crit_rate_25_per_shahezhili_turn
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_shahezhili
          - type: select
            arg:
              type: dynamic
              arg: duration
          - type: multiply
            arg:
              type: raw:number
              value: 25
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shahezhili
# 使自身获得沙之网
- id: effect_skill_add_mark_shazhiwang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shazhiwang
    stack: 30
  condition:
    type: selfUseSkill
# 使对手获得25层命中下降
- id: effect_skill_add_mark_opponent_mingzhongxiajiang_25
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_mingzhongxiajiang
    stack:
      type: raw:number
      value: 25
      tags: ['skill_effect_stack', 'skill_effect_mingzhongxiajiang_stack']
  condition:
    type: selfUseSkill
#  沙鹤之力每剩余1回合增加25%命中率
- id: effect_skill_add_accuracy_25_per_shahezhili_turn
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addAccuracy
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_shahezhili
          - type: select
            arg:
              type: dynamic
              arg: duration
          - type: multiply
            arg:
              type: raw:number
              value: 25
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shahezhili
# 给自己添加一层蓄力
- id: effect_skill_add_mark_xuli_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xuli
    stack: 1
  condition:
    type: selfUseSkill
# 给自己添加五层蓄力
- id: effect_skill_add_mark_xuli_5
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xuli
    stack: 5
  condition:
    type: selfUseSkill
# 给自己添加沙之蛋壳
- id: effect_skill_add_mark_shazhidanke
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shazhidanke
  condition:
    type: selfUseSkill
# 消耗一层沙之蛋壳使连击数+1
- id: effect_skill_add_multihit_1_consume_shazhidanke
  trigger: BeforeMultiHit
  priority: 0
  apply:
    - type: addMultihitResult
      target: usingSkillContext
      value: 1
    - type: consumeStacks
      target:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_shazhidanke
      value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shazhidanke
# 消耗一层沙之蛋壳使威力+10
- id: effect_skill_add_power_10_consume_shazhidanke
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    - type: addPower
      target: usingSkillContext
      value: 10
    - type: consumeStacks
      target:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_shazhidanke
      value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shazhidanke
# 消耗一层沙之蛋壳使技能必中
- id: effect_skill_sure_hit_consume_shazhidanke
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    - type: setSureHit
      target: usingSkillContext
      priority: 2
    - type: consumeStacks
      target:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_shazhidanke
      value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shazhidanke
# 恢复120体力，连续使用则减半
- id: effect_skill_heal_self_120_hp_if_consecutive_half
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: conditional
      trueValue:
        type: raw:number
        value: 120
      falseValue:
        type: raw:number
        value: 60
      condition:
        type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: lastSkillUsedTimes
        evaluator:
          type: compare
          operator: '>'
          value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
# 消耗一层沙之蛋壳使优先级+1
- id: effect_skill_add_priority_1_consume_shazhidanke
  trigger: BeforeSort
  priority: 0
  apply:
    - type: addValue
      target:
        base: usingSkillContext
        chain:
          - type: selectProp
            arg: priority
      value: 1
    - type: consumeStacks
      target:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_shazhidanke
      value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shazhidanke
# 为敌方添加一层武者之心
- id: effect_skill_add_mark_opponent_wuzhezhixin_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_wuzhezhixin
    stack: 1
  condition:
    type: selfUseSkill
# 如果自身有武者之心，降低对方一级防御
- id: effect_skill_reduce_opponent_def_1_stage_if_wuzhezhixin
  trigger: BeforeHit
  priority: 0
  apply:
    type: statStageBuff
    target: opponent
    statType: def
    value: -1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_wuzhezhixin
# 给对方施加绝影
- id: effect_skill_add_mark_opponent_jueying
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_jueying
  condition:
    type: selfUseSkill
# 如果对方有武者之心，威力增加50
- id: effect_skill_add_power_50_if_opponent_wuzhezhixin
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_wuzhezhixin
# 为对方添加影之斗气
- id: effect_skill_add_mark_opponent_yingzhidouqi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_yingzhidouqi
  condition:
    type: selfUseSkill
# 当伤害低于100时，为对方添加双刃追击
- id: effect_skill_add_mark_opponent_shuangrenzhuiji_if_damage_less_100
  trigger: OnDamage
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_shuangrenzhuiji
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
        evaluator:
          type: compare
          operator: '<'
          value:
            type: raw:number
            value: 100
# 为对方添加等同于本次伤害层数的白牙
- id: effect_skill_add_mark_opponent_baiya_equal_damage_max_800
  trigger: OnDamage
  priority: 0
  apply:
    - type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_baiya
      stack:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
            - type: clampMax
              arg: 800
  condition:
    type: selfUseSkill
# 为自己添加攻守兼备
- id: effect_skill_add_mark_gongshoujianbei
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_gongshoujianbei
  condition:
    type: selfUseSkill
# 使自身获得一层仁者之心
- id: effect_skill_add_mark_renzhezhixin_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_renzhezhixin
    stack: 1
  condition:
    type: selfUseSkill
# 如果对方有仁者之心，降低一级特防
- id: effect_skill_reduce_opponent_spd_1_stage_if_renzhezhixin
  trigger: BeforeHit
  priority: 0
  apply:
    type: statStageBuff
    target: opponent
    statType: spd
    value: -1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_renzhezhixin
# 给对方添加极光
- id: effect_skill_add_mark_opponent_jiguang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_jiguang
  condition:
    type: selfUseSkill
# 如果对方有仁者之心，威力增加50
- id: effect_skill_add_power_50_if_opponent_renzhezhixin
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_renzhezhixin
# 为对方添加闪光搏击
- id: effect_skill_add_mark_opponent_shanguangboji
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_shanguangboji
  condition:
    type: selfUseSkill
# 当伤害低于100时，为对方添加双破追击
- id: effect_skill_add_mark_opponent_shuangpozhuiji_if_damage_less_100
  trigger: OnDamage
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_shuangpozhuiji
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
        evaluator:
          type: compare
          operator: '<'
          value:
            type: raw:number
            value: 100
# 为对方添加等同于本次伤害层数的黑牙
- id: effect_skill_add_mark_opponent_heiya_equal_damage_max_800
  trigger: OnDamage
  priority: 0
  apply:
    - type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_heiya
      stack:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
            - type: clampMax
              arg: 800
  condition:
    type: selfUseSkill
# 为自己添加蓄力冲击
- id: effect_skill_add_mark_xulichongji
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xulichongji
  condition:
    type: selfUseSkill
# 附加40点固定伤害
- id: effect_skill_fixed_damage_40
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta: 40
  condition:
    type: selfUseSkill
# 给敌人施加沉默
- id: effect_skill_add_mark_opponent_chenmo
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_chenmo
  condition:
    type: selfUseSkill
# 在连续使用两次后，提升一级速度
- id: effect_skill_raise_spe_1_stage_after_2_uses
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: continuousUseSkill
        times: 2
        strategy: Periodic
# 在连续使用两次后，提升一级攻击
- id: effect_skill_raise_atk_1_stage_after_2_uses
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: atk
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: continuousUseSkill
        times: 2
        strategy: Periodic
# 在连续使用两次后，提升一级特攻
- id: effect_skill_raise_spa_1_stage_after_2_uses
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: continuousUseSkill
        times: 2
        strategy: Periodic
# 在连续使用两次后，提升一级防御
- id: effect_skill_raise_def_1_stage_after_2_uses
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: def
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: continuousUseSkill
        times: 2
        strategy: Periodic
# 在连续使用两次后，提升一级特防
- id: effect_skill_raise_spd_1_stage_after_2_uses
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spd
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: continuousUseSkill
        times: 2
        strategy: Periodic
# 20%几率添加一级物攻
- id: effect_skill_raise_atk_1_stage_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: atk
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
# 将所有不良效果的印记转移给对方
- id: effect_skill_transfer_status_marks_to_opponent
  trigger: OnHit
  priority: 0
  apply:
    type: transferMark
    target: opponent
    mark:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: tags
            evaluator:
              type: contain
              tag: status
  condition:
    type: selfUseSkill
# 为自己添加分身术
- id: effect_skill_add_mark_fenshen
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_fenshen
  condition:
    type: selfUseSkill
# 将这个技能本身的怒气消耗锁定为10
- id: effect_skill_lock_rage_to_10
  trigger: OnBattleStart
  priority: 0
  apply:
    type: addSkillAttributeModifier
    target: skill
    attribute: rage
    modifierType: override
    value: 10
# 当你使用非本技能的时候，将这个技能变化成使用的技能
- id: effect_skill_change_to_used_skill
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: transform
    target: skill
    newBase:
      type: dynamic
      selector:
        base: usingSkillContext
        chain:
          - type: select
            arg:
              type: dynamic
              arg: skill.base
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.id
        evaluator:
          type: notSame
          value:
            type: dynamic
            selector:
              base: skill
              chain:
                - type: select
                  arg:
                    type: dynamic
                    arg: id
# 使用本技能后，清除本技能的变化状态
- id: effect_skill_clear_transform_when_use
  trigger: AfterUseSkillCheck
  priority: 5
  apply:
    type: removeTransformation
    target: skill
  condition:
    type: selfUseSkill
# 无论命中与否，回复1/4物防的hp
- id: effect_skill_heal_self_def_quarter_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.def
          - type: divide
            arg: 4
  condition:
    type: selfUseSkill
# 命中时造成特攻1/6的额外伤害
- id: effect_skill_add_damage_spa_sixth
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.spa
          - type: divide
            arg: 6
  condition:
    type: selfUseSkill
# 未命中时，给敌方造成特攻1/6的伤害
- id: effect_skill_deal_damage_spa_sixth_on_miss
  trigger: OnMiss
  priority: 0
  apply:
    type: dealDamage
    target: opponent
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.spa
          - type: divide
            arg: 6
  condition:
    type: selfUseSkill
# 无论命中与否，使自身获得65点硬化
- id: effect_skill_add_mark_yinghua_65_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yinghua
    stack: 65
  condition:
    type: selfUseSkill
# 无论命中与否，给对方添加60层流血
- id: effect_skill_add_mark_opponent_liuxie_60_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack: 60
  condition:
    type: selfUseSkill
# 无论命中与否，添加免疫不良
- id: effect_skill_add_mark_mianyibuliang_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mianyibuliang
  condition:
    type: every
    conditions:
      - type: selfUseSkill
# 无论命中与否，清理自身的不良印记
- id: effect_skill_clear_status_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: 0
  apply:
    type: destroyMark
    target:
      base: self
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: tags
          evaluator:
            type: contain
            tag: status
  condition:
    type: selfUseSkill
# 无论命中与否，恢复30点怒气
- id: effect_skill_add_rage_30_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: 0
  apply:
    type: addRage
    target: self
    value: 30
  condition:
    type: selfUseSkill
# 使自身获得一层大地之佑
- id: effect_skill_add_mark_dadizhiyou_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_dadizhiyou
    stack: 1
  condition:
    type: selfUseSkill
# 使自身获得一层沙暴之力
- id: effect_skill_add_mark_shabaozhili_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shabaozhili
    stack: 1
  condition:
    type: selfUseSkill
# 无论命中与否，清除对方的强化状态
- id: effect_skill_opponent_clear_stage_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: 0
  apply:
    type: clearStatStage
    target: opponent
    cleanStageStrategy: positive
  condition: *condition_self_use_skill_template
# 无论命中与否，斩杀血量低于75的对手
- id: effect_skill_execute_opponent_hp_under_75_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: 100
  apply:
    type: executeKill
    target: opponent
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponent
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <
          value: 75
# 无论命中与否，使自身获得接力
- id: effect_skill_add_mark_jieli_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_jieli
  condition:
    type: every
    conditions:
      - type: selfUseSkill
# 使自身获得泰坦之护
- id: effect_skill_add_mark_taitanzhihu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_taitanzhihu
  condition:
    type: every
    conditions:
      - type: selfUseSkill
# 附加1/8最大体力的伤害
- id: effect_skill_fixed_damage_max_hp_1_8
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector:
        base: opponent
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 8
  condition:
    type: selfUseSkill
# 连续使用2次弱化对手特防1级
- id: effect_skill_reduce_opponent_spd_1_stage_consecutive_2_times
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spd
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: continuousUseSkill
        times: 2
        strategy: Periodic
# 15%使对手麻痹 失败时50%强化自身特攻1级
- id: effect_skill_add_mark_opponent_mabi_15_percent_or_raise_spa_1_stage_50_percent
  trigger: OnHit
  priority: 0
  condition:
    type: selfUseSkill
  apply:
    type: conditional
    condition:
      type: evaluate
      target: opponent
      evaluator:
        type: probability
        percent:
          type: 'raw:number'
          value: 15
          tags: ['skill_effect_probability', 'mark_mabi_chance']
    trueOperator:
      type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_mabi
    falseOperator:
      type: conditional
      condition:
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 50
            tags: ['skill_effect_probability']
      trueOperator: # If the 50% chance succeeds
        <<: *apply_self_statstage_+1_template
        statType: spa
# 15%使对手睡眠 失败时50%强化自身速度1级
- id: effect_skill_add_mark_opponent_shuimian_15_percent_or_raise_spe_1_stage_50_percent
  trigger: OnHit #BeforeHit睡眠之后直接就被打醒了
  priority: 0
  condition:
    type: selfUseSkill
  apply:
    type: conditional
    condition:
      type: evaluate
      target: opponent
      evaluator:
        type: probability
        percent:
          type: 'raw:number'
          value: 15
          tags: ['skill_effect_probability']
    trueOperator:
      type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_shuimian
    falseOperator:
      type: conditional
      condition:
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 50
            tags: ['skill_effect_probability']
      trueOperator:
        <<: *apply_self_statstage_+1_template
        statType: spe
# 使自己获得花粉弥漫
- id: effect_skill_add_mark_huafenmiman_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_huafenmiman
    stack: 1
  condition:
    type: selfUseSkill
# 10%使对手睡眠
- id: effect_skill_add_mark_opponent_shuimian_10_percent
  trigger: BeforeHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_shuimian
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_10_percent_template
# 连续使用两次使对手中毒
- id: effect_skill_add_mark_opponent_zhongdu_consecutive_2_times
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_zhongdu
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: continuousUseSkill
        times: 2
        strategy: Periodic
# 对手睡眠或麻痹时候威力2倍
- id: effect_skill_power_2x_if_opponent_shuimian_or_mabi
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: anyOf
                value:
                  - mark_shuimian
                  - mark_mabi
        evaluator:
          type: exist
# 使对手睡眠
- id: effect_skill_add_mark_opponent_shuimian
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_shuimian
  condition:
    type: selfUseSkill
# 自身满体力时威力2倍
- id: effect_skill_power_2x_if_self_full_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: ==
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
# 使自身获得龙鳞甲
- id: effect_skill_add_mark_longlinjia
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_longlinjia
  condition:
    type: selfUseSkill
# 体力值大于3/4时使对手烧伤
- id: effect_skill_add_mark_opponent_shaoshang_if_hp_above_75_percent
  trigger: OnHit
  priority: 0
  apply: *apply_opponent_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '>'
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: multiply
                  arg: 0.75
# 恢复造成伤害1/4的体力
- id: effect_skill_heal_25_percent_damage_dealt
  trigger: OnDamage
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: multiply
            arg: 0.25
  condition:
    type: selfUseSkill
# 体力大于一半时使对手获得50点流血
- id: effect_skill_add_mark_opponent_liuxie_50_if_hp_above_half
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_self_hp_above_half
        type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '>'
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: multiply
                  arg: 0.5
# 体力低于一半时恢复30点怒气
- id: effect_skill_add_rage_30_if_hp_below_half
  trigger: OnHit
  priority: 0
  apply:
    type: addRage
    target: self
    value: 30
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_self_hp_below_half
        type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '<'
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: multiply
                  arg: 0.5
# 体力低于1/4时必定暴击
- id: effect_skill_set_sure_crit_if_hp_below_quarter
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target: usingSkillContext
    priority: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_hp_below_quarter
# 体力大于1/4时无视对手双防强化
- id: effect_skill_ignore_opponent_stat_if_hp_above_quarter
  trigger: BeforeHit
  priority: 0
  apply:
    type: setIgnoreStageStrategy
    target: usingSkillContext
    value: positive
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '>'
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: multiply
                  arg: 0.25
# 5%使对手昏迷
- id: effect_skill_add_mark_opponent_hunmi_5_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_hunmi
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_5_percent_template
# 体力低于3/4时强化自身速度1级
- id: effect_skill_raise_spe_1_stage_if_hp_below_75_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '<'
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: multiply
                  arg: 0.75
# 体力大于一半时威力2倍
- id: effect_skill_power_2x_if_hp_above_half
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_hp_above_half
# 体力低于一半时必定暴击
- id: effect_skill_set_sure_crit_if_hp_below_half
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target: usingSkillContext
    priority: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_hp_below_half
# 为对方添加一层黑暗物质
- id: effect_skill_add_mark_opponent_heianwuzhi_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_heianwuzhi
    stack: 1
  condition:
    type: selfUseSkill
# 消耗一层黑暗物质降低对手一级特防
- id: effect_skill_consume_heianwuzhi_reduce_opponent_spd_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    - &apply_consume_heianwuzhi_1_stack_template
      type: consumeStacks
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_heianwuzhi
      value: 1
    - type: statStageBuff
      target: opponent
      statType: spd
      value: -1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_opponent_has_heianwuzhi
        type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_heianwuzhi
            - type: select
              arg:
                type: base
                arg: stack
        evaluator:
          type: compare
          operator: '>'
          value: 0
# 将当前的场地设为夜幕
- id: effect_skill_set_field_yemu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: battle
    mark:
      type: entity:baseMark
      value: mark_global_yemu
  condition:
    type: selfUseSkill
# 消耗一个黑暗物质使威力增加50
- id: effect_skill_add_power_50_consume_heianwuzhi
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    - type: addPower
      target: usingSkillContext
      value: 50
    - *apply_consume_heianwuzhi_1_stack_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_opponent_has_heianwuzhi
# 当场地为夜幕时，使对手获得50层流血
- id: effect_skill_add_mark_opponent_liuxie_50_if_field_yemu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_field_is_yemu
        type: evaluate
        target:
          base: battle
          chain:
            - type: select
              arg:
                type: base
                arg: marks
            - type: flat
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_global_yemu
        evaluator:
          type: exist
# 恢复70点HP，如果场地为夜幕，恢复量翻倍
- id: effect_skill_heal_70_double_if_field_yemu
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: conditional
      trueValue:
        type: raw:number
        value: 140
      falseValue:
        type: raw:number
        value: 70
      condition: *condition_field_is_yemu
  condition:
    type: selfUseSkill
# 消耗两层黑暗物质使技能必定暴击
- id: effect_skill_consume_heimowuzhi_2_sure_crit
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    - type: consumeStacks
      target:
        base: opponentMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_heianwuzhi
      value: 2
    - type: setSureCrit
      target: usingSkillContext
      priority: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_heianwuzhi
      - type: evaluate
        target:
          base: opponentMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_heianwuzhi
            - type: select
              arg:
                type: base
                arg: stack
        evaluator:
          type: compare
          operator: '>'
          value: 1
# 如果环境为夜幕，清除自身弱化
- id: effect_skill_clear_self_negative_stage_if_field_yemu
  trigger: BeforeHit
  priority: 0
  apply:
    type: clearStatStage
    target: self
    cleanStageStrategy: negative
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_field_is_yemu
# 附加对手7%最大生命值的伤害
- id: effect_skill_fixed_damage_7_percent_max_hp
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector:
        base: opponent
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: multiply
            arg:
              type: raw:number
              value: 0.07
  condition:
    type: selfUseSkill
# 如果环境为夜幕，必中
- id: effect_skill_set_sure_hit_if_field_yemu
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_field_is_yemu
# 清除对方速度强化，如果环境为夜幕，则改为反转对方速度强化
- id: effect_skill_clear_opponent_spe_up_reverse_if_field_yemu
  trigger: BeforeHit
  priority: 0
  apply:
    type: conditional
    condition: *condition_field_is_yemu
    trueOperator:
      type: reverseStatStage
      target: opponent
      statType:
        - spe
      cleanStageStrategy: positive
    falseOperator:
      type: clearStatStage
      target: opponent
      statType:
        - spe
      cleanStageStrategy: positive
  condition:
    type: selfUseSkill
# 使自身获得影缝
- id: effect_skill_add_mark_yingfeng
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yingfeng
  condition:
    type: selfUseSkill
# 使自己获得50点受到伤害增加
- id: effect_skill_add_mark_shanghaizengjia_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanghaizengjia
    stack: 50
  condition:
    type: selfUseSkill
# 使自己获得150点伤害增加
- id: effect_skill_add_mark_shanghaizengjia_150
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanghaizengjia
    stack: 150
  condition:
    type: selfUseSkill
# 10%使对手麻痹
- id: effect_skill_add_mark_opponent_mabi_10_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_mabi
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: 'raw:number'
            value: 10
            tags: ['skill_effect_probability', 'mark_mabi_chance']
# 50%强化自身速度1级
- id: effect_skill_raise_spe_1_stage_50_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_50_percent_template
# 对手麻痹时威力2倍
- id: effect_skill_power_2x_if_opponent_has_mark_mabi
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_mabi
# 使自身获得蓄电
- id: effect_skill_add_mark_xudian
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xudian
  condition:
    type: selfUseSkill
# 使自身获得闪电守护
- id: effect_skill_add_mark_shandianshoushu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shandianshoushu
    stack: 150
  condition:
    type: selfUseSkill
# 对手麻痹时50%使对手昏迷
- id: effect_skill_add_mark_hunmi_50_percent_if_opponent_has_mark_mabi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_hunmi
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_mabi
      - *condition_probability_50_percent_template
# 对手麻痹时必中
- id: effect_skill_sure_hit_if_opponent_has_mark_mabi
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_mabi
# 30%使对手麻痹 若失败则给对手获得闪电烙印
- id: effect_skill_add_mark_mabi_30_percent_or_shandianluoyin_if_fail
  trigger: OnHit
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target: self
      evaluator:
        type: probability
        percent:
          type: 'raw:number'
          value: 30
          tags: ['skill_effect_probability', 'mark_mabi_chance']
    trueOperator:
      type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_mabi
    falseOperator:
      type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_shandianluoyin
  condition:
    type: selfUseSkill
# 对手昏迷时威力2倍
- id: effect_skill_power_2x_if_opponent_has_mark_hunmi
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_hunmi
# 10%使对手昏迷
- id: effect_skill_add_mark_opponent_hunmi_10_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_hunmi
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_10_percent_template
# 给对手添加精神错乱
- id: effect_skill_add_mark_opponent_jingshencuoluan
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_jingshencuoluan
  condition:
    type: selfUseSkill
# 对手精神错乱时，该技能必中
- id: effect_skill_sure_hit_opponent_jingshencuoluan
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_jingshencuoluan
# 对手精神错乱时，吸收造成伤害1/4的体力
- id: effect_skill_heal_25_percent_damage_dealt_if_opponent_jingshencuoluan
  trigger: OnDamage
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: multiply
            arg: 0.25
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_jingshencuoluan
# 对手害怕时，威力2倍
- id: effect_skill_power_2x_if_opponent_has_mark_haipa
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_haipa
# 对手中毒时，附加80点伤害
- id: effect_skill_add_damage_80_if_opponent_has_mark_zhongdu
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: raw:number
      value: 80
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_zhongdu
# 对手精神错乱时，增加40点威力
- id: effect_skill_add_power_40_if_opponent_has_mark_jingshencuoluan
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 40
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_jingshencuoluan
# 给对手添加石化
- id: effect_skill_add_mark_opponent_shihua
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_shihua
  condition:
    type: selfUseSkill
# 对手石化时，暴击率增加85%
- id: effect_skill_add_crit_rate_85_if_opponent_has_mark_shihua
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target: usingSkillContext
    value: 85
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_shihua
# 对手害怕且中毒时，暴击率增加85%
- id: effect_skill_add_crit_rate_85_if_opponent_has_mark_zhongdu_and_haipa
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target: usingSkillContext
    value: 85
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_zhongdu
      - type: opponentHasMark
        baseId: mark_haipa
# 对手精神错乱且害怕时，威力2倍
- id: effect_skill_power_2x_if_opponent_has_mark_jingshencuoluan_and_haipa
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: opponentHasMark
        baseId: mark_jingshencuoluan
      - type: opponentHasMark
        baseId: mark_haipa
# 使自身获得幻想
- id: effect_skill_add_mark_huanxiang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_huanxiang
  condition:
    type: selfUseSkill
# 消耗幻想连击2次
- id: effect_skill_consume_huanxiang_multihit_2
  trigger: BeforeMultiHit
  priority: 0
  apply:
    - type: addMultihitResult
      target: usingSkillContext
      value: 1
    - &apply_consume_huanxiang_1_stack_template
      type: consumeStacks
      target:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_huanxiang
      value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_self_has_huanxiang
        type: selfHasMark
        baseId: mark_huanxiang
# 消耗幻想强化自身特攻1级
- id: effect_skill_consume_huanxiang_raise_spa_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    - *apply_consume_huanxiang_1_stack_template
    - <<: *apply_self_statstage_+1_template
      statType: spa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_huanxiang
# 消耗幻想使对手冻伤
- id: effect_skill_consume_huanxiang_add_mark_opponent_dongshang
  trigger: OnHit
  priority: 0
  apply:
    - *apply_consume_huanxiang_1_stack_template
    - type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_dongshang
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_huanxiang
# 使自身获得晚安
- id: effect_skill_add_mark_wanan
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_wanan
  condition:
    type: selfUseSkill
# 消耗幻想使技能必中
- id: effect_skill_consume_huanxiang_set_sure_hit
  trigger: BeforeHit
  priority: 0
  apply:
    - *apply_consume_huanxiang_1_stack_template
    - type: setSureHit
      target: usingSkillContext
      priority: 99
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_huanxiang
# 暴击时获得20点怒气
- id: effect_skill_crit_gain_rage_20
  trigger: OnCritPostDamage
  priority: 0
  apply:
    type: addRage
    target: self
    value: 20
  condition:
    type: selfUseSkill
# 消耗幻想强化自身物防1级
- id: effect_skill_consume_huanxiang_raise_def_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    - *apply_consume_huanxiang_1_stack_template
    - <<: *apply_self_statstage_+1_template
      statType: def
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_huanxiang
# 使自身获得真实幻想
- id: effect_skill_add_mark_zhenshihuanxiang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zhenshihuanxiang
  condition:
    type: selfUseSkill
# 将自身的特攻强化设定为物攻强化的等级
# 当前物攻强化等级为0时，特攻强化等级也为0。
# 否则，特攻强化等级为物攻强化等级。
# 如果物攻强化等级为负或者为0，没有任何效果。
- id: effect_skill_set_self_spa_to_atk
  trigger: BeforeHit
  priority: 0
  apply:
    type: statStageBuff
    target: self
    statType: spa
    strategy: set
    value:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: stat_stage_atk_up
          - type: select
            arg:
              type: base
              arg: stack
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: stat_stage_atk_up
# 使自身获得逃避
- id: effect_skill_add_mark_taobi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_taobi
  condition:
    type: selfUseSkill
# 消耗幻想连击4到5次
- id: effect_skill_consume_huanxiang_multihit_4_to_5
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    - type: setMultihit
      target: usingSkillContext
      value: [4, 5]
    - *apply_consume_huanxiang_1_stack_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_huanxiang
# 消耗幻想强化自身特防1级
- id: effect_skill_consume_huanxiang_raise_spd_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    - *apply_consume_huanxiang_1_stack_template
    - <<: *apply_self_statstage_+1_template
      statType: spd
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_huanxiang
# 使自身随机获得招财或进宝
- id: effect_skill_add_mark_zhaocai_or_jinbao
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: selector
      value:
        - type: entity:baseMark
          value: mark_zhaocai
        - type: entity:baseMark
          value: mark_jinbao
      chain:
        - type: randomPick
          arg: 1
  condition:
    type: selfUseSkill
# 具有招财时威力2倍
- id: effect_skill_power_2x_if_has_zhaocai
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_self_has_zhaocai
        type: selfHasMark
        baseId: mark_zhaocai
# 具有进宝时暴击率增加95%
- id: effect_skill_add_crit_rate_95_if_has_jinbao
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target: usingSkillContext
    value: 95
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_self_has_jinbao
        type: selfHasMark
        baseId: mark_jinbao
# 具有招财时必中
- id: effect_skill_sure_hit_if_has_zhaocai
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_zhaocai
# 具有进宝时，使对手获得15点命中下降
- id: effect_skill_add_mark_opponent_mingzhongxiajiang_15_if_has_jinbao
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_mingzhongxiajiang
    stack: 15
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_jinbao
# 具有招财时，连击3次
- id: effect_skill_multihit_3_if_has_zhaocai
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setMultihit
    target: usingSkillContext
    value: 3
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_zhaocai
# 具有进宝时，附加100点伤害
- id: effect_skill_add_fixed_damage_100_if_has_jinbao
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_jinbao
# 具有招财时，伤害增加50%
- id: effect_skill_damage_increase_50_if_has_zhaocai
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 50
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_zhaocai
# 具有进宝时，造成伤害减少50%
- id: effect_skill_damage_reduce_50_if_has_jinbao
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -50
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_jinbao
# 具有进宝时，造成伤害增加50%
- id: effect_skill_damage_increase_50_if_has_jinbao
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 50
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_jinbao
# 具有招财时，造成伤害减少50%
- id: effect_skill_damage_reduce_50_if_has_zhaocai
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -50
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_has_zhaocai
# 先出手时增加40点威力
- id: effect_skill_add_power_40_if_first
  trigger: BeforeHit
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 40
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
# 后出手时增加40点威力
- id: effect_skill_add_power_40_if_last
  trigger: BeforeHit
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 40
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isLastSkillUsedThisTurn
# 先出手时连击4次
- id: effect_skill_multihit_4_if_first
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setMultihit
    target: usingSkillContext
    value: 4
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
# 后出手时连击4次
- id: effect_skill_multihit_4_if_last
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setMultihit
    target: usingSkillContext
    value: 4
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isLastSkillUsedThisTurn
# 先出手时伤害增加30%
- id: effect_skill_damage_increase_30_percent_if_first
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 30
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
# 后出手时伤害增加30%
- id: effect_skill_damage_increase_30_percent_if_last
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 30
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isLastSkillUsedThisTurn
# 使自身获得一层迅捷
- id: effect_skill_add_mark_xunjie_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xunjie
    stack: 1
  condition:
    type: selfUseSkill
# 使自身获得一层迟缓
- id: effect_skill_add_mark_chihuan_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_chihuan
    stack: 1
  condition:
    type: selfUseSkill
# 先出手附带50点固伤
- id: effect_skill_add_fixed_damage_50_if_first
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
# 后出手附带50点固伤
- id: effect_skill_add_fixed_damage_50_if_last
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isLastSkillUsedThisTurn
# 添加一层强攻
- id: effect_skill_add_mark_qianggong_1_stack
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_qianggong
    stack: 1
  condition:
    type: selfUseSkill
# 获得羽刃反弹
- id: effect_skill_add_mark_yurenfantan
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yurenfantan
  condition:
    type: selfUseSkill
# 强化自身物攻1级及其他1项能力1级
- id: effect_skill_raise_atk_1_stage_and_other_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    - <<: *apply_self_statstage_+1_template
      statType: atk
    - <<: *apply_self_statstage_+1_template
      statType:
        type: selector
        value: ['def', 'spd', 'spa', 'spe']
        chain:
          - type: randomPick
            arg: 1
  condition:
    type: selfUseSkill
# 自身物攻大于500时，先制+1
- id: effect_skill_priority_plus_1_if_atk_over_500
  trigger: BeforeSort
  priority: 0
  apply:
    type: addValue
    target:
      base: usingSkillContext
      chain:
        - type: selectProp
          arg: priority
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_self_atk_over_500
        type: evaluate
        target:
          base: self
          chain:
            - type: selectPath
              arg: stat.atk
        evaluator:
          type: compare
          operator: '>'
          value: 500
# 自身物攻大于500时，必中
- id: effect_skill_sure_hit_if_atk_over_500
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_atk_over_500
# 附加自身物攻值>500的伤害
- id: effect_skill_fixed_damage_over_atk_500
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector:
        base: self
        chain:
          - type: selectPath
            arg: stat.atk
          - type: add
            arg: -500
          - type: clampMax
            arg: 105
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_self_atk_over_500
# 如果有时间法则，则额外附加50点伤害，否则添加定时炸弹
- id: effect_skill_add_damage_50_or_add_mark_dingshizhadan
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: selfHasMark
      baseId: mark_shijianfaze
    trueOperator:
      type: addModified
      target: damageContext
      percent: 0
      delta: 50
    falseOperator:
      type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_dingshizhadan
  condition:
    type: selfUseSkill
# 使自身获得时间法则
- id: effect_skill_add_mark_shijianfaze
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shijianfaze
  condition:
    type: selfUseSkill
# 强化双方速度1级
- id: effect_skill_raise_both_spe_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    - <<: *apply_self_statstage_+1_template
      statType: spe
    - <<: *apply_opponent_statstage_-1_template
      statType: spe
      value: 1
  condition:
    type: selfUseSkill
# 具有时间法则时，弱化对手两级
- id: effect_skill_reduce_opponent_spe_2_stage_if_shijianfaze
  trigger: BeforeHit
  priority: -1
  apply:
    <<: *apply_opponent_statstage_-1_template
    statType: spe
    value: -2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shijianfaze
# 弱化双方特攻1级
- id: effect_skill_reduce_both_spa_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    - <<: *apply_self_statstage_+1_template
      statType: spa
      value: -1
    - <<: *apply_opponent_statstage_-1_template
      statType: spa
  condition:
    type: selfUseSkill
# 具有时间法则时，额外强化自身特攻2级
- id: effect_skill_raise_self_spa_2_stage_if_has_shijianfaze
  trigger: BeforeHit
  priority: -1
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spa
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: selfHasMark
        baseId: mark_shijianfaze
# 先出手时必中
- id: effect_skill_sure_hit_if_first
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
# 先出手时暴击率增加50%
- id: effect_skill_add_crit_rate_50_if_first
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
# 使自身获得时间护盾
- id: effect_skill_add_mark_shijianhudun
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shijianhudun
  condition:
    type: selfUseSkill
# 如果有时间法则，则额外附加50点伤害，否则添加定时炸弹
- id: effect_skill_add_damage_100_or_add_mark_shijianzhadan
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: selfHasMark
      baseId: mark_shijianfaze
    trueOperator:
      type: addModified
      target: damageContext
      percent: 0
      delta: 100
    falseOperator:
      type: addMark
      target: opponent
      mark:
        type: entity:baseMark
        value: mark_shijianzhadan
  condition:
    type: selfUseSkill
# 使自身获得穿梭未来
- id: effect_skill_add_mark_chuansuoweilai
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_chuansuoweilai
  condition:
    type: selfUseSkill
# 先出手时暴击率增加65%
- id: effect_skill_add_crit_rate_65_if_first
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target: usingSkillContext
    value: 65
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
