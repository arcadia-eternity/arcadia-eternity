# data/effect_skill.yaml
# yaml-language-server: $schema=../packages/schema/schema/effect.schema.json
# @metaType effect
# @version 1.0.0
- id: effect_skill_reduce_stat_5_percent
  trigger: OnDamage
  priority: 0
  apply: &apply_foe_statstage_-1_template
    type: statStageBuff
    target:
      base: foe
    statType: def
    value: -1
  condition: &condition_probability_5_percent_template
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 5
- id: effect_skill_reduce_foe_def_5_percent
  trigger: OnDamage
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: def
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_foe_spe_5_percent
  trigger: OnDamage
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spe
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_foe_atk_5_percent
  trigger: OnDamage
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: atk
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_foe_spa_5_percent
  trigger: OnDamage
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spa
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_foe_spd_5_percent
  trigger: OnDamage
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spd
  condition: *condition_probability_5_percent_template
- id: effect_skill_reduce_foe_spd_10_percent
  trigger: OnDamage
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spd
  condition: &condition_probability_10_percent_template
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 10
- id: effect_skill_reduce_foe_def_10_percent
  trigger: OnDamage
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: def
  condition: *condition_probability_10_percent_template
- id: effect_skill_reduce_foe_spa_10_percent
  trigger: OnDamage
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spa
  condition: *condition_probability_10_percent_template
- id: effect_skill_raise_atk_1_stages
  trigger: BeforeHit
  priority: 0
  apply: &apply_self_statstage_+1_template
    type: statStageBuff
    target:
      base: self
    statType: atk
    value: 1
  condition: &condition_self_use_skill_template
    type: selfUseSkill
- id: effect_skill_raise_atk_1_stage_5_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: atk
  condition: *condition_probability_5_percent_template
- id: effect_skill_raise_def_1_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: def
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spa_1_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spa
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spd_1_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spd
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spe_1_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_atk_2_stages
  trigger: BeforeHit
  priority: 0
  apply: &apply_self_statstage_+2_template
    type: statStageBuff
    target:
      base: self
    statType: atk
    value: 2
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_def_2_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+2_template
    statType: def
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spa_2_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+2_template
    statType: spa
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spd_2_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+2_template
    statType: spd
  condition: *condition_self_use_skill_template
- id: effect_skill_raise_spe_2_stages
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+2_template
    statType: spe
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_foe_stat_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: def
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_foe_atk_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: atk
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_foe_def_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: def
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_foe_spa_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spa
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_foe_spd_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spd
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_foe_spe_1_stage
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spe
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_foe_ruodian
  trigger: OnHit
  priority: 0
  apply: &apply_foe_add_mark_ruodian_template
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_ruodianjihao
    stack: 1
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_foe_ruodian_2
  trigger: OnHit
  priority: 0
  apply:
    <<: *apply_foe_add_mark_ruodian_template
    stack: 2
  condition: *condition_self_use_skill_template
- id: effect_skill_consume_ruodian
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: foeMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_ruodianjihao
    value: 2
  condition: *condition_self_use_skill_template
- id: effect_skill_add_crit_rate_ruodian
  trigger: AfterUseSkillCheck
  priority: 1
  apply:
    type: addCritRate
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: foeMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_ruodianjihao
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 45
  condition: *condition_self_use_skill_template
- id: effect_skill_add_hit_result_ruodian
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addMultihitResult
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: foeMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_ruodianjihao
          - type: select
            arg:
              type: base
              arg: stack
  condition: *condition_self_use_skill_template
- id: effect_skill_add_power_50_ruodian
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: foeMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_ruodianjihao
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 50
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_foe_yishang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_yishang
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_foe_shaoshang
  trigger: OnHit
  priority: 0
  apply: &apply_foe_add_mark_shaoshang_template
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_shaoshang
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_foe_not_fire_element
        type: evaluate
        target:
          base: foe
          chain:
            - type: select
              arg:
                type: base
                arg: element
        evaluator:
          type: notSame
          value: Fire
- id: effect_skill_add_mark_foe_shaoshang_5_percent
  trigger: OnHit
  priority: 0
  apply: *apply_foe_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_5_percent_template
      - *condition_foe_not_fire_element
- id: effect_skill_add_mark_foe_shaoshang_10_percent
  trigger: OnHit
  priority: 0
  apply: *apply_foe_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_10_percent_template
      - *condition_foe_not_fire_element
- id: effect_skill_add_mark_foe_shaoshang_15_percent
  trigger: OnHit
  priority: 0
  apply: *apply_foe_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_15_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 15
      - *condition_foe_not_fire_element
- id: effect_skill_add_mark_foe_shaoshang_20_percent
  trigger: OnHit
  priority: 0
  apply: *apply_foe_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_20_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 20
      - *condition_foe_not_fire_element
- id: effect_skill_add_mark_foe_shaoshang_30_percent
  trigger: OnHit
  priority: 0
  apply: *apply_foe_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_30_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 30
      - *condition_foe_not_fire_element
- id: effect_skill_add_mark_foe_shaoshang_50_percent
  trigger: OnHit
  priority: 0
  apply: *apply_foe_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_foe_not_fire_element
      - &condition_probability_50_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 50
- id: effect_skill_add_mark_foe_shaoshang_60_percent
  trigger: OnHit
  priority: 0
  apply: *apply_foe_add_mark_shaoshang_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_foe_not_fire_element
      - &condition_probability_60_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 60
- id: effect_skill_min_damage_95
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addThreshold
    target: damageContext
    min: 95
  condition: *condition_self_use_skill_template
- id: effect_skill_min_damage_100
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addThreshold
    target: damageContext
    min: 100
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_yanggong
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yanggong
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_jizhong
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_bizhong
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_busi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_busi
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_weilifanbei
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_weilifanbei
  condition: *condition_self_use_skill_template
- id: effect_skill_reduce_self_hp_1_6
  trigger: BeforeHit
  priority: 0
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 6
  condition: *condition_self_use_skill_template
- id: effect_skill_add_rage_35
  trigger: OnHit
  priority: 0
  apply:
    type: addRage
    target:
      base: self
    value: 35
  condition: *condition_self_use_skill_template
- id: effect_skill_power_4x_below_1_6_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 4
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 6
- id: effect_heal_self_half
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 2
  condition: *condition_self_use_skill_template
- id: effect_heal_self_onethird
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 3
  condition: *condition_self_use_skill_template
- id: effect_skill_heal_self_quarter
  trigger: OnHit
  priority: 0
  condition:
    type: selfUseSkill
  apply:
    type: heal
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 4
- id: effect_skill_add_mark_zhongzinengliang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zhongzinengliang
    stack: 4
  condition: *condition_self_use_skill_template
- id: effect_skill_consume_all_zhongzinengliang
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_zhongzinengliang
    value: 4
  condition: *condition_self_use_skill_template
- id: effect_skill_add_power_25_zhongzinengliang
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_zhongzinengliang
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 25
  condition: *condition_self_use_skill_template
- id: effect_skill_heal_by_damage_25_zhongzinengliang
  trigger: PostDamage
  priority: 0
  apply:
    type: heal
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: divide
            arg: 4
          - type: multiply
            arg:
              type: dynamic
              selector:
                base: selfMarks
                chain:
                  - type: whereAttr
                    extractor:
                      type: base
                      arg: baseId
                    evaluator:
                      type: same
                      value: mark_zhongzinengliang
                  - type: select
                    arg:
                      type: base
                      arg: stack
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_foe_mingzhongxiajiang_15
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_mingzhongxiajiang
    stack: 15
  condition: *condition_self_use_skill_template
- id: effect_skill_foe_clear_stage
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: foe
    cleanStageStrategy: positive
  condition: *condition_self_use_skill_template
- id: effect_skill_clear_stage
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: self
    cleanStageStrategy: negative
  condition: *condition_self_use_skill_template
- id: effect_skill_power_2x_below_quarter_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 4
- id: effect_skill_power_2x_foe_below_quarter_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_foe_below_quarter_hp
        type: evaluate
        target:
          base: foe
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: foe
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 4
- id: effect_skill_add_mark_foe_jishengzhadan
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_jishengzhadan
  condition: *condition_self_use_skill_template
- id: effect_skill_ignite_foe_mark_jishengzhadan
  trigger: OnHit
  priority: 0
  apply:
    - type: destroyMark
      target:
        base: foeMarks
        chain:
          - type: whereAttr
            extractor: baseId
            evaluator:
              type: same
              value: mark_jishengzhadan
    - type: dealDamage
      target: foe
      value: 300
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_jishengzhadan
        evaluator:
          type: exist
- id: effect_skill_add_mark_foe_jisheng
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_jisheng
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_foe_liuxie_with_zhongzinengliang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_liuxie
    duration:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_zhongzinengliang
          - type: select
            arg:
              type: base
              arg: stack
          - type: add
            arg: 3
    stack: 50
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_foe_nishui
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_nishui
  condition:
    type: every
    conditions:
      - *condition_self_use_skill_template
      - &condition_foe_not_water_element
        type: evaluate
        target:
          base: foe
          chain:
            - type: select
              arg:
                type: base
                arg: element
        evaluator:
          type: notSame
          value: Water
- id: effect_skill_add_mark_foe_nishui_10_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_nishui
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_10_percent_template
      - *condition_foe_not_water_element
- id: effect_skill_add_mark_huifu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_huifu
  condition: *condition_self_use_skill_template
- id: effect_skill_save_hp_to_1
  trigger: OnDamage
  priority: 0
  apply:
    type: addThreshold
    target: damageContext
    max:
      type: dynamic
      selector:
        base: foe
        chain:
          - type: select
            arg:
              type: base
              arg: currentHp
          - type: add
            arg: -1
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_mingzhongtisheng_10
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mingzhongtisheng
    stack: 10
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_mingzhongtisheng_15
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mingzhongtisheng
    stack: 15
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_weilibianhua_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_weilibianhua
    stack: 50
  condition: *condition_self_use_skill_template
- id: effect_skill_power_2x_foe_maxhp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foe
          chain:
            - type: select
              arg:
                type: base
                arg: maxHp
        evaluator:
          type: compare
          operator: ==
          value:
            type: dynamic
            selector:
              base: foe
              chain:
                - type: select
                  arg:
                    type: base
                    arg: currentHp
- id: effect_skill_power_4x_foe_below_quarter_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 4
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_foe_below_quarter_hp
- id: effect_skill_add_mark_foe_meihuo
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: foe
      mark:
        type: entity:baseMark
        value: mark_meihuo
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_sure_crit_below_1_4
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target:
      base: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 4
- id: effect_skill_add_mark_shanbi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanbi
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_bizhong
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_bizhong
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_foe_mihuo
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_mihuo
  condition: *condition_self_use_skill_template
- id: effect_skill_add_damage_maxhp_1_4_maxhp_max_180
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    delta:
      type: dynamic
      selector:
        base: foe
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 4
          - type: clampMax
            arg: 180
    percent: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foe
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: ==
          value:
            type: dynamic
            selector:
              base: foe
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
- id: effect_skill_add_multihit_foe_has_mark_kuihuazhongzi
  trigger: BeforeMultiHit
  priority: 0
  apply:
    type: addMultihitResult
    target:
      base: usingSkillContext
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_kuihuazhongzi
        evaluator:
          type: exist
- id: effect_skill_ignore_stat_foe_has_mark_kuihuazhongzi
  trigger: BeforeHit
  priority: 0
  apply:
    type: setIgnoreStageStrategy
    target: usingSkillContext
    value: positive
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_kuihuazhongzi
        evaluator:
          type: exist
- id: effect_skill_add_mark_foe_kuihuazhongzi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_kuihuazhongzi
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_foe_wulicao
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_wulicao
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_xishoucao
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xishoucao
  condition:
    type: selfUseSkill
- id: effect_skill_clear_status
  trigger: OnHit
  priority: 0
  apply:
    type: destroyMark
    target:
      base: self
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: tags
          evaluator:
            type: contain
            tag: status
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_foe_zhongdu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_zhongdu
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_foe_zhongdu_5_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_zhongdu
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_5_percent_template
- id: effect_skill_add_mark_foe_zhongdu_10_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_zhongdu
  condition: *condition_probability_10_percent_template
- id: effect_skill_set_weather_qingtian
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: battle
    mark:
      type: entity:baseMark
      value: mark_global_qingtian
  condition:
    type: selfUseSkill
- id: effect_skill_setsurehit_foe_has_mark_kuihuazhongzi
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target:
      base: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_kuihuazhongzi
        evaluator:
          type: exist
- id: effect_skill_add_mark_foe_zhongdu_duration_2
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_zhongdu
    duration:
      type: dynamic
      selector:
        base: foeMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_zhongdu
          - type: select
            arg:
              type: base
              arg: stack
          - type: add
            arg: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_zhongdu
        evaluator:
          type: exist
- id: effect_skill_add_mark_rouhua_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_rouhua
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_accuracy_when_reused
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addAccuracy
    target:
      base: usingSkillContext
    value: 25
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: continuousUseSkill
- id: effect_skill_add_mark_zengzhong_1
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zengzhong
    stack: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_power2x_if_heavier
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_heavier_template
        type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: stat.weight
        evaluator:
          type: compare
          operator: '>'
          value:
            type: dynamic
            selector:
              base: foe
              chain:
                - type: select
                  arg:
                    type: dynamic
                    arg: stat.weight
- id: effect_skill_add_mark_zhifanghudun_stack_with_weight
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zhifanghudun
    stack:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.weight
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_power2x_if_higher_level
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_level_higher_template
        type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: level
        evaluator:
          type: compare
          operator: '>'
          value:
            type: dynamic
            selector:
              base: foe
              chain:
                - type: select
                  arg:
                    type: dynamic
                    arg: level
- id: effect_skill_increase_accuracy_50_if_higher_level
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addAccuracy
    target:
      base: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_level_higher_template
- id: effect_skill_add_mark_foe_haipa
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_haipa
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_foe_haipa_10_if_heavier_40
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_haipa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent:
            type: conditional
            trueValue: 40
            falseValue: 10
            condition: *condition_heavier_template
- id: effect_skill_fixed_damage_by_weight
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.weight
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_zengzhong_2
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_zengzhong
    stack: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_tanhuan_10
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_tanhuan
  condition: *condition_probability_10_percent_template
- id: effect_skill_power2x_if_weight_above_99
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: stat.weight
        evaluator:
          type: compare
          operator: '>'
          value: 99
- id: effect_skill_add_mark_shanghaizengjia_stack_with_zengzhong_stack_x75
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanghaizengjia
    stack:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_zengzhong
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 75
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_all_zengzhong
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_zengzhong
    value: 2
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_exin_foe_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_exin
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_50_percent_template
- id: effect_skill_add_mark_tanxingzhifang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_tanxingzhifang
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_yinghua_25
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yinghua
    stack: 25
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_power_30_has_mark_yinghua
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value: 30
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_yinghua
        evaluator:
          type: exist
- id: effect_skill_heal_self_90_hp
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target:
      base: self
    value: 90
  condition: *condition_self_use_skill_template
- id: effect_skill_add_mark_fanshe
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_fanshe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_clear_foe_def_stage_if_has_mark_yinghua
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: foe
    statType: def
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_yinghua
        evaluator:
          type: exist
- id: effect_skill_clear_foe_spd_stage_if_has_mark_yinghua
  trigger: OnHit
  priority: 0
  apply:
    type: clearStatStage
    target: foe
    statType: spd
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_yinghua
        evaluator:
          type: exist
- id: effect_skill_add_mark_foe_liuxie
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack: 30
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_double_mark_liuxue_stack
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_liuxie
    stack:
      type: dynamic
      selector:
        base: foeMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_liuxie
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_liuxie
        evaluator:
          type: exist
- id: effect_skill_sure_hit_if_has_mark_yinghua
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target:
      base: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_yinghua
        evaluator:
          type: exist
- id: effect_skill_add_power_30_per_usetime
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value: &value_skill_add_30_per_usetime
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 3
          - type: multiply
            arg: 30
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_crit_rate_30_per_usetime
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target:
      base: usingSkillContext
    value: *value_skill_add_30_per_usetime
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_multihit_per_usetime
  trigger: BeforeMultiHit
  priority: 0
  apply:
    type: addMultihitResult
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 3
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_mianyiruohua
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mianyiruohua
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_self_damage_25_percent
  trigger: PostDamage
  priority: 0
  apply:
    type: dealDamage
    target: self
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: multiply
            arg: 0.25
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_shiming_10_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shiming
  condition: *condition_probability_10_percent_template
- id: effect_skill_add_damage_50_per_usetime
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 3
          - type: multiply
            arg: 50
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_sure_hit_below_1_4_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target:
      base: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: <=
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: divide
                  arg: 4
- id: effect_skill_add_mark_hunzhuoshuiyu
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_hunzhuoshuiyu
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_foe_manxingduyao_1_stack
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_manxingduyao
    stack: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_foe_manxingduyao_70_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_manxingduyao
    stack: 1
  condition: &condition_probability_70_percent_template
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 70
- id: effect_skill_heal_self_120_hp
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target:
      base: self
    value: 120
- id: effect_skill_reduce_foe_def_1_stage_15_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: def
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_15_percent_template
- id: effect_skill_reduce_foe_def_1_stage_50_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: def
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_50_percent_template
- id: effect_skill_reduce_foe_spd_1_stage_50_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spd
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_50_percent_template
- id: effect_skill_add_mark_foe_manxingduyao_5_stack
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_manxingduyao
    stack: 5
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_destroy_mark_zhongdu
  trigger: OnHit
  priority: 0
  apply:
    type: destroyMark
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_zhongdu
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_power_10_per_foe_manxingduyao
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: foeMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_manxingduyao
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 10
- id: effect_skill_consume_all_foe_manxingduyao
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: foeMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_manxingduyao
    value: 10
- id: effect_skill_add_mark_judushenti
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_judushenti
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_reduce_foe_spe_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: spe
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
- id: effect_skill_raise_spe_70_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spe
  condition: *condition_probability_70_percent_template
- id: effect_skill_add_mark_kongqichuliang_100
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_kongqichuliang
    stack: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_mark_kongqichuliang_10_if_fail_reduce_damage_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target: &mark_kongqichuliang_stack_template
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_kongqichuliang
          - type: select
            arg:
              type: base
              arg: stack
      evaluator:
        type: compare
        operator: '>='
        value: 10
    trueOperator:
      type: consumeStacks
      target: &mark_kongqichuliang_template
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_kongqichuliang
      value: 10
    falseOperator: &reduce_damage_25_percent_opreator
      type: addModified
      target: damageContext
      percent: -25
      delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_mark_kongqichuliang_15_if_fail_effect_skill_reduce_damage_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      evaluator:
        type: compare
        operator: '>='
        value: 15
      target: *mark_kongqichuliang_stack_template
    trueOperator:
      type: consumeStacks
      target: *mark_kongqichuliang_template
      value: 15
    falseOperator: *reduce_damage_25_percent_opreator
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_mark_kongqichuliang_20_if_fail_effect_skill_reduce_damage_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      evaluator:
        type: compare
        operator: '>='
        value: 20
      target: *mark_kongqichuliang_stack_template
    trueOperator:
      type: consumeStacks
      target: *mark_kongqichuliang_template
      value: 20
    falseOperator: *reduce_damage_25_percent_opreator
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_consume_mark_kongqichuliang_25_if_fail_effect_skill_reduce_damage_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target: *mark_kongqichuliang_stack_template
      evaluator:
        type: compare
        operator: '>='
        value: 25
    trueOperator:
      type: consumeStacks
      target: *mark_kongqichuliang_template
      value: 25
    falseOperator: *reduce_damage_25_percent_opreator
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_kongqihudun_stack_with_kongqichuliang_stack
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_kongqihudun
    stack:
      type: dynamic
      selector: *mark_kongqichuliang_stack_template
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_kongqichuliang
        evaluator:
          type: exist
- id: effect_skill_consume_all_kongqichuliang
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_kongqichuliang
    value: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_kongqichuliang
        evaluator:
          type: exist
- id: effect_skill_add_damage_by_kongqichuliang
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector: *mark_kongqichuliang_stack_template
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_foe_zhixi
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_zhixi
  condition:
    type: selfUseSkill
- id: effect_skill_heal_self_eighth
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 8
  condition:
    type: selfUseSkill
- id: effect_skill_heal_self_by_kongqi
  trigger: OnHit
  priority: 0
  apply:
    type: heal
    target:
      base: self
    value:
      type: dynamic
      selector: *mark_kongqichuliang_stack_template
  condition:
    type: selfUseSkill
- id: effect_skill_reduce_power_on_consecutive_hits_10_max_20
  tags: ['xingzhili']
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 2
          - type: multiply
            arg: -10
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_self_yuansuzhufu_increase_on_consecutive_hits_10_max_20
  tags: ['xingzhili']
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yuansuzhufu
    stack:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 2
          - type: multiply
            arg: 10
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: lastSkillUsedTimes
        evaluator:
          type: compare
          operator: '>'
          value: 1
- id: effect_skill_reduce_multihit_on_consecutive_hits_1_max_2
  tags: ['xingzhili']
  trigger: BeforeMultiHit
  priority: 0
  apply:
    type: addMultihitResult
    target:
      base: usingSkillContext
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 2
          - type: multiply
            arg: -1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: lastSkillUsedTimes
        evaluator:
          type: compare
          operator: '>'
          value: 1
- id: effect_skill_reduce_damage_on_consecutive_hits_10_percent_max_2
  tags: ['xingzhili']
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: lastSkillUsedTimes
          - type: add
            arg: -1
          - type: clampMax
            arg: 2
          - type: multiply
            arg: -10
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: dynamic
                arg: lastSkillUsedTimes
        evaluator:
          type: compare
          operator: '>'
          value: 1
- id: effect_skill_add_mark_xingzhili
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_xingzhili
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_shuiwenzhenji
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shuiwenzhenji
  condition:
    type: selfUseSkill
- id: effect_skill_consume_shuiwenzhenji
  trigger: OnHit
  priority: -50
  apply:
    type: consumeStacks
    target:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_shuiwenzhenji
    value: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_shuiwenzhenji
        evaluator:
          type: exist
- id: effect_skill_add_crit_rate_50_shuiwenzhenji
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target:
      base: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_shuiwenzhenji
        evaluator:
          type: exist
- id: effect_skill_add_crit_rate_70_shuiwenzhenji
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addCritRate
    target:
      base: usingSkillContext
    value: 70
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_shuiwenzhenji
        evaluator:
          type: exist
- id: effect_skill_sure_crit_shuiwenzhenji
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureCrit
    target:
      base: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: selfMarks
          chain:
            - type: whereAttr
              extractor:
                type: base
                arg: baseId
              evaluator:
                type: same
                value: mark_shuiwenzhenji
        evaluator:
          type: exist
- id: effect_skill_reduce_foe_atk_1_stage_30_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_foe_statstage_-1_template
    statType: atk
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_30_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 30
- id: effect_skill_add_mark_shuiwenpingzhang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shuiwenpingzhang
    stack:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 4
          - type: multiply
            arg:
              type: raw:number
              value: 1
              configId: multiply_value
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_foe_nishui_30_percent
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_nishui
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_probability_30_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 30
      - *condition_foe_not_water_element
- id: effect_skill_set_weather_yutian
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: battle
    mark:
      type: entity:baseMark
      value: mark_global_yutian
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_fantan
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_fantan
  condition:
    type: selfUseSkill
- id: effect_skill_power_2x_foe_shaoshang
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - &condition_foe_shaoshang_exist
        type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_shaoshang
        evaluator:
          type: exist
- id: effect_skill_add_mark_mianyibuliang
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_mianyibuliang
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_sure_hit_foe_shaoshang
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target:
      base: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_foe_shaoshang_exist
- id: effect_skill_sure_hit_foe_below_quarter_hp
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target:
      base: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_foe_below_quarter_hp
- id: effect_skill_add_mark_foe_xuanyun
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_xuanyun
  condition:
    type: selfUseSkill
- id: effect_skill_sure_hit_foe_xuanyun
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: setSureHit
    target:
      base: usingSkillContext
    priority: 0
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_xuanyun
        evaluator:
          type: exist
- id: effect_skill_add_mark_shoudaoshanghaijianshao_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shoudaoshanghaijianshao
    stack: 50
  condition:
    type: selfUseSkill
- id: effect_skill_add_mark_shanghaizengjia_75
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanghaizengjia
    stack: 75
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_teshushanghaizengjia_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_teshushanghaizengjia
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_wulishanghaizengjia_50
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_wulishanghaizengjia
    stack: 50
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_teshushanghaizengjia_35
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_teshushanghaizengjia
    stack: 35
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_wulishanghaizengjia_35
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_wulishanghaizengjia
    stack: 35
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_teshushanghaizengjia_100
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_teshushanghaizengjia
    stack: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_add_mark_wulishanghaizengjia_100
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_wulishanghaizengjia
    stack: 100
  condition:
    type: every
    conditions:
      - type: selfUseSkill
- id: effect_skill_raise_spa_20_percent
  trigger: BeforeHit
  priority: 0
  apply:
    <<: *apply_self_statstage_+1_template
    statType: spa
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - *condition_probability_20_percent_template
# 将当前的天气设为“炎热”
- id: effect_skill_set_weather_yanre
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: battle
    mark:
      type: entity:baseMark
      value: mark_global_yanre
  condition:
    type: selfUseSkill
# 技能命中时，给自己添加一个名为“焰火”的标记。
- id: effect_skill_add_mark_yanhuo
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_yanhuo
  condition:
    type: selfUseSkill
# 如果该效果的技能是本回合使用的第一个技能，则威力变为2倍。
- id: effect_skill_power_2x_if_first
  trigger: AfterUseSkillCheck
  priority: 1
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: isFirstSkillUsedThisTurn
  # 如果该效果的技能是第一回合使用的技能，则威力变为2倍。
- id: effect_skill_power_2x_if_first_round
  trigger: AfterUseSkillCheck
  priority: 1
  apply:
    type: amplifyPower
    target:
      base: usingSkillContext
    value: 2
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        evaluator:
          type: compare
          operator: '=='
          value: 1
        target:
          base: battle
          chain:
            - type: select
              arg:
                type: dynamic
                arg: currentTurn
# 技能命中时，给自己添加一个名为“火星”的标记。
- id: effect_skill_add_mark_huoxing
  trigger: OnHit
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_huoxing
  condition:
    type: selfUseSkill
# 如果目标身上有“烧伤”标记，则移除该标记，并对目标造成150点伤害。
- id: effect_skill_ignite_foe_mark_shaoshang
  trigger: OnHit
  priority: 0
  apply:
    - type: destroyMark
      target:
        base: foeMarks
        chain:
          - type: whereAttr
            extractor: baseId
            evaluator:
              type: same
              value: mark_shaoshang
    - type: dealDamage
      target: foe
      value: 150
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: foeMarks
          chain:
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_shaoshang
        evaluator:
          type: exist
