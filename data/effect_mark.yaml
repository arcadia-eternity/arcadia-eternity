# data/effect_mark.yaml
# yaml-language-server: $schema=../packages/schema/schema/effect.schema.json
# @metaType effect
# @version 1.0.0
- id: effect_mark_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_cant_evasion
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 1
- id: effect_mark_40probability_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 40
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_onDamage_recovery
  trigger: PostDamage
  priority: 0
  condition:
    type: selfBeDamaged
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_mark_onCritDamage_recovery
  trigger: OnCritPostDamage
  priority: 0
  condition:
    type: selfBeDamaged
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_mark_randomUseSkill
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSkill
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: selfAvailableSkills
        chain:
          - type: shuffled
          - type: limit
            arg: 1
- id: effect_mark_onDamage_over100_recovery
  trigger: PostDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
        evaluator:
          type: compare
          operator: '>='
          value: 100
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_mark_curse_add_random_status
  trigger: OnMarkDestroy
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: dynamic
      selector:
        base: dataMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: tags
            evaluator:
              type: contain
              tag: status
          - type: shuffled
          - type: limit
            arg: 1
- id: effect_mark_prevent_damage
  trigger: OnDamage
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: preventDamage
    target: damageContext
- id: effect_mark_confuse
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setActualTarget
    target: usingSkillContext
    newTarget:
      type: dynamic
      selector: self
- id: effect_mark_taunt
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: not
        condition:
          type: evaluate
          target:
            base: usingSkillContext
            chain:
              - type: selectPath
                arg: category
          evaluator:
            type: same
            value: Status
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_physical_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Physical
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_silence
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: not
        condition:
          type: evaluate
          target:
            base: usingSkillContext
            chain:
              - type: selectPath
                arg: category
          evaluator:
            type: same
            value: Status
  apply:
    type: setSureMiss
    priority: -1
    target: usingSkillContext
- id: effect_mark_turn_damage
  trigger: TurnEnd
  priority: 0
  condition:
    type: petIsActive
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 8
- id: effect_mark_reduce_accuracy_10
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: percent
    value: 0.9
- id: effect_mark_decrease_atk
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: atk
    modifierType: percent
    value: 0.75
- id: effect_mark_decrease_spa
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: spa
    modifierType: percent
    value: 0.75
- id: effect_mark_decrease_heal
  trigger: OnHeal
  priority: 0
  apply:
    type: addModified
    target:
      base: healContext
    percent: -15
    delta: 0
- id: effect_mark_damage_with_stack
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
- id: effect_mark_damage_with_stack_mutilipy_10
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 10
- id: effect_mark_reduce_accuracy_50
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: percent
    value: 0.5
- id: effect_mark_absorb_hp_to_foe
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    - type: dealDamage
      target: self
      value: &absorb_hp_value
        type: dynamic
        selector:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
            - type: divide
              arg: 8
            - type: clampMax
              arg:
                type: dynamic
                selector:
                  base: self
                  chain:
                    - type: select
                      arg:
                        type: base
                        arg: maxHp
                    - type: divide
                      arg: 8
    - type: heal
      target: foe
      value: *absorb_hp_value
- id: effect_mark_posion_damage
  trigger: TurnEnd
  priority: 0
  condition:
    type: petIsActive
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 10
- id: effect_mark_reduce_speed_ruodian
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: spe
    modifierType: delta
    observableValue:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_ruodianjihao
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg: -25
- id: effect_mark_increase_damage_taken
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target:
      base: damageContext
    delta:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
    percent: 0
- id: effect_mark_increase_damage_taken_50
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target:
      base: damageContext
    delta: 50
    percent: 0
- id: effect_mark_reduce_damage_taken_once
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: addModified
      target:
        base: damageContext
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg: -1
      percent: 0
    - type: destroyMark
      target: mark
- id: effect_mark_increase_damage_taken_once
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: addModified
      target:
        base: damageContext
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
      percent: 0
    - type: destroyMark
      target: mark
- id: effect_mark_self_damage_on_expire
  trigger: OnMarkDurationEnd
  priority: 0
  apply:
    type: dealDamage
    target:
      base: self
    value: 300
- id: effect_mark_amplify_non_yanggong
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: notSame
          value: skill_yanggong
  consumesStacks: 1
- id: effect_mark_reduce_accuracy_15
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: percent
    value: 0.85
- id: effect_mark_amplify_next_damage_skill_power
  trigger: AfterUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  consumesStacks: 1
- id: effect_mark_set_health_to_1_on_damage
  trigger: PostDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '<='
          value: 0
  apply:
    type: setValue
    target:
      base: self
      chain:
        - type: selectProp
          arg: currentHp
    value: 1
  consumesStacks: 1
- id: effect_zhongzinengliang_damage_reduction
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -20
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
  consumesStacks: 1
- id: effect_mark_heal_self_1_8_turnEnd
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    - type: heal
      target: self
      value:
        type: dynamic
        selector:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: maxHp
            - type: divide
              arg: 8
- id: effect_mark_add_power_stack
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
  condition:
    type: selfUseSkill
- id: effect_mark_increase_accuracy_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
- id: effect_mark_evade
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: foeUseSkill
  apply:
    type: setSureMiss
    target: usingSkillContext
    priority: -1
- id: effect_mark_evade_with_stack
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: foeUseSkill
  apply:
    type: setSureMiss
    target: usingSkillContext
    priority: -1
  consumesStacks: 1
- id: effect_mark_mihuo_reduce_damage
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent: 0
      delta: -50
- id: effect_mark_mihuo_damage_self
  trigger: PostDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    - type: dealDamage
      target: self
      value:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
  consumesStacks: 1
- id: effect_mark_reduce_accuracy_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg: -1
- id: effect_mark_bizhong
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 99
  consumesStacks: 1
- id: effect_mark_reduce_damage_15_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent: -15
      delta: 0
- id: effect_mark_reduce_power_special
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 0.5
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Special
- id: effect_mark_absorb_damage_to_heal
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: preventDamage
      target: damageContext
    - type: heal
      target: self
      value:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
            - type: divide
              arg:
                type: conditional
                trueValue: 2
                falseValue: 4
                condition:
                  type: evaluate
                  target:
                    base: foeMarks
                    chain:
                      - type: whereAttr
                        extractor:
                          type: base
                          arg: baseId
                        evaluator:
                          type: same
                          value: mark_kuihuazhongzi
                  evaluator:
                    type: exist
  consumesStacks: 1
- id: effect_mark_reduce_special_damage_with_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: -1
    delta: 0
- id: effect_mark_reduce_physical_damage_with_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Physical
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: -1
    delta: 0
- id: effect_mark_add_weight_stack_x50
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: weight
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg: 50
- id: effect_mark_reduce_damage_with_weight
  trigger: OnBeforeCalculateDamage
  consumesStacks: 1
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    delta:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.weight
    percent: 0
- id: effect_mark_onDestroy_add_mark_tizhongjiangdi
  trigger: OnMarkDestroy
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_tizhongjiangdi
- id: effect_mark_reflect_damage
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: preventDamage
      target: damageContext
    - type: dealDamage
      target: foe
      value:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
            - type: multiply
              arg: 1.5
  consumesStacks: 1
- id: effect_mark_immune_stage_debuff
  trigger: OnBeforeAddMark
  priority: 0
  apply:
    type: disableContext
    target: addMarkContext
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: statStageChange
        check: down
- id: effect_mark_double_stage_debuff
  trigger: OnBeforeAddMark
  priority: 0
  apply:
    type: setStatLevelMarkLevel
    target: addMarkContext
    value:
      type: dynamic
      selector:
        base: addMarkContext
        chain:
          - type: select
            arg:
              type: dynamic
              arg: baseMark
          - type: asStatLevelMark
          - type: selectPath
            arg: initialLevel
          - type: multiply
            arg: 2
  condition:
    type: every
    conditions:
      - type: selfAddMark
      - type: statStageChange
        check: down
- id: effect_mark_when_attacked_add_foe_mark_zhongdu_50_percent
  trigger: PostDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - &condition_probability_50_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 50
  priority: 0
  apply:
    type: addMark
    target: foe
    mark:
      type: entity:baseMark
      value: mark_zhongdu
- id: effect_mark_disabled_xingzhili_effect
  trigger: BeforeEffect
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: effectContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: effect
            - type: select
              arg:
                type: base
                arg: tags
            - type: flat
        evaluator:
          type: contain
          tag: xingzhili
  apply:
    type: disableContext
    target: effectContext
- id: effect_mark_onDestroy_add_mark_shanghaizengjia
  trigger: OnMarkDestroy
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanghaizengjia
- id: effect_mark_reflect_damage_1_4
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: dealDamage
      target: foe
      value:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
            - type: divide
              arg: 4
- id: effect_mark_add_crit_rate_5_percent
  trigger: AfterUseSkillCheck
  condition:
    type: checkSelf
  priority: 0
  apply:
    - type: addCritRate
      target: usingSkillContext
      value: 5
- id: effect_mark_immune_status
  trigger: OnBeforeAddMark
  priority: 0
  apply:
    type: disableContext
    target: addMarkContext
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark
            - type: select
              arg:
                type: base
                arg: tags
            - type: flat
        evaluator:
          type: contain
          tag: status
- id: effect_mark_reduce_speed_50
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: spe
    modifierType: delta
    value: -50
- id: effect_mark_amplify_next_physical_damage_with_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Physical
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
      delta: 0
    - type: destroyMark
      target:
        base: mark
# 印记的拥有者使用下一个特攻技能时，造成的伤害增加基于印记层数的百分比
- id: effect_mark_amplify_next_special_damage_with_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
      delta: 0
    - type: destroyMark
      target:
        base: mark
# 印记的拥有者使用火系技能时，技能的威力增幅70%
- id: effect_mark_amplify_fire_skill_70
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 1.7
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg: element
        evaluator:
          type: same
          value: Fire
# 使得下一个“焰火”印记施加时，他的持续时间翻倍
- id: effect_mark_double_mark_yanhuo_duration
  trigger: OnBeforeAddMark
  priority: 0
  consumesStacks: 1
  apply:
    type: setMarkDuration
    target: addMarkContext
    value:
      type: dynamic
      selector:
        base: addMarkContext
        chain:
          - type: select
            arg:
              type: base
              arg: duration
          - type: multiply
            arg: 2
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_yanhuo
# 印记的拥有者的技能的威力增幅10%
- id: effect_mark_amplify_skill_10
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 1.1
  condition:
    type: every
    conditions:
      - type: checkSelf
# 印记的持有者造成伤害时，伤害减少30*层数
- id: effect_mark_reduce_damage_30_percent_xstack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg: -30
      percent: 0
# 印记的持有者受到伤害时，伤害增加30*层数
- id: effect_mark_increase_taken_damage_30_xstack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg: 30
      percent: 0
# 1/16恢复：回合结束时恢复自身最大体力的1/16
- id: effect_mark_heal_self_1_16_turnEnd
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    - type: heal
      target: self
      value:
        type: dynamic
        selector:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: maxHp
            - type: divide
              arg: 16
# 爱的名义：使自身所有技能必中
- id: effect_mark_skill_sure_hit
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 1
# 誓言之约：结束时恢复自身所有体力
- id: effect_mark_heal_all_hp_on_expire
  trigger: OnMarkDurationEnd
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
# 心灵制约：每次获得怒气不超过y点
- id: effect_mark_limit_rage_gain
  trigger: OnRageGain
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setValue
    target:
      base: rageContext
      chain:
        - type: selectProp
          arg: rageChangeResult
    value:
      type: dynamic
      selector:
        base: rageContext
        chain:
          - type: selectPath
            arg: rageChangeResult
          - type: clampMax
            arg:
              type: dynamic
              selector:
                base: mark
                chain:
                  - type: select
                    arg:
                      type: base
                      arg: stack
# 静养生息：回合结束时增加10点怒气
- id: effect_mark_add_rage_10_turnEnd
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    type: addRage
    target: self
    value: 10
# 反弹印记：反弹受到伤害的25%
- id: effect_mark_fantan_reflect_damage
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: dealDamage
    target: foe
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: multiply
            arg: 0.25
# 拳击系列状态效果
# 准备动作：下一次攻击技能造成伤害增加50%且必中
- id: effect_mark_next_attack_damage_increase_50_percent_sure_hit
  trigger: AfterUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
  apply:
    - type: amplifyPower
      target: usingSkillContext
      value: 1.5
    - type: setSureHit
      target: usingSkillContext
      priority: 1
  consumesStacks: 1
# 灵巧：闪避特攻，受到物攻伤害2倍
- id: effect_mark_evasion_special_attacks
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: foeUseSkill
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Special
  apply:
    type: setSureMiss
    target: usingSkillContext
    priority: -1
- id: effect_mark_double_physical_damage_taken
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Physical
  priority: 0
  apply:
    type: addModified
    target:
      base: damageContext
    delta: 0
    percent: 100
