# data/effect_mark.yaml
# yaml-language-server: $schema=../packages/schema/schema/effect.schema.json
# @metaType effect
# @version 1.0.0
- id: effect_mark_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_cant_evasion
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 1
- id: effect_mark_40probability_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 40
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_onDamage_recovery
  trigger: PostDamage
  priority: 0
  condition:
    type: selfBeDamaged
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_mark_onCritDamage_recovery
  trigger: OnCritPostDamage
  priority: 0
  condition:
    type: selfBeDamaged
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_mark_randomUseSkill
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSkill
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: selfAvailableSkills
        chain:
          - type: shuffled
          - type: limit
            arg: 1
- id: effect_mark_onDamage_over100_recovery
  trigger: PostDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
        evaluator:
          type: compare
          operator: '>='
          value: 100
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_mark_curse_add_random_status
  trigger: OnMarkDestroy
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: dynamic
      selector:
        base: dataMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: tags
            evaluator:
              type: contain
              tag: status
          - type: shuffled
          - type: limit
            arg: 1
- id: effect_mark_prevent_damage
  trigger: OnDamage
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: preventDamage
    target: damageContext
- id: effect_mark_confuse
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setActualTarget
    target: usingSkillContext
    newTarget:
      type: dynamic
      selector: self
- id: effect_mark_taunt
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: not
        condition:
          type: evaluate
          target:
            base: usingSkillContext
            chain:
              - type: selectPath
                arg: category
          evaluator:
            type: same
            value: Status
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_physical_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Physical
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_silence
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: not
        condition:
          type: evaluate
          target:
            base: usingSkillContext
            chain:
              - type: selectPath
                arg: category
          evaluator:
            type: same
            value: Status
  apply:
    type: setSureMiss
    priority: 1
    target: usingSkillContext
- id: effect_mark_turn_damage
  trigger: TurnEnd
  priority: 0
  condition:
    type: petIsActive
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 8
- id: effect_mark_reduce_accuracy_10
  trigger: OnMarkCreate
  priority: 0
  apply:
    type: modifyStat
    target:
      base: updateStatContext
    statType: accuracy
    percent: -10
- id: effect_mark_decrease_atk
  trigger: OnMarkCreate
  priority: 0
  apply:
    type: modifyStat
    target:
      base: updateStatContext
    statType: atk
    percent: -25
- id: effect_mark_decrease_spa
  trigger: OnMarkCreate
  priority: 0
  apply:
    type: modifyStat
    target:
      base: updateStatContext
    statType: spa
    percent: -25
- id: effect_mark_decrease_heal
  trigger: OnHeal
  priority: 0
  apply:
    type: addModified
    target:
      base: healContext
    percent: -15
    delta: 0
- id: effect_mark_damage_with_stack
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
- id: effect_mark_reduce_accuracy_50
  trigger: OnMarkCreate
  priority: 0
  apply:
    type: modifyStat
    target:
      base: updateStatContext
    statType: accuracy
    percent: -50
- id: effect_mark_absorb_hp_to_foe
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    - type: dealDamage
      target: self
      value: &absorb_hp_value
        type: dynamic
        selector:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
            - type: divide
              arg: 8
            - type: clampMax
              arg:
                type: dynamic
                selector:
                  base: self
                  chain:
                    - type: select
                      arg:
                        type: base
                        arg: maxHp
                    - type: divide
                      arg: 8
    - type: heal
      target: foe
      value: *absorb_hp_value
- id: effect_mark_posion_damage
  trigger: TurnEnd
  priority: 0
  condition:
    type: petIsActive
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 10
- id: effect_mark_reduce_speed_ruodian
  trigger: OnUpdateStat
  priority: 0
  apply:
    type: modifyStat
    target:
      base: updateStatContext
    statType: spe
    delta:
      type: dynamic
      selector:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_ruodianjihao
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: -50
    percent: 0
- id: effect_mark_increase_damage_taken
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target:
      base: damageContext
    delta: 0
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
- id: effect_mark_self_damage_on_expire
  trigger: OnMarkDurationEnd
  priority: 0
  apply:
    type: dealDamage
    target:
      base: self
    value: 300
- id: effect_mark_amplify_non_yanggong
  trigger: BeforeUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: notSame
          value: skill_yanggong
  consumesStacks: 1
- id: effect_mark_reduce_accuracy_15
  trigger: OnMarkCreate
  priority: 0
  apply:
    type: modifyStat
    target:
      base: updateStatContext
    statType: accuracy
    percent: -10
- id: effect_mark_amplify_next_damage_skill_power
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  consumesStacks: 1
- id: effect_mark_set_health_to_1_on_damage
  trigger: PostDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '<='
          value: 0
  apply:
    type: setValue
    target:
      base: self
      chain:
        - type: selectProp
          arg: currentHp
    value: 1
  consumesStacks: 1
- id: effect_zhongzinengliang_damage_reduction
  trigger: OnDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -20
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
  consumesStacks: 1
- id: effect_mark_heal_self_1_8_turnEnd
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    - type: heal
      target: self
      value:
        type: dynamic
        selector:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: maxHp
            - type: divide
              arg: 8
