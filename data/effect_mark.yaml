# data/effect_mark.yaml
# yaml-language-server: $schema=../packages/schema/schema/effect.schema.json
# @metaType effect
# @version 1.0.0
- id: effect_mark_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_cant_evasion
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 1
- id: effect_mark_40probability_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 40
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_onDamage_recovery
  trigger: PostDamage
  priority: 0
  condition:
    type: selfBeDamaged
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_mark_onCritDamage_recovery
  trigger: OnCritPostDamage
  priority: 0
  condition:
    type: selfBeDamaged
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_mark_randomUseSkill
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSkill
    target: usingSkillContext
    updateConfig: true
    value:
      type: dynamic
      selector:
        base: selfAvailableSkills
        chain:
          - type: shuffled
          - type: limit
            arg: 1
- id: effect_mark_onDamage_over100_recovery
  trigger: PostDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
        evaluator:
          type: compare
          operator: '>='
          value: 100
  apply:
    type: destroyMark
    target:
      base: mark
- id: effect_mark_curse_add_random_status
  trigger: OnMarkDestroy
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: dynamic
      selector:
        base: dataMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: tags
            evaluator:
              type: contain
              tag: status
          - type: shuffled
          - type: limit
            arg: 1
- id: effect_mark_prevent_damage
  trigger: OnBeforeCalculateDamage
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: preventDamage
    target: damageContext
- id: effect_mark_confuse
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setActualTarget
    target: usingSkillContext
    newTarget:
      type: dynamic
      selector: self
- id: effect_mark_taunt
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Status
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_physical_stun
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Physical
  apply:
    type: stun
    target: usingSkillContext
- id: effect_mark_silence
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: not
        condition:
          type: evaluate
          target:
            base: usingSkillContext
            chain:
              - type: selectPath
                arg: category
          evaluator:
            type: same
            value: Status
  apply:
    type: setSureMiss
    priority: -1
    target: usingSkillContext
- id: effect_mark_turn_damage
  trigger: TurnEnd
  priority: 0
  condition:
    type: petIsActive
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 8
- id: effect_mark_reduce_accuracy_10
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: percent
    value: -10
- id: effect_mark_decrease_atk
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: atk
    modifierType: percent
    value: -25
- id: effect_mark_decrease_spa
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: spa
    modifierType: percent
    value: -25
- id: effect_mark_decrease_heal
  trigger: OnBeforeHeal
  priority: 0
  apply:
    type: addModified
    target:
      base: healContext
    percent: -15
    delta: 0
- id: effect_mark_damage_with_stack
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
- id: effect_mark_damage_with_stack_mutilipy_10
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 10
- id: effect_mark_reduce_accuracy_50
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: delta
    value: -50
- id: effect_mark_absorb_hp_to_opponent
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    - type: dealDamage
      target: self
      value: &absorb_hp_value
        type: dynamic
        selector:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
            - type: divide
              arg: 8
            - type: clampMax
              arg:
                type: dynamic
                selector:
                  base: self
                  chain:
                    - type: select
                      arg:
                        type: base
                        arg: maxHp
                    - type: divide
                      arg: 8
    - type: heal
      target: opponent
      value: *absorb_hp_value
- id: effect_mark_posion_damage
  trigger: TurnEnd
  priority: 0
  condition:
    type: petIsActive
  apply:
    type: dealDamage
    target:
      base: self
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 10
- id: effect_mark_reduce_speed_ruodian
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: spe
    modifierType: delta
    observableValue:
      base: selfMarks
      chain:
        - type: whereAttr
          extractor:
            type: base
            arg: baseId
          evaluator:
            type: same
            value: mark_ruodianjihao
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg: -25
- id: effect_mark_increase_damage_taken
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target:
      base: damageContext
    delta: 0
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
- id: effect_mark_increase_damage_taken_50
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target:
      base: damageContext
    percent: 50
    delta: 0
- id: effect_mark_reduce_damage_taken_once
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: addModified
      target:
        base: damageContext
      percent:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg: -1
      delta: 0
    - type: destroyMark
      target: mark
- id: effect_mark_increase_damage_taken_once
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: addModified
      target:
        base: damageContext
      percent:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
      delta: 0
    - type: destroyMark
      target: mark
- id: effect_mark_self_damage_on_expire
  trigger: OnMarkDurationEnd
  priority: 0
  apply:
    type: dealDamage
    target:
      base: self
    value: 300
- id: effect_mark_amplify_non_yanggong
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value: 50
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: notSame
          value: skill_yanggong
  consumesStacks: 1
- id: effect_mark_reduce_accuracy_15
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: delta
    value: -15
- id: effect_mark_amplify_next_damage_skill_power
  trigger: AfterUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 2
  consumesStacks: 1
- id: effect_mark_amplify_next_damage_skill_power_with_stack
  trigger: AfterUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
  apply:
    - type: amplifyPower
      target: usingSkillContext
      value:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg: 0.01
            - type: add
              arg: 1
    - type: destroyMark
      target: mark
- id: effect_mark_set_health_to_1_on_damage
  trigger: PostDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '<='
          value: 0
  apply:
    type: setValue
    target:
      base: self
      chain:
        - type: selectProp
          arg: currentHp
    value: 1
  consumesStacks: 1
- id: effect_zhongzinengliang_damage_reduction
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -20
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
  consumesStacks: 1
- id: effect_mark_heal_self_1_8_turnEnd
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    - type: heal
      target: self
      value:
        type: dynamic
        selector:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: maxHp
            - type: divide
              arg: 8
- id: effect_mark_add_power_stack
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: addPower
    target: usingSkillContext
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
  condition:
    type: selfUseSkill
- id: effect_mark_increase_accuracy_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
# 闪避来自敌方的技能
- id: effect_mark_evade
  trigger: AfterUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: opponentUseSkill
      - type: selfBeSkillTarget
  apply:
    type: setSureMiss
    target: usingSkillContext
    priority: -1
# 闪避来自敌方的技能，消耗印记层数
- id: effect_mark_evade_with_stack
  trigger: AfterUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: opponentUseSkill
      - type: selfBeSkillTarget
  apply:
    type: setSureMiss
    target: usingSkillContext
    priority: -1
  consumesStacks: 1
- id: effect_mark_mihuo_reduce_damage
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent: 0
      delta: -50
- id: effect_mark_mihuo_damage_self
  trigger: PostDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    - type: dealDamage
      target: self
      value:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
  consumesStacks: 1
- id: effect_mark_reduce_accuracy_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg: -1
- id: effect_mark_bizhong
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 99
- id: effect_mark_reduce_damage_15_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent: -15
      delta: 0
- id: effect_mark_reduce_power_special
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 0.5
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Special
- id: effect_mark_absorb_damage_to_heal
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: preventDamage
      target: damageContext
    - type: heal
      target: self
      value:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
            - type: divide
              arg:
                type: conditional
                trueValue: 2
                falseValue: 4
                condition:
                  type: evaluate
                  target:
                    base: opponentMarks
                    chain:
                      - type: whereAttr
                        extractor:
                          type: base
                          arg: baseId
                        evaluator:
                          type: same
                          value: mark_kuihuazhongzi
                  evaluator:
                    type: exist
  consumesStacks: 1
- id: effect_mark_reduce_special_damage_with_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: -1
    delta: 0
- id: effect_mark_reduce_physical_damage_with_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Physical
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: -1
    delta: 0
- id: effect_mark_add_weight_stack_x50
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: weight
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg: 50
- id: effect_mark_reduce_damage_with_weight
  trigger: OnBeforeCalculateDamage
  consumesStacks: 1
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    delta:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: dynamic
              arg: stat.weight
    percent: 0
- id: effect_mark_onDestroy_add_mark_tizhongjiangdi
  trigger: OnMarkDestroy
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_tizhongjiangdi
- id: effect_mark_reflect_damage
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: preventDamage
      target: damageContext
    - type: dealDamage
      target: opponent
      value:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
            - type: multiply
              arg: 1.5
  consumesStacks: 1
- id: effect_mark_immune_stage_debuff
  trigger: OnBeforeAddMark
  priority: 0
  apply:
    type: disableContext
    target: addMarkContext
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: statStageChange
        check: down
- id: effect_mark_double_stage_debuff
  trigger: OnBeforeAddMark
  priority: 0
  apply:
    type: setStatLevelMarkLevel
    target: addMarkContext
    value:
      type: dynamic
      selector:
        base: addMarkContext
        chain:
          - type: select
            arg:
              type: dynamic
              arg: baseMark
          - type: asStatLevelMark
          - type: selectPath
            arg: initialLevel
          - type: multiply
            arg: 2
  condition:
    type: every
    conditions:
      - type: selfAddMark
      - type: statStageChange
        check: down
- id: effect_mark_when_attacked_add_opponent_mark_zhongdu_50_percent
  trigger: PostDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - &condition_probability_50_percent_template
        type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 50
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_zhongdu
- id: effect_mark_disabled_xingzhili_effect
  trigger: BeforeEffect
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: effectContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: effect
            - type: select
              arg:
                type: base
                arg: tags
            - type: flat
        evaluator:
          type: contain
          tag: xingzhili
  apply:
    type: disableContext
    target: effectContext
- id: effect_mark_onDestroy_add_mark_shanghaizengjia
  trigger: OnMarkDestroy
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_shanghaizengjia
    stack: 100
- id: effect_mark_reflect_damage_1_4
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: dealDamage
      target: opponent
      value:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
            - type: divide
              arg: 4
- id: effect_mark_add_crit_rate_5_percent
  trigger: AfterUseSkillCheck
  condition:
    type: checkSelf
  priority: 0
  apply:
    - type: addCritRate
      target: usingSkillContext
      value: 5
- id: effect_mark_immune_status
  trigger: OnBeforeAddMark
  priority: 0
  apply:
    type: disableContext
    target: addMarkContext
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark
            - type: select
              arg:
                type: base
                arg: tags
            - type: flat
        evaluator:
          type: contain
          tag: status
# 免疫异常效果
- id: effect_mark_immune_exceptional
  trigger: OnBeforeAddMark
  priority: 0
  apply:
    type: disableContext
    target: addMarkContext
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark
            - type: select
              arg:
                type: base
                arg: tags
            - type: flat
        evaluator:
          type: contain
          tag: exceptional
- id: effect_mark_reduce_speed_50
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target:
      base: self
    stat: spe
    modifierType: delta
    value: -50
- id: effect_mark_amplify_next_physical_damage_with_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Physical
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
      delta: 0
    - type: destroyMark
      target: mark

# 印记的拥有者使用下一个特攻技能时，造成的伤害增加基于印记层数的百分比
- id: effect_mark_amplify_next_special_damage_with_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
      delta: 0
    - type: destroyMark
      target: mark

# 印记的拥有者使用火系技能时，技能的威力增幅70%
- id: effect_mark_amplify_fire_skill_70
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 1.7
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg: element
        evaluator:
          type: same
          value: Fire
# 使得下一个“焰火”印记施加时，他的持续时间翻倍
- id: effect_mark_double_mark_yanhuo_duration
  trigger: OnBeforeAddMark
  priority: 0
  consumesStacks: 1
  apply:
    type: setMarkDuration
    target: addMarkContext
    value:
      type: dynamic
      selector:
        base: addMarkContext
        chain:
          - type: select
            arg:
              type: base
              arg: duration
          - type: multiply
            arg: 2
  condition:
    type: every
    conditions:
      - type: selfBeAddMark
      - type: evaluate
        target:
          base: addMarkContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: baseMark.id
        evaluator:
          type: same
          value: mark_yanhuo
# 印记的拥有者的技能的威力增幅10%
- id: effect_mark_amplify_skill_10
  trigger: AfterUseSkillCheck
  priority: 0
  apply:
    type: amplifyPower
    target: usingSkillContext
    value: 1.1
  condition:
    type: every
    conditions:
      - type: checkSelf
# 印记的持有者造成伤害时，伤害减少30*层数
- id: effect_mark_reduce_damage_30_percent_xstack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg: -30
      percent: 0
# 印记的持有者受到伤害时，伤害增加30*层数
- id: effect_mark_increase_taken_damage_30_xstack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg: 30
      percent: 0
# 1/16恢复：回合结束时恢复自身最大体力的1/16
- id: effect_mark_heal_self_1_16_turnEnd
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    - type: heal
      target: self
      value:
        type: dynamic
        selector:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: maxHp
            - type: divide
              arg: 16
# 爱的名义：使自身所有技能必中
- id: effect_mark_skill_sure_hit
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setSureHit
    target: usingSkillContext
    priority: 1
# 誓言之约：结束时恢复自身所有体力
- id: effect_mark_heal_all_hp_on_expire
  trigger: OnMarkDurationEnd
  priority: 0
  apply:
    type: heal
    target: self
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
# 心灵制约：每次获得怒气不超过y点
- id: effect_mark_limit_rage_gain
  trigger: OnRageGain
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: setValue
    target:
      base: rageContext
      chain:
        - type: selectProp
          arg: rageChangeResult
    value:
      type: dynamic
      selector:
        base: rageContext
        chain:
          - type: selectPath
            arg: rageChangeResult
          - type: clampMax
            arg:
              type: dynamic
              selector:
                base: mark
                chain:
                  - type: select
                    arg:
                      type: base
                      arg: stack
# 静养生息：回合结束时增加10点怒气
- id: effect_mark_add_rage_10_turnEnd
  trigger: TurnEnd
  condition:
    type: petIsActive
  priority: 0
  apply:
    type: addRage
    target: self
    value: 10
# 反弹印记：反弹受到伤害的25%
- id: effect_mark_fantan_reflect_damage
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: dealDamage
    target: opponent
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: multiply
            arg: 0.25
# 准备动作：下一次攻击技能造成伤害增加50%且必中
- id: effect_mark_next_attack_damage_increase_50_percent_sure_hit
  trigger: AfterUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
  apply:
    - type: amplifyPower
      target: usingSkillContext
      value: 1.5
    - type: setSureHit
      target: usingSkillContext
      priority: 1
  consumesStacks: 1
# 灵巧：闪避特攻，受到物攻伤害2倍
- id: effect_mark_evasion_special_attacks
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: opponentUseSkill
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Special
  apply:
    type: setSureMiss
    target: usingSkillContext
    priority: -1
- id: effect_mark_double_physical_damage_taken
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Physical
  priority: 0
  apply:
    type: addModified
    target:
      base: damageContext
    delta: 0
    percent: 100
# 麦麦金针：造成特攻伤害降低20%
- id: effect_mark_reduce_spa_damage_20_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -20
    delta: 0
# 金针外衣：受到物攻时反弹30点伤害
- id: effect_mark_reflect_physical_damage_30
  trigger: OnDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Physical
  priority: 0
  apply:
    type: dealDamage
    target: opponent
    value: 30
# 冲撞刺针：造成物攻伤害降低25%
- id: effect_mark_reduce_atk_damage_25_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Physical
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -25
    delta: 0
# 麦迪金针：受到伤害增加75%
- id: effect_mark_increase_damage_taken_75_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 75
    delta: 0
# 金针粉末：造成伤害降低50%
- id: effect_mark_reduce_damage_50_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -50
    delta: 0
# 虚空体质相关效果

# 金针恢复：每回合恢复50点体力
- id: effect_mark_heal_self_50_turn_end
  trigger: TurnEnd
  priority: 0
  apply:
    type: heal
    target: self
    value: 50
  condition:
    type: petIsActive
# 替换上场标记：使用技能后自动移除
- id: effect_mark_remove_after_use_skill
  trigger: OnHit
  priority: 0
  apply:
    type: destroyMark
    target:
      base: mark
  condition:
    type: selfUseSkill
- id: effect_mark_xukongtizhi_evasion
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: evasion
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
        - type: clampMax
          arg: 100
# 虚空体质：成功闪避则消耗所有虚空体质并使自身获得虚空感应
- id: effect_mark_xukongtizhi_consume_on_evasion
  trigger: OnMiss
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeSkillTarget
      - type: selfHasMark
        baseId: mark_xukongtizhi
  apply:
    - type: addMark
      target: self
      mark:
        type: entity:baseMark
        value: mark_xukongganying
    - type: destroyMark
      target: mark

# 伊特领域：提高自身队伍10%暴击率
- id: effect_mark_increase_self_crit_rate
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target: selfTeam
    stat: critRate
    modifierType: delta
    value: 10

# 气流涌动：非必杀的攻击技能怒气消耗2倍 伤害2倍
- id: effect_mark_double_rage_cost_double_damage_non_climax
  trigger: OnMarkCreated
  priority: 0
  apply:
    - type: addSkillAttributeModifier
      target:
        base: selfSkills
        chain:
          - type: whereAttr
            extractor:
              type: dynamic
              arg: category
            evaluator:
              type: notSame
              value: Climax
          - type: whereAttr
            extractor:
              type: dynamic
              arg: category
            evaluator:
              type: notSame
              value: Status
      attribute: rage
      modifierType: percent
      value: 100
    - type: addSkillAttributeModifier
      target:
        base: selfSkills
        chain:
          - type: whereAttr
            extractor:
              type: dynamic
              arg: category
            evaluator:
              type: notSame
              value: Climax
          - type: whereAttr
            extractor:
              type: dynamic
              arg: category
            evaluator:
              type: notSame
              value: Status
      attribute: power
      modifierType: percent
      value: 100

# 气流涌动：每次使用非必杀非状态技能结束时消耗一层
- id: effect_mark_consume_stack_on_skill_use
  trigger: SkillUseEnd
  priority: 0
  consumesStacks: 1
  apply:
    type: TODO
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Climax
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status

# 风之领域：增加自身本系技能伤害10%
- id: effect_mark_increase_self_element_damage_10_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: element
        evaluator:
          type: same
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: selectPath
                  arg: element
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 10
    delta: 0

# 风暴领域/电磁领域：增加自身本系技能伤害20%
- id: effect_mark_increase_self_element_damage_20_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: element
        evaluator:
          type: same
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: selectPath
                  arg: element
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 20
    delta: 0

# 电荷：每个暴击率增加20%
- id: effect_mark_increase_crit_rate_20_percent_per_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target: self
    stat: critRate
    modifierType: delta
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: selectAttribute$
            arg: stack
          - type: multiply
            arg:
              type: raw:number
              configId: crit_rate_increase_per_stack
              value: 20

# 电之领域：使自身暴击率和闪避率增加10%
- id: effect_mark_increase_crit_rate_10_percent
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target: self
    stat: critRate
    modifierType: delta
    value: 10

- id: effect_mark_increase_evasion_10_percent
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addAttributeModifier
    target: self
    stat: evasion
    modifierType: delta
    value: 10

# 冰之领域：受到伤害降低10% 造成伤害增加10%
- id: effect_mark_reduce_damage_taken_10_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -10
    delta: 0

- id: effect_mark_increase_damage_dealt_10_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 10
    delta: 0

# 冰霜领域：受到伤害降低20% 造成伤害增加20%
- id: effect_mark_reduce_damage_taken_20_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -20
    delta: 0

- id: effect_mark_increase_damage_dealt_20_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 20
    delta: 0

# 闪电外衣: 受到特攻伤害降低30点 受到物攻50%使对手麻痹
- id: effect_mark_reduce_special_damage_30
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta: -30

- id: effect_mark_paralyze_on_physical_50_percent
  trigger: OnDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Physical
      - type: evaluate
        target: self
        evaluator:
          type: probability
          percent: 50
  priority: 0
  apply:
    type: addMark
    target: opponent
    mark:
      type: entity:baseMark
      value: mark_mabi

# 冰凝之气：受到伤害增加50%，如果冰冻则效果翻倍（100%）
- id: effect_increase_damage_taken_once_50_percent_double_effect_if_frozen
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: conditional
    condition:
      type: evaluate
      target:
        base: selfMarks
        chain:
          - type: whereAttr
            extractor:
              type: base
              arg: baseId
            evaluator:
              type: same
              value: mark_bingdong
      evaluator:
        type: exist
    trueOperator:
      # 如果冰冻，伤害增加100%
      type: addModified
      target:
        base: damageContext
      percent: 100
      delta: 0
    falseOperator:
      # 如果未冰冻，伤害增加50%
      type: addModified
      target:
        base: damageContext
      percent: 50
      delta: 0
  consumesStacks: 1

# 冰霜之星：造成伤害时减少等于层数的伤害
- id: effect_mark_reduce_deal_damage_once_per_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg: -1
      percent: 0
    - type: destroyMark
      target: mark

# 伤害阻挡：当伤害值低于等于60时，把实际的伤害值置0
- id: effect_block_damage_under_60
  trigger: OnDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
        evaluator:
          type: compare
          operator: '<='
          value: 60
  priority: 0
  apply:
    type: preventDamage
    target: damageContext

# 暗影之光：威力低于100的攻击技能威力变为100
- id: effect_mark_anyingzhiguang_power_min_100
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addSkillAttributeModifier
    target:
      base: selfSkills
      chain:
        - type: whereAttr
          extractor:
            type: dynamic
            arg: category
          evaluator:
            type: notSame
            value: Status
        - type: whereAttr
          extractor:
            type: dynamic
            arg: power
          evaluator:
            type: compare
            operator: '<'
            value: 100
    attribute: power
    modifierType: override
    value: 100

# 暗影之光：每次使用攻击技能命中时消耗一层
- id: effect_mark_anyingzhiguang_consume_stack_on_skill_use
  trigger: OnHit
  priority: 0
  consumesStacks: 1
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
  apply:
    type: TODO

# 光辉之影：为所有技能添加优先度-1的modifier
- id: effect_mark_priority_reduce_1
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addSkillAttributeModifier
    target:
      base: selfSkills
    attribute: priority
    modifierType: delta
    value: -1

# 使自身受击怒气增加10%
- id: effect_mark_increase_rage_on_damage_10_percent
  trigger: OnRageGain
  priority: 0
  condition:
    type: selfBeDamaged
  apply:
    type: addModified
    target: rageContext
    percent: 10
    delta: 0

# 使自身受击怒气增加20%
- id: effect_mark_increase_rage_on_damage_20_percent
  trigger: OnRageGain
  priority: 0
  condition:
    type: selfBeDamaged
  apply:
    type: addModified
    target: rageContext
    percent: 20
    delta: 0

# 使自身治疗效果增加20%
- id: effect_mark_increase_heal_20_percent
  trigger: OnBeforeHeal
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: addModified
    target: healContext
    percent: 20
    delta: 0

# 使自身治疗效果增加40%
- id: effect_mark_increase_heal_40_percent
  trigger: OnBeforeHeal
  priority: 0
  condition:
    type: checkSelf
  apply:
    type: addModified
    target: healContext
    percent: 40
    delta: 0

# 恐惧之念：当层数达到3层时，消耗所有恐惧之念并给自己附加恐惧
- id: effect_mark_fear_consume_stacks_at_3
  trigger: OnStack
  priority: 0
  condition:
    type: every
    conditions:
      # 检查叠层后是否达到3层
      - type: evaluate
        target:
          base: stackContext
          chain:
            - type: selectPath
              arg: stacksAfter
        evaluator:
          type: compare
          operator: '>='
          value: 3
      # 检查叠层前是否小于3层（确保是刚达到阈值）
      - type: evaluate
        target:
          base: stackContext
          chain:
            - type: selectPath
              arg: stacksBefore
        evaluator:
          type: compare
          operator: '<'
          value: 3
  apply:
    - type: addMark
      target: self
      mark:
        type: entity:baseMark
        value: mark_kongju
    - type: consumeStacks
      target: mark
      value:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
# 后空翻：闪避物理攻击
- id: effect_mark_evade_physical_attacks
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: every
    conditions:
      - type: opponentUseSkill
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: same
          value: Physical
  apply:
    type: setSureMiss
    target: usingSkillContext
    priority: -1

# 后空翻： 受到的特殊伤害翻倍
- id: effect_mark_double_special_damage_taken
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 100
    delta: 0

# 星之辉: 技能特效的触发概率提高印记的层数
- id: effect_mark_increase_skill_trigger_rate_with_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addTaggedConfigModifier
    target:
      base: self
    tag: skill_effect_probability
    modifierType: delta
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: selectAttribute$
            arg: stack

# 音波：当叠层后层数大于100层时，消耗100层印记并对自身造成100点伤害
- id: effect_mark_explode_on_stack_over_100
  trigger: OnStack
  priority: 0
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: evaluate
        target:
          base: stackContext
          chain:
            - type: selectPath
              arg: stacksAfter
        evaluator:
          type: compare
          operator: '>='
          value: 100
  apply:
    - type: dealDamage
      target: self
      value:
        type: raw:number
        configId: yinbo_damage_value
        value: 100
    - type: consumeStacks
      target: mark
      value:
        type: raw:number
        configId: yinbo_consume_stacks_value
        value: 100

# 噪音：下一次使用技能的命中率减少该印记的层数
- id: effect_mark_reduce_accuracy_next_skill_with_stack
  trigger: BeforeUseSkillCheck
  priority: 0
  condition:
    type: checkSelf
  apply:
    - type: addAccuracy
      target: usingSkillContext
      value:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
            - type: multiply
              arg: -1
    - type: destroyMark
      target: mark

# 蓝宝石: 使下一个红宝石之光附加200点固伤
- id: effect_mark_hongbaoshizhiguang_add_200_fixed_damage
  trigger: OnBeforeCalculateDamage
  priority: 0
  consumesStacks: 1
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: same
          value: skill_hongbaoshizhiguang
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: raw:number
      configId: hongbaoshi_fixed_damage_value
      value: 200

# 红宝石: 使下一个蓝宝石之力附加200点固伤
- id: effect_mark_lanbaoshizhiguang_add_200_fixed_damage
  trigger: OnBeforeCalculateDamage
  priority: 0
  consumesStacks: 1
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: same
          value: skill_lanbaoshizhili
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: raw:number
      configId: lanbaoshi_fixed_damage_value
      value: 200

# 流星盾: 完全抵挡下一次特攻伤害
- id: effect_mark_block_next_special_damage
  trigger: OnBeforeCalculateDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  apply:
    - type: preventDamage
      target: damageContext
    - type: destroyMark
      target: mark

# 沙鹤之力: 造成伤害增加35%
- id: effect_mark_increase_damage_dealt_35_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  condition:
    type: selfUseSkill
  apply:
    type: addModified
    target: damageContext
    percent: 35
    delta: 0

# 沙之网: 受到的特攻伤害减少层数的数值
- id: effect_mark_special_damage_reduction_with_stack
  trigger: OnBeforeCalculateDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: selectAttribute$
            arg: stack

# 蓄力: 为自己所有的攻击技能添加20x层数的威力的增幅
- id: effect_mark_amplify_power_20x_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addSkillAttributeModifier
    target:
      base: selfSkills
      chain:
        - type: whereAttr
          extractor:
            type: dynamic
            arg: category
          evaluator:
            type: notSame
            value: Status
    attribute: power
    modifierType: delta
    value:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: selectAttribute$
            arg: stack
          - type: multiply
            arg: 20

# 武者之心: 每层会增加受到的伤害15% 对方技能命中后转移给对方
- id: effect_mark_increase_damage_taken_15_percent_per_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg:
              type: raw:number
              configId: mark_increase_damage_taken_per_stack
              value: 15
    delta: 0

- id: effect_mark_transfer_to_opponent_on_hit
  trigger: OnHit
  condition:
    type: selfBeSkillTarget
  priority: 0
  apply:
    - type: transferMark
      target: opponent
      mark:
        type: dynamic
        selector:
          base: mark
    - type: addStacks
      target: mark
      value: 1

# 绝影: 使得下一个极光附带200点固伤
- id: effect_mark_jiguang_add_200_damage
  trigger: OnBeforeCalculateDamage
  priority: 0
  consumesStacks: 1
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: same
          value: skill_jiguang
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: raw:number
      configId: jiguang_fixed_damage_value
      value: 200

# 极光: 使得下一个绝影附带200点固伤
- id: effect_mark_jueying_add_200_damage
  trigger: OnBeforeCalculateDamage
  priority: 0
  consumesStacks: 1
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: same
          value: skill_jueying
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: raw:number
      configId: jueying_fixed_damage_value
      value: 200

# 影之斗气/闪光搏击: 受到的伤害增加50%
- id: effect_mark_increase_damage_taken_50_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 50
    delta: 0

# 双刃追击: 使下一个双刃斩额外连击两次
- id: effect_mark_shuangrenzhan_add_2_hits
  trigger: BeforeMultiHit
  priority: 0
  consumesStacks: 1
  condition:
    type: every
    conditions:
      - type: selfBeSkillTarget
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: same
          value: skill_shuangrenzhan
  apply:
    type: addMultihitResult
    target: usingSkillContext
    value: 2

# 白牙: 使得下一个白牙破附带基于层数的伤害
- id: effect_mark_baiyapo_add_damage_based_on_stack
  trigger: OnBeforeCalculateDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: same
          value: skill_baiyapo
  apply:
    - type: addModified
      target: damageContext
      percent: 0
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: selectPath
              arg: stack
    - type: destroyMark
      target: mark

# 黑牙: 使得下一个黑牙破附带基于层数的伤害
- id: effect_mark_heiyapao_add_damage_based_on_stack
  trigger: OnBeforeCalculateDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: same
          value: skill_heiyapo
  apply:
    - type: addModified
      target: damageContext
      percent: 0
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: selectPath
              arg: stack
    - type: destroyMark
      target: mark

# 攻守兼备: 使得下一个受到的伤害减少50%
- id: effect_mark_reduce_next_skill_damage_50_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  consumesStacks: 1
  condition:
    type: selfBeDamaged
  apply:
    type: addModified
    target: damageContext
    percent: -50
    delta: 0

# 仁者之心: 每层减少受到的伤害15%,对方技能命中后转移给对方
- id: effect_mark_reduce_damage_taken_15_percent_per_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg:
              type: raw:number
              configId: mark_reduce_damage_taken_per_stack
              value: 15
          - type: multiply
            arg: -1
    delta: 0

# 双破追击: 使下一个双破斩额外连击两次
- id: effect_mark_shuangpozhan_add_2_hits
  trigger: BeforeMultiHit
  priority: 0
  consumesStacks: 1
  condition:
    type: every
    conditions:
      - type: selfBeSkillTarget
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: same
          value: skill_shuangpozhan
  apply:
    type: addMultihitResult
    target: usingSkillContext
    value: 2

# 蓄力冲击：下一次造成伤害增加50%
- id: effect_mark_xulichongji_add_50_percent_damage
  trigger: OnBeforeCalculateDamage
  priority: 0
  consumesStacks: 1
  condition:
    type: selfUseSkill
  apply:
    type: addModified
    target: damageContext
    percent: 50
    delta: 0

# 分身术：减少30%受到的伤害
- id: effect_mark_reduce_damage_30_percent
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -30
    delta: 0

# 接力：使得换场后的下一只精灵获得25层伤害增加
- id: effect_mark_add_damage_increase_25_on_switch_in
  trigger: OnSwitchOut
  priority: 0
  apply:
    type: addMark
    target:
      base: switchPetContext
      chain:
        - type: selectPath
          arg: switchInPet
    mark:
      type: entity:baseMark
      value: mark_shanghaizengjia
    stack: 25
  condition:
    type: selfSwitchOut

# 大地之佑: 每层增加25点物防
- id: effect_mark_def_boost_25_per_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: def
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg: 25

# 沙暴之力: 每层增加25点特攻
- id: effect_mark_spa_boost_25_per_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: spa
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg: 25

# 泰坦之护：受到伤害不超过自身最大体力的1/2
- id: effect_mark_damage_cap_half_max_hp
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addThreshold
    target: damageContext
    min: 0
    max:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 2

# 花粉弥漫：每层受到伤害减少15%
- id: effect_mark_reduce_damage_15_percent_per_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg:
              type: raw:number
              configId: mark_reduce_damage_per_stack
              value: -15
    delta: 0

# 花粉弥漫：回合结束时层数+1
- id: effect_mark_add_stack_on_turn_end
  trigger: TurnEnd
  priority: 0
  apply:
    type: addStacks
    target: mark
    value: 1
  condition:
    type: petIsActive
# 龙鳞甲：反弹特攻伤害50%
- id: effect_mark_longlinjia_reflect_damage_50_percent
  trigger: OnDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageType
        evaluator:
          type: same
          value: Special
  priority: 0
  apply:
    - type: dealDamage
      target: opponent
      value:
        type: dynamic
        selector:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
            - type: multiply
              arg: 0.5
# 受到伤害增加: 每层增加1%受到的伤害
- id: effect_mark_add_damage_taken_with_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: select
              arg:
                type: base
                arg: stack
      delta: 0
    - type: destroyMark
      target: mark
# 黑暗物质：每层降低5点命中率
- id: effect_mark_reduce_accuracy_5_per_stack
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: accuracy
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg:
            type: raw:number
            configId: reduce_accuracy_per_stack
            value: -5
# 影缝：当成功闪避且环境为夜幕时，使自身获得50点回复3回合
- id: effect_mark_yingfeng_heal_50_on_evasion_in_yemu
  trigger: OnMiss
  priority: 0
  apply:
    type: addMark
    target: self
    mark:
      type: entity:baseMark
      value: mark_huifu_50_per_turn
    duration: 3
  condition:
    type: every
    conditions:
      - type: selfBeSkillTarget
      - type: evaluate
        target:
          base: battle
          chain:
            - type: select
              arg:
                type: base
                arg: marks
            - type: flat
            - type: whereAttr
              extractor: baseId
              evaluator:
                type: same
                value: mark_global_yemu
        evaluator:
          type: exist
# 影缝: 被对方打中或者闪避成功后，消失
- id: effect_mark_yingfeng_destroy_on_hit_or_miss
  trigger: [OnHit, OnMiss]
  priority: -1
  apply:
    type: destroyMark
    target: mark
  condition:
    type: every
    conditions:
      - type: opponentUseSkill
      - type: selfBeSkillTarget
# 不谐暗光：受到的光属性伤害减半
- id: effect_mark_buxieanguang_reduce_light_damage_half
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -50
    delta: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: element
        evaluator:
          type: same
          value: Light
# 闪电烙印：如果当前使用的技能为闪电烙印，消耗自身使自身获得麻痹
- id: effect_mark_shandianluoyin_paralyze
  trigger: OnHit
  priority: 0
  apply:
    - type: addMark
      target: self
      mark:
        type: entity:baseMark
        value: mark_mabi
    - type: destroyMark
      target: mark
  condition:
    type: every
    conditions:
      - type: selfBeSkillTarget
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: select
              arg:
                type: dynamic
                arg: skill.baseId
        evaluator:
          type: same
          value: skill_shandianluoyin
# 蓄电：使自身的电系技能威力提升70%
- id: effect_mark_amplify_electric_skill_70
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addSkillAttributeModifier
    target:
      base: selfSkills
      chain:
        - type: whereAttr
          extractor:
            type: dynamic
            arg: element
          evaluator:
            type: same
            value: Electric
    attribute: power
    modifierType: percent
    value: 70
# 精神错乱：自身承受25%的自损伤害
- id: effect_mark_self_damage_25_percent
  trigger: OnDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
      - # 防止无限递归
        type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: source
        evaluator:
          type: notSame
          value:
            type: dynamic
            selector: mark
  priority: 0
  apply:
    type: dealDamage
    target: self
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: multiply
            arg: 0.25

# 真实幻想：防止幻想被消耗
- id: effect_mark_zhenshihuanxiang_prevent_consume
  trigger: OnBeforeConsumeStack
  priority: 100 # 高优先级确保在其他效果之前执行
  condition:
    type: every
    conditions:
      # 检查当前mark是否是真实幻想
      - type: checkSelf
      # 检查被消耗的mark是否是幻想
      - type: evaluate
        target:
          base: consumeStackContext
          chain:
            - type: selectPath
              arg: mark.base.id
        evaluator:
          type: same
          value: mark_huanxiang
  apply:
    type: disableContext
    target: consumeStackContext

# 会心：下一次使用非属性类技能必定暴击
- id: effect_mark_next_non_status_skill_sure_crit
  trigger: AfterUseSkillCheck
  priority: 0
  consumesStacks: 1
  condition:
    type: every
    conditions:
      - type: checkSelf
      - type: selfUseSkill
      - type: evaluate
        target:
          base: usingSkillContext
          chain:
            - type: selectPath
              arg: skill
            - type: selectPath
              arg: category
        evaluator:
          type: notSame
          value: Status
  apply:
    - type: setSureCrit
      target: usingSkillContext
      priority: 1

# 晚安：每回合结束时恢复40点体力
- id: effect_mark_heal_40_per_turn
  trigger: TurnEnd
  priority: 0
  apply:
    type: heal
    target: self
    value: 40
  condition:
    type: petIsActive

# 晚安：受到攻击时，消耗自身并使自身获得会心
- id: effect_mark_add_crit_on_damage
  trigger: PostDamage
  priority: 0
  apply:
    - type: addMark
      target: self
      mark:
        type: entity:baseMark
        value: mark_huixin
    - type: destroyMark
      target: mark
  condition:
    type: every
    conditions:
      - type: selfBeDamaged

# 招财：造成的伤害提升25%
- id: effect_mark_increase_damage_dealt_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 25
    delta: 0
  condition:
    type: selfUseSkill

# 进宝：受到的伤害减少25%
- id: effect_mark_reduce_damage_taken_25_percent
  trigger: OnBeforeCalculateDamage
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: -25
    delta: 0
  condition:
    type: selfBeDamaged

# 迅捷：为所有技能添加先制+1的modifier
- id: effect_mark_priority_add_1
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addSkillAttributeModifier
    target:
      base: selfSkills
    attribute: priority
    modifierType: delta
    value: 1
# 强攻：每层添加物攻值35点
- id: effect_mark_add_atk_stack_x35
  trigger: OnMarkCreated
  priority: 0
  apply:
    type: addDynamicAttributeModifier
    target:
      base: self
    stat: atk
    modifierType: delta
    observableValue:
      base: mark
      chain:
        - type: selectAttribute$
          arg: stack
        - type: multiply
          arg: 35
# 羽刃反弹：反弹受到伤害的1/3
- id: effect_mark_fantan_reflect_damage_1_3
  trigger: OnDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: dealDamage
    target: opponent
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: multiply
            arg: 0.33
# 定时炸弹: 结束时受到50点固伤
- id: effect_mark_dingshizhadan_on_duration_end_deal_damage_50
  trigger: OnMarkDurationEnd
  priority: 0
  condition:
    type: petIsActive
  apply:
    type: dealDamage
    target:
      base: self
    value: 50
# 时间炸弹: 结束时受到100点固伤
- id: effect_mark_shijianzhadan_on_duration_end_deal_damage_50
  trigger: OnMarkDurationEnd
  priority: 0
  condition:
    type: petIsActive
  apply:
    type: dealDamage
    target:
      base: self
    value: 100
# 时光重生: 受到致死打击时恢复自身最大体力的1/4
- id: effect_mark_shiguangchongsheng
  trigger: PostDamage
  priority: 0
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '<='
          value: 0
  apply:
    type: setValue
    target:
      base: self
      chain:
        - type: selectProp
          arg: currentHp
    value:
      type: dynamic
      selector:
        base: self
        chain:
          - type: select
            arg:
              type: base
              arg: maxHp
          - type: divide
            arg: 4
# 时间护盾: 减少受到的伤害75点，如果有时间法则，则150点
- id: effect_mark_shijianhudun_reduce_damage_75_if_has_mark_shijianfaze_150
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfBeDamaged
  priority: 0
  apply:
    type: addModified
    target: damageContext
    percent: 0
    delta:
      type: conditional
      trueValue: -150
      falseValue: -75
      condition:
        type: selfHasMark
        baseId: mark_shijianfaze
# 越挫越勇: 体力＜75%时伤害提升30% ＜50%时提升50% ＜25%时提升70%
- id: effect_mark_damage_boost_based_on_hp_percentage
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '<'
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: multiply
                  arg: 0.75
  priority: 0
  apply:
    type: addModified
    target: damageContext
    delta: 0
    percent:
      type: conditional
      trueValue: 70
      falseValue:
        type: conditional
        trueValue: 50
        falseValue:
          type: conditional
          trueValue: 30
          falseValue: 0
          condition:
            type: evaluate
            target:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: currentHp
            evaluator:
              type: compare
              operator: '<'
              value:
                type: dynamic
                selector:
                  base: self
                  chain:
                    - type: select
                      arg:
                        type: base
                        arg: maxHp
                    - type: multiply
                      arg: 0.75
        condition:
          type: evaluate
          target:
            base: self
            chain:
              - type: select
                arg:
                  type: base
                  arg: currentHp
          evaluator:
            type: compare
            operator: '<'
            value:
              type: dynamic
              selector:
                base: self
                chain:
                  - type: select
                    arg:
                      type: base
                      arg: maxHp
                  - type: multiply
                    arg: 0.5
      condition:
        type: evaluate
        target:
          base: self
          chain:
            - type: select
              arg:
                type: base
                arg: currentHp
        evaluator:
          type: compare
          operator: '<'
          value:
            type: dynamic
            selector:
              base: self
              chain:
                - type: select
                  arg:
                    type: base
                    arg: maxHp
                - type: multiply
                  arg: 0.25
# 火环之心: 每层火环添加10%造成的伤害
- id: effect_mark_increase_damage_10_percent_per_stack
  trigger: OnBeforeCalculateDamage
  condition:
    type: selfUseSkill
  priority: 0
  apply:
    type: addModified
    target: damageContext
    delta: 0
    percent:
      type: dynamic
      selector:
        base: mark
        chain:
          - type: select
            arg:
              type: base
              arg: stack
          - type: multiply
            arg: 10
# 光武神通/光武灵通：累积受到的伤害的50%并转化为层数
- id: effect_mark_stack_mark_with_damage
  trigger: OnDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
        evaluator:
          type: compare
          operator: '>'
          value: 0
  priority: 0
  apply:
    type: addStacks
    target: mark
    value:
      type: dynamic
      selector:
        base: damageContext
        chain:
          - type: selectPath
            arg: damageResult
          - type: multiply
            arg: 0.5
# 光武神通: 造成伤害时，附加当前层数的伤害并消耗自身
- id: effect_mark_add_damage_with_stack_and_consume
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfUseSkill
      - type: evaluate
        target:
          base: mark
          chain:
            - type: selectPath
              arg: stack
        evaluator:
          type: compare
          operator: '>'
          value: 1
  priority: 0
  apply:
    - type: addModified
      target: damageContext
      percent: 0
      delta:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: selectPath
              arg: stack
    - type: destroyMark
      target: mark
# 光武灵通: 回合结束时，若该印记的层数大于1，消耗自身并转化为光护盾
- id: effect_mark_add_guanghudun_on_turn_end_with_stack
  trigger: TurnEnd
  condition:
    type: every
    conditions:
      - type: petIsActive
      - type: evaluate
        target:
          base: mark
          chain:
            - type: selectPath
              arg: stack
        evaluator:
          type: compare
          operator: '>'
          value: 1
  priority: 0
  apply:
    - type: addMark
      target: self
      mark:
        type: entity:baseMark
        value: mark_guanghudun
      stack:
        type: dynamic
        selector:
          base: mark
          chain:
            - type: selectPath
              arg: stack
    - type: destroyMark
      target: mark
# 灵通传达: 受到伤害低于75点时，减少对手15点怒气
- id: effect_mark_reduce_opponent_rage_15_if_damage_below_75
  trigger: OnBeforeCalculateDamage
  condition:
    type: every
    conditions:
      - type: selfBeDamaged
      - type: evaluate
        target:
          base: damageContext
          chain:
            - type: selectPath
              arg: damageResult
        evaluator:
          type: compare
          operator: '<'
          value: 75
  priority: 0
  apply:
    type: addRage
    target: opponent
    value: -15
