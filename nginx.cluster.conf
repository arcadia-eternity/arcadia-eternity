events {
    worker_connections 1024;
}

http {
    # 基础配置
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 上游服务器定义
    upstream arcadia_backend {
        # 负载均衡策略：least_conn（最少连接）
        least_conn;
        
        # 应用实例
        server app1:8102 max_fails=3 fail_timeout=30s;
        server app2:8102 max_fails=3 fail_timeout=30s;
        server app3:8102 max_fails=3 fail_timeout=30s;
        
        # 健康检查
        keepalive 32;
    }
    
    # WebSocket上游（用于Socket.IO）
    upstream arcadia_websocket {
        # 使用ip_hash确保WebSocket连接的粘性
        ip_hash;
        
        server app1:8102 max_fails=3 fail_timeout=30s;
        server app2:8102 max_fails=3 fail_timeout=30s;
        server app3:8102 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    
    # 主服务器配置
    server {
        listen 80;
        server_name localhost;
        
        # 客户端最大请求体大小
        client_max_body_size 10M;
        
        # 代理缓冲区配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 代理超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 代理头部配置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 健康检查端点
        location /health {
            proxy_pass http://arcadia_backend;
            access_log off;
        }
        
        # Prometheus指标端点
        location /metrics {
            proxy_pass http://arcadia_backend;
            access_log off;
        }
        
        # 集群状态端点
        location /cluster/status {
            proxy_pass http://arcadia_backend;
        }
        
        # Socket.IO WebSocket连接
        location /socket.io/ {
            proxy_pass http://arcadia_websocket;
            
            # WebSocket升级头部
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # WebSocket特定配置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 禁用缓冲以减少延迟
            proxy_buffering off;
            proxy_cache off;
            
            # 超时配置
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }
        
        # API路由（带限流）
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://arcadia_backend;
        }
        
        # 认证API（更严格的限流）
        location /api/v1/auth/ {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://arcadia_backend;
        }
        
        # API文档
        location /api-docs {
            proxy_pass http://arcadia_backend;
        }
        
        location /api-docs.json {
            proxy_pass http://arcadia_backend;
        }
        
        # 默认路由
        location / {
            proxy_pass http://arcadia_backend;
        }
        
        # 错误页面
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # 状态监控服务器（可选）
    server {
        listen 8081;
        server_name localhost;
        
        # Nginx状态
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # 上游状态
        location /upstream_status {
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            return 200 "Upstream status check";
            add_header Content-Type text/plain;
        }
    }
}
