name: Release Please

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: write
  id-token: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Run release-please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          # 自定义配置
          config-file: .github/release-please-config.json
          manifest-file: .release-please-manifest.json

  # 当创建release时，自动合并到production分支
  merge-to-production:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create or update production branch
        run: |
          # 检查production分支是否存在
          if git show-ref --verify --quiet refs/remotes/origin/production; then
            echo "Production branch exists, checking out..."
            git checkout production
            git pull origin production
          else
            echo "Creating production branch..."
            git checkout -b production
          fi

      - name: Merge main to production
        run: |
          echo "Merging main to production for release ${{ needs.release-please.outputs.tag_name }}"
          git merge origin/main --no-ff -m "chore: merge main to production for release ${{ needs.release-please.outputs.tag_name }}"

      - name: Push production branch
        run: |
          git push origin production

      - name: Trigger production workflows
        uses: actions/github-script@v7
        with:
          script: |
            // 触发生产镜像构建
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build-production-image.yml',
              ref: 'production',
              inputs: {
                version: '${{ needs.release-please.outputs.version }}'
              }
            });

            // 触发Tauri构建
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'release.yaml',
              ref: 'production',
              inputs: {
                version: '${{ needs.release-please.outputs.tag_name }}'
              }
            });

            console.log('Triggered production workflows for version ${{ needs.release-please.outputs.tag_name }}');

      - name: Create production deployment comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request?.number || 1,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Production Deployment Triggered**
              
              Release \`${{ needs.release-please.outputs.tag_name }}\` has been created and merged to production branch.
              
              **Deployment Status:**
              - ✅ Production branch updated
              - 🔄 Cloudflare Pages deployment in progress
              - 🔄 Server deployment in progress
              - 🔄 Tauri build in progress
              
              **Links:**
              - [Release Notes](https://github.com/${{ github.repository }}/releases/tag/${{ needs.release-please.outputs.tag_name }})
              - [Production Site](https://yourdomain.com) (will update shortly)
              `
            });
